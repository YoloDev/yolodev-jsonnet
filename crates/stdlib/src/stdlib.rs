//! Generated file, do not edit by hand, see `xtask/src/codegen`

pub(crate) fn get() -> ::jsonnet_core_lang::CoreExpr {
  {
    #[allow(non_snake_case)]
    mod token_fns {
      use jsonnet_core_lang::*;
      pub(super) fn get_000001() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("isString"))
      }
      pub(super) fn get_self() -> CoreExpr {
        CoreExpr::SelfValue(SelfCoreExpr::new())
      }
      pub(super) fn get_000006() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'x' not bound"))
      }
      pub(super) fn get_000005() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_ident_x_8() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 8u32)
        }))
      }
      pub(super) fn get_000004() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000005(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000010() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'str' not bound"))
      }
      pub(super) fn get_000009() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000012() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'base' not bound"))
      }
      pub(super) fn get_000011() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_ident_base_10() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("base", 10u32)
        }))
      }
      pub(super) fn get_number_0_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(0f64))
      }
      pub(super) fn get_000017() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000015() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000017(),
        ))
      }
      pub(super) fn get_number_16_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(16f64))
      }
      pub(super) fn get_000014() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000015(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_ident_std_3() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("std", 3u32)
        }))
      }
      pub(super) fn get_000024() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("codepoint"))
      }
      pub(super) fn get_member_std_3_codepoint() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000024()))
      }
      pub(super) fn get_000025() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("0"))
      }
      pub(super) fn get_000021() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000028() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("A"))
      }
      pub(super) fn get_000027() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000031() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("a"))
      }
      pub(super) fn get_000030() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000035() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'aggregate' not bound"))
      }
      pub(super) fn get_000034() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000037() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'char' not bound"))
      }
      pub(super) fn get_000036() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_ident_char_16() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("char", 16u32)
        }))
      }
      pub(super) fn get_000039() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_code_17() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("code", 17u32)
        }))
      }
      pub(super) fn get_ident_lower_a_code_13() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("lower_a_code", 13u32)
        }))
      }
      pub(super) fn get_000043() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000047() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_number_10_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(10f64))
      }
      pub(super) fn get_000046() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000047(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_ident_upper_a_code_12() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("upper_a_code", 12u32)
        }))
      }
      pub(super) fn get_000050() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000053() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000052() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000053(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_ident_zero_code_11() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zero_code", 11u32)
        }))
      }
      pub(super) fn get_000054() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000049() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000050(), get_000052(), get_000054()))
      }
      pub(super) fn get_000042() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000043(), get_000046(), get_000049()))
      }
      pub(super) fn get_ident_digit_18() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("digit", 18u32)
        }))
      }
      pub(super) fn get_000060() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000058() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000060(),
        ))
      }
      pub(super) fn get_000057() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000058(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_ident_aggregate_15() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aggregate", 15u32)
        }))
      }
      pub(super) fn get_000062() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000061() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000062(),
        ))
      }
      pub(super) fn get_000067() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("mod"))
      }
      pub(super) fn get_member_std_3_mod() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000067()))
      }
      pub(super) fn get_000068() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("%s is not a base %d integer"))
      }
      pub(super) fn get_ident_str_9() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 9u32)
        }))
      }
      pub(super) fn get_000069() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000065() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000069()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000064() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000065()))
      }
      pub(super) fn get_000056() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000057(), get_000061(), get_000064()))
      }
      pub(super) fn get_000041() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000042(),
          )],
          get_000056(),
        ))
      }
      pub(super) fn get_000038() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000039(),
          )],
          get_000041(),
        ))
      }
      pub(super) fn get_000033() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000034(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000036(),
            ),
          ],
          get_000038(),
        ))
      }
      pub(super) fn get_000073() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("foldl"))
      }
      pub(super) fn get_member_std_3_foldl() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000073()))
      }
      pub(super) fn get_ident_addDigit_14() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("addDigit", 14u32)
        }))
      }
      pub(super) fn get_000077() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("stringChars"))
      }
      pub(super) fn get_member_std_3_stringChars() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000077()))
      }
      pub(super) fn get_000075() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000071() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000075(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000032() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000033(),
          )],
          get_000071(),
        ))
      }
      pub(super) fn get_000029() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000030(),
          )],
          get_000032(),
        ))
      }
      pub(super) fn get_000026() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000027(),
          )],
          get_000029(),
        ))
      }
      pub(super) fn get_000020() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000021(),
          )],
          get_000026(),
        ))
      }
      pub(super) fn get_000080() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("integer base %d invalid"))
      }
      pub(super) fn get_000079() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000078() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000079()))
      }
      pub(super) fn get_000013() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000014(), get_000020(), get_000078()))
      }
      pub(super) fn get_000008() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000009(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000011(),
            ),
          ],
          get_000013(),
        ))
      }
      pub(super) fn get_000081() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
        ))
      }
      pub(super) fn get_ident_genid_arr_19() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 19u32)
        }))
      }
      pub(super) fn get_000084() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_base64_table_6() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("base64_table", 6u32)
        }))
      }
      pub(super) fn get_ident_i_20() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 20u32)
        }))
      }
      pub(super) fn get_000086() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000083() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000084(),
          )],
          get_000086(),
        ))
      }
      pub(super) fn get_000090() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000089() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000090(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000094() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("range"))
      }
      pub(super) fn get_member_std_3_range() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000094()))
      }
      pub(super) fn get_number_63_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(63f64))
      }
      pub(super) fn get_000092() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000098() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("join"))
      }
      pub(super) fn get_member_std_3_join() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000098()))
      }
      pub(super) fn get_000099() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000102() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("makeArray"))
      }
      pub(super) fn get_member_std_3_makeArray() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000102()))
      }
      pub(super) fn get_000105() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("length"))
      }
      pub(super) fn get_member_std_3_length() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000105()))
      }
      pub(super) fn get_ident_genid_arr_21() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 21u32)
        }))
      }
      pub(super) fn get_000103() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000109() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter '$i' not bound"))
      }
      pub(super) fn get_000108() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_22() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 22u32)
        }))
      }
      pub(super) fn get_000111() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000114() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000113() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000114()]))
      }
      pub(super) fn get_000110() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000111(),
          )],
          get_000113(),
        ))
      }
      pub(super) fn get_000107() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000108(),
          )],
          get_000110(),
        ))
      }
      pub(super) fn get_000100() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000103(), get_000107()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000096() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000099(), get_000100()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000091() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000092(),
          )],
          get_000096(),
        ))
      }
      pub(super) fn get_000082() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000083(),
          get_000089(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000091(),
        ))
      }
      pub(super) fn get_000117() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'v' not bound"))
      }
      pub(super) fn get_000116() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_000120() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("equals"))
      }
      pub(super) fn get_member_std_3_equals() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000120()))
      }
      pub(super) fn get_000123() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("type"))
      }
      pub(super) fn get_member_std_3_type() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000123()))
      }
      pub(super) fn get_ident_v_23() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 23u32)
        }))
      }
      pub(super) fn get_000121() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_v_23()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000125() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("string"))
      }
      pub(super) fn get_000118() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000121(), get_000125()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000115() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 23u32) },
            get_000116(),
          )],
          get_000118(),
        ))
      }
      pub(super) fn get_000002() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000004(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000008(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000082(),
            ),
          ],
          get_000115(),
        ))
      }
      pub(super) fn get_000126() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("isNumber"))
      }
      pub(super) fn get_000129() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000128() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000129(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000131() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000132() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000136() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000135() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000136(),
        ))
      }
      pub(super) fn get_000134() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000135(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000138() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000140() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000142() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000145() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000146() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000148() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000151() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000153() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000152() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000153(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000155() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000157() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000156() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000157(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000158() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000154() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000155(), get_000156(), get_000158()))
      }
      pub(super) fn get_000150() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000151(), get_000152(), get_000154()))
      }
      pub(super) fn get_000162() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000161() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000162(),
        ))
      }
      pub(super) fn get_000160() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000161(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000164() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000163() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000164(),
        ))
      }
      pub(super) fn get_000167() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000166() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000167()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000165() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000166()))
      }
      pub(super) fn get_000159() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000160(), get_000163(), get_000165()))
      }
      pub(super) fn get_000149() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000150(),
          )],
          get_000159(),
        ))
      }
      pub(super) fn get_000147() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000148(),
          )],
          get_000149(),
        ))
      }
      pub(super) fn get_000144() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000145(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000146(),
            ),
          ],
          get_000147(),
        ))
      }
      pub(super) fn get_000169() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000168() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000169(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000143() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000144(),
          )],
          get_000168(),
        ))
      }
      pub(super) fn get_000141() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000142(),
          )],
          get_000143(),
        ))
      }
      pub(super) fn get_000139() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000140(),
          )],
          get_000141(),
        ))
      }
      pub(super) fn get_000137() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000138(),
          )],
          get_000139(),
        ))
      }
      pub(super) fn get_000171() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000170() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000171()))
      }
      pub(super) fn get_000133() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000134(), get_000137(), get_000170()))
      }
      pub(super) fn get_000130() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000131(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000132(),
            ),
          ],
          get_000133(),
        ))
      }
      pub(super) fn get_000174() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000175() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000173() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000174(),
          )],
          get_000175(),
        ))
      }
      pub(super) fn get_000177() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000176() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000177(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000179() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000181() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000183() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000185() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000187() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000189() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000188() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000189()]))
      }
      pub(super) fn get_000186() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000187(),
          )],
          get_000188(),
        ))
      }
      pub(super) fn get_000184() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000185(),
          )],
          get_000186(),
        ))
      }
      pub(super) fn get_000182() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000183(), get_000184()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000180() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000181(), get_000182()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000178() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000179(),
          )],
          get_000180(),
        ))
      }
      pub(super) fn get_000172() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000173(),
          get_000176(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000178(),
        ))
      }
      pub(super) fn get_000191() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_24() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 24u32)
        }))
      }
      pub(super) fn get_000193() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_v_24()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000195() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("number"))
      }
      pub(super) fn get_000192() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000193(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000190() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 24u32) },
            get_000191(),
          )],
          get_000192(),
        ))
      }
      pub(super) fn get_000127() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000128(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000130(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000172(),
            ),
          ],
          get_000190(),
        ))
      }
      pub(super) fn get_000196() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("isBoolean"))
      }
      pub(super) fn get_000199() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000198() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000199(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000201() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000202() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000206() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000205() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000206(),
        ))
      }
      pub(super) fn get_000204() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000205(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000208() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000210() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000212() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000215() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000216() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000218() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000221() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000223() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000222() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000223(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000225() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000227() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000226() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000227(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000228() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000224() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000225(), get_000226(), get_000228()))
      }
      pub(super) fn get_000220() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000221(), get_000222(), get_000224()))
      }
      pub(super) fn get_000232() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000231() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000232(),
        ))
      }
      pub(super) fn get_000230() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000231(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000234() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000233() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000234(),
        ))
      }
      pub(super) fn get_000237() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000236() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000237()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000235() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000236()))
      }
      pub(super) fn get_000229() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000230(), get_000233(), get_000235()))
      }
      pub(super) fn get_000219() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000220(),
          )],
          get_000229(),
        ))
      }
      pub(super) fn get_000217() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000218(),
          )],
          get_000219(),
        ))
      }
      pub(super) fn get_000214() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000215(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000216(),
            ),
          ],
          get_000217(),
        ))
      }
      pub(super) fn get_000239() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000238() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000239(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000213() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000214(),
          )],
          get_000238(),
        ))
      }
      pub(super) fn get_000211() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000212(),
          )],
          get_000213(),
        ))
      }
      pub(super) fn get_000209() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000210(),
          )],
          get_000211(),
        ))
      }
      pub(super) fn get_000207() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000208(),
          )],
          get_000209(),
        ))
      }
      pub(super) fn get_000241() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000240() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000241()))
      }
      pub(super) fn get_000203() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000204(), get_000207(), get_000240()))
      }
      pub(super) fn get_000200() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000201(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000202(),
            ),
          ],
          get_000203(),
        ))
      }
      pub(super) fn get_000244() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000245() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000243() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000244(),
          )],
          get_000245(),
        ))
      }
      pub(super) fn get_000247() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000246() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000247(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000249() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000251() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000253() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000255() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000257() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000259() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000258() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000259()]))
      }
      pub(super) fn get_000256() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000257(),
          )],
          get_000258(),
        ))
      }
      pub(super) fn get_000254() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000255(),
          )],
          get_000256(),
        ))
      }
      pub(super) fn get_000252() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000253(), get_000254()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000250() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000251(), get_000252()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000248() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000249(),
          )],
          get_000250(),
        ))
      }
      pub(super) fn get_000242() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000243(),
          get_000246(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000248(),
        ))
      }
      pub(super) fn get_000261() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_25() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 25u32)
        }))
      }
      pub(super) fn get_000263() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_v_25()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000265() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("boolean"))
      }
      pub(super) fn get_000262() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000263(), get_000265()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000260() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 25u32) },
            get_000261(),
          )],
          get_000262(),
        ))
      }
      pub(super) fn get_000197() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000198(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000200(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000242(),
            ),
          ],
          get_000260(),
        ))
      }
      pub(super) fn get_000266() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("isObject"))
      }
      pub(super) fn get_000269() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000268() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000269(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000271() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000272() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000276() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000275() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000276(),
        ))
      }
      pub(super) fn get_000274() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000275(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000278() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000280() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000282() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000285() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000286() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000288() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000291() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000293() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000292() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000293(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000295() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000297() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000296() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000297(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000298() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000294() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000295(), get_000296(), get_000298()))
      }
      pub(super) fn get_000290() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000291(), get_000292(), get_000294()))
      }
      pub(super) fn get_000302() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000301() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000302(),
        ))
      }
      pub(super) fn get_000300() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000301(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000304() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000303() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000304(),
        ))
      }
      pub(super) fn get_000307() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000306() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000307()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000305() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000306()))
      }
      pub(super) fn get_000299() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000300(), get_000303(), get_000305()))
      }
      pub(super) fn get_000289() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000290(),
          )],
          get_000299(),
        ))
      }
      pub(super) fn get_000287() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000288(),
          )],
          get_000289(),
        ))
      }
      pub(super) fn get_000284() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000285(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000286(),
            ),
          ],
          get_000287(),
        ))
      }
      pub(super) fn get_000309() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000308() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000309(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000283() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000284(),
          )],
          get_000308(),
        ))
      }
      pub(super) fn get_000281() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000282(),
          )],
          get_000283(),
        ))
      }
      pub(super) fn get_000279() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000280(),
          )],
          get_000281(),
        ))
      }
      pub(super) fn get_000277() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000278(),
          )],
          get_000279(),
        ))
      }
      pub(super) fn get_000311() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000310() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000311()))
      }
      pub(super) fn get_000273() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000274(), get_000277(), get_000310()))
      }
      pub(super) fn get_000270() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000271(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000272(),
            ),
          ],
          get_000273(),
        ))
      }
      pub(super) fn get_000314() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000315() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000313() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000314(),
          )],
          get_000315(),
        ))
      }
      pub(super) fn get_000317() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000316() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000317(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000319() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000321() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000323() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000325() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000327() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000329() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000328() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000329()]))
      }
      pub(super) fn get_000326() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000327(),
          )],
          get_000328(),
        ))
      }
      pub(super) fn get_000324() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000325(),
          )],
          get_000326(),
        ))
      }
      pub(super) fn get_000322() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000323(), get_000324()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000320() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000321(), get_000322()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000318() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000319(),
          )],
          get_000320(),
        ))
      }
      pub(super) fn get_000312() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000313(),
          get_000316(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000318(),
        ))
      }
      pub(super) fn get_000331() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_26() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 26u32)
        }))
      }
      pub(super) fn get_000333() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_v_26()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000335() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("object"))
      }
      pub(super) fn get_000332() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000333(), get_000335()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000330() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 26u32) },
            get_000331(),
          )],
          get_000332(),
        ))
      }
      pub(super) fn get_000267() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000268(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000270(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000312(),
            ),
          ],
          get_000330(),
        ))
      }
      pub(super) fn get_000336() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("isArray"))
      }
      pub(super) fn get_000339() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000338() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000339(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000341() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000342() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000346() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000345() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000346(),
        ))
      }
      pub(super) fn get_000344() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000345(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000348() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000350() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000352() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000355() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000356() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000358() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000361() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000363() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000362() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000363(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000365() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000367() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000366() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000367(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000368() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000364() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000365(), get_000366(), get_000368()))
      }
      pub(super) fn get_000360() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000361(), get_000362(), get_000364()))
      }
      pub(super) fn get_000372() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000371() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000372(),
        ))
      }
      pub(super) fn get_000370() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000371(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000374() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000373() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000374(),
        ))
      }
      pub(super) fn get_000377() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000376() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000377()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000375() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000376()))
      }
      pub(super) fn get_000369() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000370(), get_000373(), get_000375()))
      }
      pub(super) fn get_000359() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000360(),
          )],
          get_000369(),
        ))
      }
      pub(super) fn get_000357() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000358(),
          )],
          get_000359(),
        ))
      }
      pub(super) fn get_000354() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000355(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000356(),
            ),
          ],
          get_000357(),
        ))
      }
      pub(super) fn get_000379() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000378() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000379(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000353() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000354(),
          )],
          get_000378(),
        ))
      }
      pub(super) fn get_000351() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000352(),
          )],
          get_000353(),
        ))
      }
      pub(super) fn get_000349() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000350(),
          )],
          get_000351(),
        ))
      }
      pub(super) fn get_000347() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000348(),
          )],
          get_000349(),
        ))
      }
      pub(super) fn get_000381() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000380() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000381()))
      }
      pub(super) fn get_000343() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000344(), get_000347(), get_000380()))
      }
      pub(super) fn get_000340() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000341(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000342(),
            ),
          ],
          get_000343(),
        ))
      }
      pub(super) fn get_000384() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000385() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000383() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000384(),
          )],
          get_000385(),
        ))
      }
      pub(super) fn get_000387() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000386() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000387(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000389() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000391() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000393() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000395() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000397() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000399() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000398() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000399()]))
      }
      pub(super) fn get_000396() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000397(),
          )],
          get_000398(),
        ))
      }
      pub(super) fn get_000394() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000395(),
          )],
          get_000396(),
        ))
      }
      pub(super) fn get_000392() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000393(), get_000394()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000390() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000391(), get_000392()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000388() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000389(),
          )],
          get_000390(),
        ))
      }
      pub(super) fn get_000382() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000383(),
          get_000386(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000388(),
        ))
      }
      pub(super) fn get_000401() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_27() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 27u32)
        }))
      }
      pub(super) fn get_000403() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_v_27()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000405() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("array"))
      }
      pub(super) fn get_000402() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000403(), get_000405()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000400() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 27u32) },
            get_000401(),
          )],
          get_000402(),
        ))
      }
      pub(super) fn get_000337() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000338(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000340(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000382(),
            ),
          ],
          get_000400(),
        ))
      }
      pub(super) fn get_000406() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("isFunction"))
      }
      pub(super) fn get_000409() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000408() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000409(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000411() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000412() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000416() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000415() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000416(),
        ))
      }
      pub(super) fn get_000414() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000415(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000418() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000420() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000422() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000425() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000426() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000428() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000431() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000433() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000432() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000433(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000435() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000437() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000436() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000437(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000438() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000434() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000435(), get_000436(), get_000438()))
      }
      pub(super) fn get_000430() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000431(), get_000432(), get_000434()))
      }
      pub(super) fn get_000442() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000441() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000442(),
        ))
      }
      pub(super) fn get_000440() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000441(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000444() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000443() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000444(),
        ))
      }
      pub(super) fn get_000447() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000446() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000447()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000445() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000446()))
      }
      pub(super) fn get_000439() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000440(), get_000443(), get_000445()))
      }
      pub(super) fn get_000429() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000430(),
          )],
          get_000439(),
        ))
      }
      pub(super) fn get_000427() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000428(),
          )],
          get_000429(),
        ))
      }
      pub(super) fn get_000424() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000425(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000426(),
            ),
          ],
          get_000427(),
        ))
      }
      pub(super) fn get_000449() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000448() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000449(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000423() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000424(),
          )],
          get_000448(),
        ))
      }
      pub(super) fn get_000421() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000422(),
          )],
          get_000423(),
        ))
      }
      pub(super) fn get_000419() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000420(),
          )],
          get_000421(),
        ))
      }
      pub(super) fn get_000417() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000418(),
          )],
          get_000419(),
        ))
      }
      pub(super) fn get_000451() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000450() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000451()))
      }
      pub(super) fn get_000413() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000414(), get_000417(), get_000450()))
      }
      pub(super) fn get_000410() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000411(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000412(),
            ),
          ],
          get_000413(),
        ))
      }
      pub(super) fn get_000454() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000455() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000453() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000454(),
          )],
          get_000455(),
        ))
      }
      pub(super) fn get_000457() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000456() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000457(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000459() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000461() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000463() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000465() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000467() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000469() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000468() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000469()]))
      }
      pub(super) fn get_000466() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000467(),
          )],
          get_000468(),
        ))
      }
      pub(super) fn get_000464() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000465(),
          )],
          get_000466(),
        ))
      }
      pub(super) fn get_000462() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000463(), get_000464()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000460() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000461(), get_000462()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000458() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000459(),
          )],
          get_000460(),
        ))
      }
      pub(super) fn get_000452() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000453(),
          get_000456(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000458(),
        ))
      }
      pub(super) fn get_000471() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_28() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 28u32)
        }))
      }
      pub(super) fn get_000473() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_v_28()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000475() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("function"))
      }
      pub(super) fn get_000472() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000473(), get_000475()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000470() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 28u32) },
            get_000471(),
          )],
          get_000472(),
        ))
      }
      pub(super) fn get_000407() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000408(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000410(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000452(),
            ),
          ],
          get_000470(),
        ))
      }
      pub(super) fn get_000476() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("toString"))
      }
      pub(super) fn get_000479() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000478() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000479(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000481() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000482() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000486() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000485() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000486(),
        ))
      }
      pub(super) fn get_000484() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000485(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000488() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000490() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000492() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000495() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000496() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000498() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000501() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000503() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000502() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000503(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000505() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000507() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000506() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000507(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000508() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000504() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000505(), get_000506(), get_000508()))
      }
      pub(super) fn get_000500() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000501(), get_000502(), get_000504()))
      }
      pub(super) fn get_000512() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000511() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000512(),
        ))
      }
      pub(super) fn get_000510() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000511(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000514() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000513() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000514(),
        ))
      }
      pub(super) fn get_000517() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000516() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000517()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000515() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000516()))
      }
      pub(super) fn get_000509() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000510(), get_000513(), get_000515()))
      }
      pub(super) fn get_000499() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000500(),
          )],
          get_000509(),
        ))
      }
      pub(super) fn get_000497() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000498(),
          )],
          get_000499(),
        ))
      }
      pub(super) fn get_000494() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000495(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000496(),
            ),
          ],
          get_000497(),
        ))
      }
      pub(super) fn get_000519() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000518() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000519(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000493() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000494(),
          )],
          get_000518(),
        ))
      }
      pub(super) fn get_000491() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000492(),
          )],
          get_000493(),
        ))
      }
      pub(super) fn get_000489() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000490(),
          )],
          get_000491(),
        ))
      }
      pub(super) fn get_000487() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000488(),
          )],
          get_000489(),
        ))
      }
      pub(super) fn get_000521() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000520() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000521()))
      }
      pub(super) fn get_000483() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000484(), get_000487(), get_000520()))
      }
      pub(super) fn get_000480() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000481(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000482(),
            ),
          ],
          get_000483(),
        ))
      }
      pub(super) fn get_000524() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000525() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000523() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000524(),
          )],
          get_000525(),
        ))
      }
      pub(super) fn get_000527() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000526() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000527(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000529() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000531() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000533() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000535() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000537() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000539() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000538() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000539()]))
      }
      pub(super) fn get_000536() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000537(),
          )],
          get_000538(),
        ))
      }
      pub(super) fn get_000534() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000535(),
          )],
          get_000536(),
        ))
      }
      pub(super) fn get_000532() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000533(), get_000534()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000530() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000531(), get_000532()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000528() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000529(),
          )],
          get_000530(),
        ))
      }
      pub(super) fn get_000522() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000523(),
          get_000526(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000528(),
        ))
      }
      pub(super) fn get_000542() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'a' not bound"))
      }
      pub(super) fn get_000541() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_ident_a_29() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 29u32)
        }))
      }
      pub(super) fn get_000545() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_a_29()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000544() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000545(), get_000125()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000548() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(""))
      }
      pub(super) fn get_000547() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000548(),
          CoreBinaryOperator::Plus(None),
          get_ident_a_29(),
        ))
      }
      pub(super) fn get_000543() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_000544(),
          get_ident_a_29(),
          get_000547(),
        ))
      }
      pub(super) fn get_000540() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("a", 29u32) },
            get_000541(),
          )],
          get_000543(),
        ))
      }
      pub(super) fn get_000477() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000478(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000480(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000522(),
            ),
          ],
          get_000540(),
        ))
      }
      pub(super) fn get_000549() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("substr"))
      }
      pub(super) fn get_000552() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000551() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000552(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000554() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000555() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000559() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000558() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000559(),
        ))
      }
      pub(super) fn get_000557() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000558(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000561() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000563() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000565() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000568() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000569() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000571() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000574() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000576() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000575() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000576(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000578() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000580() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000579() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000580(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000581() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000577() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000578(), get_000579(), get_000581()))
      }
      pub(super) fn get_000573() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000574(), get_000575(), get_000577()))
      }
      pub(super) fn get_000585() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000584() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000585(),
        ))
      }
      pub(super) fn get_000583() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000584(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000587() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000586() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000587(),
        ))
      }
      pub(super) fn get_000590() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000589() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000590()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000588() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000589()))
      }
      pub(super) fn get_000582() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000583(), get_000586(), get_000588()))
      }
      pub(super) fn get_000572() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000573(),
          )],
          get_000582(),
        ))
      }
      pub(super) fn get_000570() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000571(),
          )],
          get_000572(),
        ))
      }
      pub(super) fn get_000567() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000568(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000569(),
            ),
          ],
          get_000570(),
        ))
      }
      pub(super) fn get_000592() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000591() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000592(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000566() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000567(),
          )],
          get_000591(),
        ))
      }
      pub(super) fn get_000564() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000565(),
          )],
          get_000566(),
        ))
      }
      pub(super) fn get_000562() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000563(),
          )],
          get_000564(),
        ))
      }
      pub(super) fn get_000560() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000561(),
          )],
          get_000562(),
        ))
      }
      pub(super) fn get_000594() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000593() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000594()))
      }
      pub(super) fn get_000556() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000557(), get_000560(), get_000593()))
      }
      pub(super) fn get_000553() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000554(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000555(),
            ),
          ],
          get_000556(),
        ))
      }
      pub(super) fn get_000597() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000598() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000596() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000597(),
          )],
          get_000598(),
        ))
      }
      pub(super) fn get_000600() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000599() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000600(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000602() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000604() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000606() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000608() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000610() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000612() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000611() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000612()]))
      }
      pub(super) fn get_000609() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000610(),
          )],
          get_000611(),
        ))
      }
      pub(super) fn get_000607() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000608(),
          )],
          get_000609(),
        ))
      }
      pub(super) fn get_000605() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000606(), get_000607()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000603() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000604(), get_000605()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000601() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000602(),
          )],
          get_000603(),
        ))
      }
      pub(super) fn get_000595() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000596(),
          get_000599(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000601(),
        ))
      }
      pub(super) fn get_000614() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000616() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'from' not bound"))
      }
      pub(super) fn get_000615() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000616()))
      }
      pub(super) fn get_000618() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'len' not bound"))
      }
      pub(super) fn get_000617() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000618()))
      }
      pub(super) fn get_member_std_3_isString() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000001()))
      }
      pub(super) fn get_ident_str_30() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 30u32)
        }))
      }
      pub(super) fn get_000620() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_30()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_std_3_isNumber() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000126()))
      }
      pub(super) fn get_ident_from_31() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("from", 31u32)
        }))
      }
      pub(super) fn get_000624() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_from_31()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_len_32() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("len", 32u32)
        }))
      }
      pub(super) fn get_000628() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_len_32()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000631() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_len_32(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000636() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("max"))
      }
      pub(super) fn get_member_std_3_max() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000636()))
      }
      pub(super) fn get_000639() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("min"))
      }
      pub(super) fn get_member_std_3_min() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000639()))
      }
      pub(super) fn get_000641() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_30()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000640() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000641(),
          CoreBinaryOperator::Minus(None),
          get_ident_from_31(),
        ))
      }
      pub(super) fn get_000637() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_min(),
          vec![get_ident_len_32(), get_000640()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000634() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_max(),
          vec![get_number_0_0(), get_000637()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000644() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'i' not bound"))
      }
      pub(super) fn get_000643() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_33() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 33u32)
        }))
      }
      pub(super) fn get_000646() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_33(),
          CoreBinaryOperator::Plus(None),
          get_ident_from_31(),
        ))
      }
      pub(super) fn get_000645() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_30(), get_000646()))
      }
      pub(super) fn get_000642() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 33u32) },
            get_000643(),
          )],
          get_000645(),
        ))
      }
      pub(super) fn get_000633() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000634(), get_000642()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000632() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_000633()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000650() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "substr third parameter should be greater than zero, got ",
        ))
      }
      pub(super) fn get_000649() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000650(),
          CoreBinaryOperator::Plus(None),
          get_ident_len_32(),
        ))
      }
      pub(super) fn get_000648() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000649()))
      }
      pub(super) fn get_000630() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000631(), get_000632(), get_000648()))
      }
      pub(super) fn get_000653() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "substr third parameter should be a string, got ",
        ))
      }
      pub(super) fn get_000654() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_len_32()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000652() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000653(),
          CoreBinaryOperator::Plus(None),
          get_000654(),
        ))
      }
      pub(super) fn get_000651() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000652()))
      }
      pub(super) fn get_000627() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000628(), get_000630(), get_000651()))
      }
      pub(super) fn get_000657() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "substr second parameter should be a string, got ",
        ))
      }
      pub(super) fn get_000658() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_from_31()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000656() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000657(),
          CoreBinaryOperator::Plus(None),
          get_000658(),
        ))
      }
      pub(super) fn get_000655() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000656()))
      }
      pub(super) fn get_000623() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000624(), get_000627(), get_000655()))
      }
      pub(super) fn get_000661() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "substr first parameter should be a string, got ",
        ))
      }
      pub(super) fn get_000662() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_str_30()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000660() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000661(),
          CoreBinaryOperator::Plus(None),
          get_000662(),
        ))
      }
      pub(super) fn get_000659() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000660()))
      }
      pub(super) fn get_000619() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000620(), get_000623(), get_000659()))
      }
      pub(super) fn get_000613() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 30u32) },
              get_000614(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("from", 31u32) },
              get_000615(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("len", 32u32) },
              get_000617(),
            ),
          ],
          get_000619(),
        ))
      }
      pub(super) fn get_000550() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000551(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000553(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000595(),
            ),
          ],
          get_000613(),
        ))
      }
      pub(super) fn get_000663() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("startsWith"))
      }
      pub(super) fn get_000666() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000665() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000666(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000668() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000669() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000673() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000672() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000673(),
        ))
      }
      pub(super) fn get_000671() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000672(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000675() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000677() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000679() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000682() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000683() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000685() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000688() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000690() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000689() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000690(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000692() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000694() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000693() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000694(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000695() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000691() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000692(), get_000693(), get_000695()))
      }
      pub(super) fn get_000687() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000688(), get_000689(), get_000691()))
      }
      pub(super) fn get_000699() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000698() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000699(),
        ))
      }
      pub(super) fn get_000697() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000698(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000701() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000700() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000701(),
        ))
      }
      pub(super) fn get_000704() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000703() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000704()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000702() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000703()))
      }
      pub(super) fn get_000696() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000697(), get_000700(), get_000702()))
      }
      pub(super) fn get_000686() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000687(),
          )],
          get_000696(),
        ))
      }
      pub(super) fn get_000684() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000685(),
          )],
          get_000686(),
        ))
      }
      pub(super) fn get_000681() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000682(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000683(),
            ),
          ],
          get_000684(),
        ))
      }
      pub(super) fn get_000706() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000705() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000706(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000680() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000681(),
          )],
          get_000705(),
        ))
      }
      pub(super) fn get_000678() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000679(),
          )],
          get_000680(),
        ))
      }
      pub(super) fn get_000676() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000677(),
          )],
          get_000678(),
        ))
      }
      pub(super) fn get_000674() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000675(),
          )],
          get_000676(),
        ))
      }
      pub(super) fn get_000708() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000707() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000708()))
      }
      pub(super) fn get_000670() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000671(), get_000674(), get_000707()))
      }
      pub(super) fn get_000667() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000668(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000669(),
            ),
          ],
          get_000670(),
        ))
      }
      pub(super) fn get_000711() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000712() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000710() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000711(),
          )],
          get_000712(),
        ))
      }
      pub(super) fn get_000714() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000713() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000714(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000716() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000718() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000720() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000722() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000724() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000726() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000725() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000726()]))
      }
      pub(super) fn get_000723() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000724(),
          )],
          get_000725(),
        ))
      }
      pub(super) fn get_000721() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000722(),
          )],
          get_000723(),
        ))
      }
      pub(super) fn get_000719() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000720(), get_000721()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000717() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000718(), get_000719()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000715() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000716(),
          )],
          get_000717(),
        ))
      }
      pub(super) fn get_000709() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000710(),
          get_000713(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000715(),
        ))
      }
      pub(super) fn get_000728() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_000730() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'b' not bound"))
      }
      pub(super) fn get_000729() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_34() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 34u32)
        }))
      }
      pub(super) fn get_000733() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_34()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_b_35() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 35u32)
        }))
      }
      pub(super) fn get_000735() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_35()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000732() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000733(),
          CoreBinaryOperator::LessThan(None),
          get_000735(),
        ))
      }
      pub(super) fn get_false() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_false())
      }
      pub(super) fn get_member_std_3_substr() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000549()))
      }
      pub(super) fn get_000741() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_35()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000739() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_substr(),
          vec![get_ident_a_34(), get_number_0_0(), get_000741()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000738() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000739(), get_ident_b_35()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000731() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000732(), get_false(), get_000738()))
      }
      pub(super) fn get_000727() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 34u32) },
              get_000728(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 35u32) },
              get_000729(),
            ),
          ],
          get_000731(),
        ))
      }
      pub(super) fn get_000664() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000665(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000667(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000709(),
            ),
          ],
          get_000727(),
        ))
      }
      pub(super) fn get_000742() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("endsWith"))
      }
      pub(super) fn get_000745() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000744() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000745(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000747() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000748() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000752() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000751() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000752(),
        ))
      }
      pub(super) fn get_000750() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000751(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000754() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000756() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000758() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000761() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000762() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000764() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000767() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000769() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000768() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000769(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000771() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000773() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000772() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000773(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000774() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000770() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000771(), get_000772(), get_000774()))
      }
      pub(super) fn get_000766() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000767(), get_000768(), get_000770()))
      }
      pub(super) fn get_000778() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000777() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000778(),
        ))
      }
      pub(super) fn get_000776() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000777(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000780() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000779() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000780(),
        ))
      }
      pub(super) fn get_000783() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000782() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000783()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000781() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000782()))
      }
      pub(super) fn get_000775() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000776(), get_000779(), get_000781()))
      }
      pub(super) fn get_000765() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000766(),
          )],
          get_000775(),
        ))
      }
      pub(super) fn get_000763() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000764(),
          )],
          get_000765(),
        ))
      }
      pub(super) fn get_000760() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000761(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000762(),
            ),
          ],
          get_000763(),
        ))
      }
      pub(super) fn get_000785() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000784() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000785(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000759() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000760(),
          )],
          get_000784(),
        ))
      }
      pub(super) fn get_000757() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000758(),
          )],
          get_000759(),
        ))
      }
      pub(super) fn get_000755() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000756(),
          )],
          get_000757(),
        ))
      }
      pub(super) fn get_000753() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000754(),
          )],
          get_000755(),
        ))
      }
      pub(super) fn get_000787() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000786() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000787()))
      }
      pub(super) fn get_000749() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000750(), get_000753(), get_000786()))
      }
      pub(super) fn get_000746() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000747(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000748(),
            ),
          ],
          get_000749(),
        ))
      }
      pub(super) fn get_000790() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000791() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000789() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000790(),
          )],
          get_000791(),
        ))
      }
      pub(super) fn get_000793() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000792() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000793(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000795() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000797() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000799() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000801() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000803() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000805() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000804() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000805()]))
      }
      pub(super) fn get_000802() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000803(),
          )],
          get_000804(),
        ))
      }
      pub(super) fn get_000800() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000801(),
          )],
          get_000802(),
        ))
      }
      pub(super) fn get_000798() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000799(), get_000800()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000796() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000797(), get_000798()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000794() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000795(),
          )],
          get_000796(),
        ))
      }
      pub(super) fn get_000788() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000789(),
          get_000792(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000794(),
        ))
      }
      pub(super) fn get_000807() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_000808() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_36() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 36u32)
        }))
      }
      pub(super) fn get_000811() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_36()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_b_37() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 37u32)
        }))
      }
      pub(super) fn get_000813() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_37()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000810() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000811(),
          CoreBinaryOperator::LessThan(None),
          get_000813(),
        ))
      }
      pub(super) fn get_000818() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_36()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000819() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_37()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000817() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000818(),
          CoreBinaryOperator::Minus(None),
          get_000819(),
        ))
      }
      pub(super) fn get_000820() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_37()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000816() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_substr(),
          vec![get_ident_a_36(), get_000817(), get_000820()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000815() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_000816(), get_ident_b_37()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000809() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000810(), get_false(), get_000815()))
      }
      pub(super) fn get_000806() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 36u32) },
              get_000807(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 37u32) },
              get_000808(),
            ),
          ],
          get_000809(),
        ))
      }
      pub(super) fn get_000743() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000744(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000746(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000788(),
            ),
          ],
          get_000806(),
        ))
      }
      pub(super) fn get_000821() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("lstripChars"))
      }
      pub(super) fn get_000824() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000823() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000824(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000826() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000827() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000831() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000830() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000831(),
        ))
      }
      pub(super) fn get_000829() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000830(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000833() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000835() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000837() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000840() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000841() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000843() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000846() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000848() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000847() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000848(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000850() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000852() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000851() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000852(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000853() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000849() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000850(), get_000851(), get_000853()))
      }
      pub(super) fn get_000845() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000846(), get_000847(), get_000849()))
      }
      pub(super) fn get_000857() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000856() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000857(),
        ))
      }
      pub(super) fn get_000855() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000856(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000859() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000858() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000859(),
        ))
      }
      pub(super) fn get_000862() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000861() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000862()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000860() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000861()))
      }
      pub(super) fn get_000854() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000855(), get_000858(), get_000860()))
      }
      pub(super) fn get_000844() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000845(),
          )],
          get_000854(),
        ))
      }
      pub(super) fn get_000842() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000843(),
          )],
          get_000844(),
        ))
      }
      pub(super) fn get_000839() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000840(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000841(),
            ),
          ],
          get_000842(),
        ))
      }
      pub(super) fn get_000864() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000863() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000864(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000838() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000839(),
          )],
          get_000863(),
        ))
      }
      pub(super) fn get_000836() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000837(),
          )],
          get_000838(),
        ))
      }
      pub(super) fn get_000834() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000835(),
          )],
          get_000836(),
        ))
      }
      pub(super) fn get_000832() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000833(),
          )],
          get_000834(),
        ))
      }
      pub(super) fn get_000866() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000865() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000866()))
      }
      pub(super) fn get_000828() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000829(), get_000832(), get_000865()))
      }
      pub(super) fn get_000825() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000826(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000827(),
            ),
          ],
          get_000828(),
        ))
      }
      pub(super) fn get_000869() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000870() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000868() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000869(),
          )],
          get_000870(),
        ))
      }
      pub(super) fn get_000872() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000871() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000872(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000874() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000876() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000878() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000880() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000882() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000884() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000883() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000884()]))
      }
      pub(super) fn get_000881() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000882(),
          )],
          get_000883(),
        ))
      }
      pub(super) fn get_000879() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000880(),
          )],
          get_000881(),
        ))
      }
      pub(super) fn get_000877() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000878(), get_000879()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000875() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000876(), get_000877()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000873() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000874(),
          )],
          get_000875(),
        ))
      }
      pub(super) fn get_000867() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000868(),
          get_000871(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000873(),
        ))
      }
      pub(super) fn get_000886() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000888() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'chars' not bound"))
      }
      pub(super) fn get_000887() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000888()))
      }
      pub(super) fn get_ident_str_38() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 38u32)
        }))
      }
      pub(super) fn get_000891() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_38()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000896() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("member"))
      }
      pub(super) fn get_member_std_3_member() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000896()))
      }
      pub(super) fn get_ident_chars_39() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("chars", 39u32)
        }))
      }
      pub(super) fn get_000898() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_38(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000894() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_member(),
          vec![get_ident_chars_39(), get_000898()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000893() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_000894(),
        ))
      }
      pub(super) fn get_000890() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000891(),
          CoreBinaryOperator::GreaterThan(None),
          get_000893(),
        ))
      }
      pub(super) fn get_member_std_3_lstripChars() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000821()))
      }
      pub(super) fn get_000903() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("slice"))
      }
      pub(super) fn get_member_std_3_slice() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000903()))
      }
      pub(super) fn get_number_1_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(1f64))
      }
      pub(super) fn get_null() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_null())
      }
      pub(super) fn get_000901() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_str_38(), get_number_1_0(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000899() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_lstripChars(),
          vec![get_000901(), get_ident_chars_39()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000889() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_000890(),
          get_000899(),
          get_ident_str_38(),
        ))
      }
      pub(super) fn get_000885() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 38u32) },
              get_000886(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("chars", 39u32) },
              get_000887(),
            ),
          ],
          get_000889(),
        ))
      }
      pub(super) fn get_000822() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000823(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000825(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000867(),
            ),
          ],
          get_000885(),
        ))
      }
      pub(super) fn get_000906() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("rstripChars"))
      }
      pub(super) fn get_000909() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000908() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000909(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000911() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000912() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000916() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000915() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000916(),
        ))
      }
      pub(super) fn get_000914() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000915(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_000918() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000920() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000922() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000925() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_000926() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_000928() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000931() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000933() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_000932() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000933(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000935() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000937() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_000936() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000937(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_000938() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_000934() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000935(), get_000936(), get_000938()))
      }
      pub(super) fn get_000930() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000931(), get_000932(), get_000934()))
      }
      pub(super) fn get_000942() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000941() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_000942(),
        ))
      }
      pub(super) fn get_000940() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000941(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000944() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_000943() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_000944(),
        ))
      }
      pub(super) fn get_000947() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_000946() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_000947()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000945() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000946()))
      }
      pub(super) fn get_000939() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000940(), get_000943(), get_000945()))
      }
      pub(super) fn get_000929() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_000930(),
          )],
          get_000939(),
        ))
      }
      pub(super) fn get_000927() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_000928(),
          )],
          get_000929(),
        ))
      }
      pub(super) fn get_000924() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_000925(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_000926(),
            ),
          ],
          get_000927(),
        ))
      }
      pub(super) fn get_000949() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000948() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_000949(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000923() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_000924(),
          )],
          get_000948(),
        ))
      }
      pub(super) fn get_000921() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_000922(),
          )],
          get_000923(),
        ))
      }
      pub(super) fn get_000919() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_000920(),
          )],
          get_000921(),
        ))
      }
      pub(super) fn get_000917() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_000918(),
          )],
          get_000919(),
        ))
      }
      pub(super) fn get_000951() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000950() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000951()))
      }
      pub(super) fn get_000913() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000914(), get_000917(), get_000950()))
      }
      pub(super) fn get_000910() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000911(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000912(),
            ),
          ],
          get_000913(),
        ))
      }
      pub(super) fn get_000954() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000955() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000953() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000954(),
          )],
          get_000955(),
        ))
      }
      pub(super) fn get_000957() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_000956() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000957(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_000959() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000961() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_000963() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000965() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_000967() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_000969() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_000968() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000969()]))
      }
      pub(super) fn get_000966() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_000967(),
          )],
          get_000968(),
        ))
      }
      pub(super) fn get_000964() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_000965(),
          )],
          get_000966(),
        ))
      }
      pub(super) fn get_000962() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_000963(), get_000964()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000960() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000961(), get_000962()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000958() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_000959(),
          )],
          get_000960(),
        ))
      }
      pub(super) fn get_000952() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_000953(),
          get_000956(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_000958(),
        ))
      }
      pub(super) fn get_000971() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000972() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000888()))
      }
      pub(super) fn get_ident_str_40() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 40u32)
        }))
      }
      pub(super) fn get_000974() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_40()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_len_42() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("len", 42u32)
        }))
      }
      pub(super) fn get_ident_chars_41() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("chars", 41u32)
        }))
      }
      pub(super) fn get_000983() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_len_42(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_000982() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_40(), get_000983()))
      }
      pub(super) fn get_000980() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_member(),
          vec![get_ident_chars_41(), get_000982()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000979() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_000980(),
        ))
      }
      pub(super) fn get_000977() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_len_42(),
          CoreBinaryOperator::GreaterThan(None),
          get_000979(),
        ))
      }
      pub(super) fn get_member_std_3_rstripChars() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000906()))
      }
      pub(super) fn get_000987() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_len_42(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_000986() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_str_40(), get_null(), get_000987(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000984() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_rstripChars(),
          vec![get_000986(), get_ident_chars_41()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_000976() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_000977(),
          get_000984(),
          get_ident_str_40(),
        ))
      }
      pub(super) fn get_000973() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("len", 42u32) },
            get_000974(),
          )],
          get_000976(),
        ))
      }
      pub(super) fn get_000970() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 40u32) },
              get_000971(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("chars", 41u32) },
              get_000972(),
            ),
          ],
          get_000973(),
        ))
      }
      pub(super) fn get_000907() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000908(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000910(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_000952(),
            ),
          ],
          get_000970(),
        ))
      }
      pub(super) fn get_000988() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("stripChars"))
      }
      pub(super) fn get_000991() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_000990() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_000991(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_000993() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_000994() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_000998() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_000997() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_000998(),
        ))
      }
      pub(super) fn get_000996() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000997(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001000() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001002() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001004() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001007() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001008() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001010() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001013() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001015() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001014() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001015(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001017() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001019() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001018() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001019(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001020() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001016() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001017(), get_001018(), get_001020()))
      }
      pub(super) fn get_001012() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001013(), get_001014(), get_001016()))
      }
      pub(super) fn get_001024() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001023() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001024(),
        ))
      }
      pub(super) fn get_001022() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001023(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001026() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001025() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001026(),
        ))
      }
      pub(super) fn get_001029() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001028() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001029()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001027() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001028()))
      }
      pub(super) fn get_001021() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001022(), get_001025(), get_001027()))
      }
      pub(super) fn get_001011() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001012(),
          )],
          get_001021(),
        ))
      }
      pub(super) fn get_001009() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001010(),
          )],
          get_001011(),
        ))
      }
      pub(super) fn get_001006() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001007(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001008(),
            ),
          ],
          get_001009(),
        ))
      }
      pub(super) fn get_001031() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001030() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001031(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001005() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001006(),
          )],
          get_001030(),
        ))
      }
      pub(super) fn get_001003() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001004(),
          )],
          get_001005(),
        ))
      }
      pub(super) fn get_001001() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001002(),
          )],
          get_001003(),
        ))
      }
      pub(super) fn get_000999() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001000(),
          )],
          get_001001(),
        ))
      }
      pub(super) fn get_001033() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001032() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001033()))
      }
      pub(super) fn get_000995() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_000996(), get_000999(), get_001032()))
      }
      pub(super) fn get_000992() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_000993(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_000994(),
            ),
          ],
          get_000995(),
        ))
      }
      pub(super) fn get_001036() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001037() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001035() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001036(),
          )],
          get_001037(),
        ))
      }
      pub(super) fn get_001039() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001038() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001039(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001041() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001043() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001045() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001047() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001049() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001051() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001050() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001051()]))
      }
      pub(super) fn get_001048() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001049(),
          )],
          get_001050(),
        ))
      }
      pub(super) fn get_001046() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001047(),
          )],
          get_001048(),
        ))
      }
      pub(super) fn get_001044() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001045(), get_001046()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001042() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001043(), get_001044()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001040() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001041(),
          )],
          get_001042(),
        ))
      }
      pub(super) fn get_001034() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001035(),
          get_001038(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001040(),
        ))
      }
      pub(super) fn get_001053() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001054() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000888()))
      }
      pub(super) fn get_ident_str_43() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 43u32)
        }))
      }
      pub(super) fn get_ident_chars_44() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("chars", 44u32)
        }))
      }
      pub(super) fn get_001056() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_rstripChars(),
          vec![get_ident_str_43(), get_ident_chars_44()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001055() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_lstripChars(),
          vec![get_001056(), get_ident_chars_44()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001052() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 43u32) },
              get_001053(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("chars", 44u32) },
              get_001054(),
            ),
          ],
          get_001055(),
        ))
      }
      pub(super) fn get_000989() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_000990(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_000992(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001034(),
            ),
          ],
          get_001052(),
        ))
      }
      pub(super) fn get_001061() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001060() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001061(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001063() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001064() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001068() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001067() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001068(),
        ))
      }
      pub(super) fn get_001066() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001067(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001070() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001072() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001074() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001077() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001078() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001080() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001083() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001085() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001084() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001085(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001087() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001089() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001088() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001089(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001090() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001086() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001087(), get_001088(), get_001090()))
      }
      pub(super) fn get_001082() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001083(), get_001084(), get_001086()))
      }
      pub(super) fn get_001094() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001093() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001094(),
        ))
      }
      pub(super) fn get_001092() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001093(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001096() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001095() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001096(),
        ))
      }
      pub(super) fn get_001099() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001098() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001099()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001097() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001098()))
      }
      pub(super) fn get_001091() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001092(), get_001095(), get_001097()))
      }
      pub(super) fn get_001081() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001082(),
          )],
          get_001091(),
        ))
      }
      pub(super) fn get_001079() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001080(),
          )],
          get_001081(),
        ))
      }
      pub(super) fn get_001076() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001077(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001078(),
            ),
          ],
          get_001079(),
        ))
      }
      pub(super) fn get_001101() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001100() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001101(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001075() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001076(),
          )],
          get_001100(),
        ))
      }
      pub(super) fn get_001073() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001074(),
          )],
          get_001075(),
        ))
      }
      pub(super) fn get_001071() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001072(),
          )],
          get_001073(),
        ))
      }
      pub(super) fn get_001069() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001070(),
          )],
          get_001071(),
        ))
      }
      pub(super) fn get_001103() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001102() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001103()))
      }
      pub(super) fn get_001065() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001066(), get_001069(), get_001102()))
      }
      pub(super) fn get_001062() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001063(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001064(),
            ),
          ],
          get_001065(),
        ))
      }
      pub(super) fn get_001106() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001107() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001105() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001106(),
          )],
          get_001107(),
        ))
      }
      pub(super) fn get_001109() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001108() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001109(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001111() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001113() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001115() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001117() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001119() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001121() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001120() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001121()]))
      }
      pub(super) fn get_001118() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001119(),
          )],
          get_001120(),
        ))
      }
      pub(super) fn get_001116() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001117(),
          )],
          get_001118(),
        ))
      }
      pub(super) fn get_001114() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001115(), get_001116()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001112() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001113(), get_001114()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001110() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001111(),
          )],
          get_001112(),
        ))
      }
      pub(super) fn get_001104() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001105(),
          get_001108(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001110(),
        ))
      }
      pub(super) fn get_001123() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_ident_str_45() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 45u32)
        }))
      }
      pub(super) fn get_001125() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_45()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001128() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_46() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 46u32)
        }))
      }
      pub(super) fn get_001129() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_45(),
          get_ident_i_46(),
        ))
      }
      pub(super) fn get_001127() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 46u32) },
            get_001128(),
          )],
          get_001129(),
        ))
      }
      pub(super) fn get_001124() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001125(), get_001127()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001122() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 45u32) },
            get_001123(),
          )],
          get_001124(),
        ))
      }
      pub(super) fn get_001059() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001060(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001062(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001104(),
            ),
          ],
          get_001122(),
        ))
      }
      pub(super) fn get_001131() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("parseInt"))
      }
      pub(super) fn get_001134() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001133() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001134(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001136() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001137() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001141() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001140() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001141(),
        ))
      }
      pub(super) fn get_001139() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001140(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001143() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001145() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001147() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001150() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001151() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001153() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001156() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001158() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001157() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001158(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001160() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001162() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001161() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001162(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001163() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001159() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001160(), get_001161(), get_001163()))
      }
      pub(super) fn get_001155() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001156(), get_001157(), get_001159()))
      }
      pub(super) fn get_001167() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001166() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001167(),
        ))
      }
      pub(super) fn get_001165() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001166(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001169() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001168() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001169(),
        ))
      }
      pub(super) fn get_001172() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001171() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001172()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001170() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001171()))
      }
      pub(super) fn get_001164() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001165(), get_001168(), get_001170()))
      }
      pub(super) fn get_001154() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001155(),
          )],
          get_001164(),
        ))
      }
      pub(super) fn get_001152() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001153(),
          )],
          get_001154(),
        ))
      }
      pub(super) fn get_001149() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001150(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001151(),
            ),
          ],
          get_001152(),
        ))
      }
      pub(super) fn get_001174() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001173() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001174(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001148() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001149(),
          )],
          get_001173(),
        ))
      }
      pub(super) fn get_001146() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001147(),
          )],
          get_001148(),
        ))
      }
      pub(super) fn get_001144() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001145(),
          )],
          get_001146(),
        ))
      }
      pub(super) fn get_001142() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001143(),
          )],
          get_001144(),
        ))
      }
      pub(super) fn get_001176() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001175() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001176()))
      }
      pub(super) fn get_001138() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001139(), get_001142(), get_001175()))
      }
      pub(super) fn get_001135() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001136(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001137(),
            ),
          ],
          get_001138(),
        ))
      }
      pub(super) fn get_001179() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001180() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001178() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001179(),
          )],
          get_001180(),
        ))
      }
      pub(super) fn get_001182() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001181() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001182(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001184() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001186() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001188() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001190() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001192() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001194() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001193() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001194()]))
      }
      pub(super) fn get_001191() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001192(),
          )],
          get_001193(),
        ))
      }
      pub(super) fn get_001189() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001190(),
          )],
          get_001191(),
        ))
      }
      pub(super) fn get_001187() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001188(), get_001189()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001185() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001186(), get_001187()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001183() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001184(),
          )],
          get_001185(),
        ))
      }
      pub(super) fn get_001177() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001178(),
          get_001181(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001183(),
        ))
      }
      pub(super) fn get_001196() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_ident_str_47() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 47u32)
        }))
      }
      pub(super) fn get_001198() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_47()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001202() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_47()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001205() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_str_47(),
        ))
      }
      pub(super) fn get_001206() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("-"))
      }
      pub(super) fn get_001204() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_001205(), get_001206()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001203() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_001204(),
        ))
      }
      pub(super) fn get_001201() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001202(),
          CoreBinaryOperator::GreaterThan(None),
          get_001203(),
        ))
      }
      pub(super) fn get_001209() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_47(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001208() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_001209(), get_001206()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_parse_nat_5() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("parse_nat", 5u32)
        }))
      }
      pub(super) fn get_001213() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_str_47(), get_number_1_0(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001211() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_nat_5(),
          vec![get_001213(), get_number_10_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001210() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_001211(),
        ))
      }
      pub(super) fn get_001214() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_nat_5(),
          vec![get_ident_str_47(), get_number_10_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001207() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001208(), get_001210(), get_001214()))
      }
      pub(super) fn get_001217() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Not an integer: \"%s\""))
      }
      pub(super) fn get_001218() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_str_47()]))
      }
      pub(super) fn get_001216() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_001217(), get_001218()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001215() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001216()))
      }
      pub(super) fn get_001200() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001201(), get_001207(), get_001215()))
      }
      pub(super) fn get_001221() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Expected string, got "))
      }
      pub(super) fn get_001222() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_str_47()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001220() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001221(),
          CoreBinaryOperator::Plus(None),
          get_001222(),
        ))
      }
      pub(super) fn get_001219() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001220()))
      }
      pub(super) fn get_001197() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001198(), get_001200(), get_001219()))
      }
      pub(super) fn get_001195() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 47u32) },
            get_001196(),
          )],
          get_001197(),
        ))
      }
      pub(super) fn get_001132() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001133(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001135(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001177(),
            ),
          ],
          get_001195(),
        ))
      }
      pub(super) fn get_001223() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("parseOctal"))
      }
      pub(super) fn get_001226() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001225() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001226(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001228() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001229() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001233() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001232() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001233(),
        ))
      }
      pub(super) fn get_001231() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001232(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001235() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001237() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001239() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001242() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001243() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001245() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001248() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001250() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001249() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001250(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001252() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001254() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001253() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001254(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001255() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001251() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001252(), get_001253(), get_001255()))
      }
      pub(super) fn get_001247() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001248(), get_001249(), get_001251()))
      }
      pub(super) fn get_001259() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001258() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001259(),
        ))
      }
      pub(super) fn get_001257() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001258(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001261() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001260() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001261(),
        ))
      }
      pub(super) fn get_001264() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001263() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001264()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001262() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001263()))
      }
      pub(super) fn get_001256() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001257(), get_001260(), get_001262()))
      }
      pub(super) fn get_001246() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001247(),
          )],
          get_001256(),
        ))
      }
      pub(super) fn get_001244() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001245(),
          )],
          get_001246(),
        ))
      }
      pub(super) fn get_001241() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001242(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001243(),
            ),
          ],
          get_001244(),
        ))
      }
      pub(super) fn get_001266() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001265() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001266(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001240() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001241(),
          )],
          get_001265(),
        ))
      }
      pub(super) fn get_001238() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001239(),
          )],
          get_001240(),
        ))
      }
      pub(super) fn get_001236() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001237(),
          )],
          get_001238(),
        ))
      }
      pub(super) fn get_001234() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001235(),
          )],
          get_001236(),
        ))
      }
      pub(super) fn get_001268() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001267() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001268()))
      }
      pub(super) fn get_001230() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001231(), get_001234(), get_001267()))
      }
      pub(super) fn get_001227() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001228(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001229(),
            ),
          ],
          get_001230(),
        ))
      }
      pub(super) fn get_001271() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001272() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001270() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001271(),
          )],
          get_001272(),
        ))
      }
      pub(super) fn get_001274() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001273() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001274(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001276() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001278() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001280() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001282() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001284() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001286() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001285() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001286()]))
      }
      pub(super) fn get_001283() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001284(),
          )],
          get_001285(),
        ))
      }
      pub(super) fn get_001281() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001282(),
          )],
          get_001283(),
        ))
      }
      pub(super) fn get_001279() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001280(), get_001281()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001277() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001278(), get_001279()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001275() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001276(),
          )],
          get_001277(),
        ))
      }
      pub(super) fn get_001269() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001270(),
          get_001273(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001275(),
        ))
      }
      pub(super) fn get_001288() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_ident_str_48() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 48u32)
        }))
      }
      pub(super) fn get_001290() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_48()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001294() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_48()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001293() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001294(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_number_8_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(8f64))
      }
      pub(super) fn get_001295() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_nat_5(),
          vec![get_ident_str_48(), get_number_8_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001298() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Not an octal number: \"\""))
      }
      pub(super) fn get_001297() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001298()))
      }
      pub(super) fn get_001292() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001293(), get_001295(), get_001297()))
      }
      pub(super) fn get_001301() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_str_48()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001300() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001221(),
          CoreBinaryOperator::Plus(None),
          get_001301(),
        ))
      }
      pub(super) fn get_001299() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001300()))
      }
      pub(super) fn get_001289() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001290(), get_001292(), get_001299()))
      }
      pub(super) fn get_001287() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 48u32) },
            get_001288(),
          )],
          get_001289(),
        ))
      }
      pub(super) fn get_001224() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001225(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001227(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001269(),
            ),
          ],
          get_001287(),
        ))
      }
      pub(super) fn get_001302() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("parseHex"))
      }
      pub(super) fn get_001305() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001304() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001305(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001307() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001308() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001312() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001311() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001312(),
        ))
      }
      pub(super) fn get_001310() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001311(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001314() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001316() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001318() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001321() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001322() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001324() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001327() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001329() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001328() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001329(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001331() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001333() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001332() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001333(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001334() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001330() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001331(), get_001332(), get_001334()))
      }
      pub(super) fn get_001326() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001327(), get_001328(), get_001330()))
      }
      pub(super) fn get_001338() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001337() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001338(),
        ))
      }
      pub(super) fn get_001336() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001337(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001340() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001339() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001340(),
        ))
      }
      pub(super) fn get_001343() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001342() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001343()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001341() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001342()))
      }
      pub(super) fn get_001335() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001336(), get_001339(), get_001341()))
      }
      pub(super) fn get_001325() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001326(),
          )],
          get_001335(),
        ))
      }
      pub(super) fn get_001323() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001324(),
          )],
          get_001325(),
        ))
      }
      pub(super) fn get_001320() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001321(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001322(),
            ),
          ],
          get_001323(),
        ))
      }
      pub(super) fn get_001345() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001344() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001345(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001319() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001320(),
          )],
          get_001344(),
        ))
      }
      pub(super) fn get_001317() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001318(),
          )],
          get_001319(),
        ))
      }
      pub(super) fn get_001315() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001316(),
          )],
          get_001317(),
        ))
      }
      pub(super) fn get_001313() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001314(),
          )],
          get_001315(),
        ))
      }
      pub(super) fn get_001347() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001346() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001347()))
      }
      pub(super) fn get_001309() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001310(), get_001313(), get_001346()))
      }
      pub(super) fn get_001306() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001307(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001308(),
            ),
          ],
          get_001309(),
        ))
      }
      pub(super) fn get_001350() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001351() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001349() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001350(),
          )],
          get_001351(),
        ))
      }
      pub(super) fn get_001353() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001352() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001353(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001355() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001357() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001359() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001361() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001363() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001365() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001364() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001365()]))
      }
      pub(super) fn get_001362() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001363(),
          )],
          get_001364(),
        ))
      }
      pub(super) fn get_001360() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001361(),
          )],
          get_001362(),
        ))
      }
      pub(super) fn get_001358() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001359(), get_001360()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001356() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001357(), get_001358()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001354() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001355(),
          )],
          get_001356(),
        ))
      }
      pub(super) fn get_001348() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001349(),
          get_001352(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001354(),
        ))
      }
      pub(super) fn get_001367() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_ident_str_49() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 49u32)
        }))
      }
      pub(super) fn get_001369() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_49()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001373() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_49()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001372() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001373(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001374() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_nat_5(),
          vec![get_ident_str_49(), get_number_16_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001376() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Not hexadecimal: \"\""))
      }
      pub(super) fn get_001375() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001376()))
      }
      pub(super) fn get_001371() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001372(), get_001374(), get_001375()))
      }
      pub(super) fn get_001379() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_str_49()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001378() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001221(),
          CoreBinaryOperator::Plus(None),
          get_001379(),
        ))
      }
      pub(super) fn get_001377() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001378()))
      }
      pub(super) fn get_001368() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001369(), get_001371(), get_001377()))
      }
      pub(super) fn get_001366() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 49u32) },
            get_001367(),
          )],
          get_001368(),
        ))
      }
      pub(super) fn get_001303() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001304(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001306(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001348(),
            ),
          ],
          get_001366(),
        ))
      }
      pub(super) fn get_001380() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("split"))
      }
      pub(super) fn get_001383() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001382() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001383(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001385() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001386() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001390() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001389() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001390(),
        ))
      }
      pub(super) fn get_001388() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001389(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001392() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001394() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001396() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001399() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001400() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001402() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001405() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001407() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001406() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001407(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001409() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001411() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001410() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001411(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001412() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001408() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001409(), get_001410(), get_001412()))
      }
      pub(super) fn get_001404() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001405(), get_001406(), get_001408()))
      }
      pub(super) fn get_001416() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001415() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001416(),
        ))
      }
      pub(super) fn get_001414() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001415(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001418() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001417() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001418(),
        ))
      }
      pub(super) fn get_001421() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001420() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001421()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001419() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001420()))
      }
      pub(super) fn get_001413() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001414(), get_001417(), get_001419()))
      }
      pub(super) fn get_001403() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001404(),
          )],
          get_001413(),
        ))
      }
      pub(super) fn get_001401() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001402(),
          )],
          get_001403(),
        ))
      }
      pub(super) fn get_001398() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001399(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001400(),
            ),
          ],
          get_001401(),
        ))
      }
      pub(super) fn get_001423() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001422() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001423(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001397() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001398(),
          )],
          get_001422(),
        ))
      }
      pub(super) fn get_001395() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001396(),
          )],
          get_001397(),
        ))
      }
      pub(super) fn get_001393() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001394(),
          )],
          get_001395(),
        ))
      }
      pub(super) fn get_001391() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001392(),
          )],
          get_001393(),
        ))
      }
      pub(super) fn get_001425() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001424() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001425()))
      }
      pub(super) fn get_001387() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001388(), get_001391(), get_001424()))
      }
      pub(super) fn get_001384() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001385(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001386(),
            ),
          ],
          get_001387(),
        ))
      }
      pub(super) fn get_001428() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001429() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001427() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001428(),
          )],
          get_001429(),
        ))
      }
      pub(super) fn get_001431() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001430() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001431(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001433() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001435() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001437() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001439() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001441() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001443() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001442() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001443()]))
      }
      pub(super) fn get_001440() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001441(),
          )],
          get_001442(),
        ))
      }
      pub(super) fn get_001438() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001439(),
          )],
          get_001440(),
        ))
      }
      pub(super) fn get_001436() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001437(), get_001438()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001434() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001435(), get_001436()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001432() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001433(),
          )],
          get_001434(),
        ))
      }
      pub(super) fn get_001426() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001427(),
          get_001430(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001432(),
        ))
      }
      pub(super) fn get_001445() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001447() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'c' not bound"))
      }
      pub(super) fn get_001446() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001447()))
      }
      pub(super) fn get_ident_str_50() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 50u32)
        }))
      }
      pub(super) fn get_001449() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_50()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_c_51() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 51u32)
        }))
      }
      pub(super) fn get_001452() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_c_51()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001456() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_c_51()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001455() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_001456(), get_number_1_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001459() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("splitLimit"))
      }
      pub(super) fn get_member_std_3_splitLimit() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_001459()))
      }
      pub(super) fn get_001460() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_001457() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_splitLimit(),
          vec![get_ident_str_50(), get_ident_c_51(), get_001460()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001463() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.split second parameter should have length 1, got ",
        ))
      }
      pub(super) fn get_001464() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_c_51()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001462() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001463(),
          CoreBinaryOperator::Plus(None),
          get_001464(),
        ))
      }
      pub(super) fn get_001461() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001462()))
      }
      pub(super) fn get_001454() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001455(), get_001457(), get_001461()))
      }
      pub(super) fn get_001467() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.split second parameter should be a string, got ",
        ))
      }
      pub(super) fn get_001468() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_c_51()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001466() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001467(),
          CoreBinaryOperator::Plus(None),
          get_001468(),
        ))
      }
      pub(super) fn get_001465() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001466()))
      }
      pub(super) fn get_001451() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001452(), get_001454(), get_001465()))
      }
      pub(super) fn get_001471() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.split first parameter should be a string, got ",
        ))
      }
      pub(super) fn get_001472() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_str_50()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001470() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001471(),
          CoreBinaryOperator::Plus(None),
          get_001472(),
        ))
      }
      pub(super) fn get_001469() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001470()))
      }
      pub(super) fn get_001448() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001449(), get_001451(), get_001469()))
      }
      pub(super) fn get_001444() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 50u32) },
              get_001445(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("c", 51u32) },
              get_001446(),
            ),
          ],
          get_001448(),
        ))
      }
      pub(super) fn get_001381() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001382(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001384(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001426(),
            ),
          ],
          get_001444(),
        ))
      }
      pub(super) fn get_001475() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001474() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001475(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001477() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001478() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001482() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001481() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001482(),
        ))
      }
      pub(super) fn get_001480() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001481(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001484() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001486() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001488() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001491() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001492() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001494() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001497() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001499() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001498() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001499(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001501() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001503() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001502() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001503(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001504() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001500() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001501(), get_001502(), get_001504()))
      }
      pub(super) fn get_001496() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001497(), get_001498(), get_001500()))
      }
      pub(super) fn get_001508() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001507() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001508(),
        ))
      }
      pub(super) fn get_001506() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001507(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001510() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001509() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001510(),
        ))
      }
      pub(super) fn get_001513() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001512() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001513()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001511() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001512()))
      }
      pub(super) fn get_001505() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001506(), get_001509(), get_001511()))
      }
      pub(super) fn get_001495() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001496(),
          )],
          get_001505(),
        ))
      }
      pub(super) fn get_001493() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001494(),
          )],
          get_001495(),
        ))
      }
      pub(super) fn get_001490() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001491(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001492(),
            ),
          ],
          get_001493(),
        ))
      }
      pub(super) fn get_001515() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001514() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001515(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001489() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001490(),
          )],
          get_001514(),
        ))
      }
      pub(super) fn get_001487() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001488(),
          )],
          get_001489(),
        ))
      }
      pub(super) fn get_001485() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001486(),
          )],
          get_001487(),
        ))
      }
      pub(super) fn get_001483() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001484(),
          )],
          get_001485(),
        ))
      }
      pub(super) fn get_001517() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001516() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001517()))
      }
      pub(super) fn get_001479() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001480(), get_001483(), get_001516()))
      }
      pub(super) fn get_001476() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001477(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001478(),
            ),
          ],
          get_001479(),
        ))
      }
      pub(super) fn get_001520() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001521() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001519() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001520(),
          )],
          get_001521(),
        ))
      }
      pub(super) fn get_001523() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001522() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001523(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001525() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001527() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001529() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001531() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001533() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001535() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001534() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001535()]))
      }
      pub(super) fn get_001532() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001533(),
          )],
          get_001534(),
        ))
      }
      pub(super) fn get_001530() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001531(),
          )],
          get_001532(),
        ))
      }
      pub(super) fn get_001528() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001529(), get_001530()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001526() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001527(), get_001528()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001524() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001525(),
          )],
          get_001526(),
        ))
      }
      pub(super) fn get_001518() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001519(),
          get_001522(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001524(),
        ))
      }
      pub(super) fn get_001537() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001538() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001447()))
      }
      pub(super) fn get_001540() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'maxsplits' not bound"))
      }
      pub(super) fn get_001539() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001540()))
      }
      pub(super) fn get_ident_str_52() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 52u32)
        }))
      }
      pub(super) fn get_001542() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_52()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_c_53() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 53u32)
        }))
      }
      pub(super) fn get_001545() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_c_53()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001549() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_c_53()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001548() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_001549(), get_number_1_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_maxsplits_54() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("maxsplits", 54u32)
        }))
      }
      pub(super) fn get_001551() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_maxsplits_54()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001555() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001557() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'delim' not bound"))
      }
      pub(super) fn get_001556() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001557()))
      }
      pub(super) fn get_001558() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_001560() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'arr' not bound"))
      }
      pub(super) fn get_001559() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_001561() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_str_56() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 56u32)
        }))
      }
      pub(super) fn get_ident_i_58() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 58u32)
        }))
      }
      pub(super) fn get_001563() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_56(),
          get_ident_i_58(),
        ))
      }
      pub(super) fn get_001567() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_58(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_001570() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_56()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001569() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_58(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001570(),
        ))
      }
      pub(super) fn get_ident_arr_59() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 59u32)
        }))
      }
      pub(super) fn get_ident_v_60() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 60u32)
        }))
      }
      pub(super) fn get_001573() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_v_60()]))
      }
      pub(super) fn get_001571() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_arr_59(),
          CoreBinaryOperator::Plus(None),
          get_001573(),
        ))
      }
      pub(super) fn get_ident_c_61() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 61u32)
        }))
      }
      pub(super) fn get_ident_delim_57() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("delim", 57u32)
        }))
      }
      pub(super) fn get_001583() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_001584() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_59()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001582() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001583(),
          CoreBinaryOperator::Or(None),
          get_001584(),
        ))
      }
      pub(super) fn get_001581() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_maxsplits_54(), get_001582()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001580() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001581(),
          CoreBinaryOperator::LessThan(None),
          get_ident_maxsplits_54(),
        ))
      }
      pub(super) fn get_001578() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_delim_57(),
          CoreBinaryOperator::And(None),
          get_001580(),
        ))
      }
      pub(super) fn get_001576() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_61(), get_001578()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_aux_55() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 55u32)
        }))
      }
      pub(super) fn get_ident_i2_62() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i2", 62u32)
        }))
      }
      pub(super) fn get_001589() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_v_60()]))
      }
      pub(super) fn get_001588() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_arr_59(),
          CoreBinaryOperator::Plus(None),
          get_001589(),
        ))
      }
      pub(super) fn get_001585() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_55(),
          vec![
            get_ident_str_56(),
            get_ident_delim_57(),
            get_ident_i2_62(),
            get_001588(),
            get_000548(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_001591() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_60(),
          CoreBinaryOperator::Plus(None),
          get_ident_c_61(),
        ))
      }
      pub(super) fn get_001590() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_55(),
          vec![
            get_ident_str_56(),
            get_ident_delim_57(),
            get_ident_i2_62(),
            get_ident_arr_59(),
            get_001591(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_001575() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001576(), get_001585(), get_001590()))
      }
      pub(super) fn get_001568() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001569(), get_001571(), get_001575()))
      }
      pub(super) fn get_001566() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i2", 62u32) },
            get_001567(),
          )],
          get_001568(),
        ))
      }
      pub(super) fn get_001562() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 61u32) },
            get_001563(),
          )],
          get_001566(),
        ))
      }
      pub(super) fn get_001554() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 56u32) },
              get_001555(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("delim", 57u32) },
              get_001556(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 58u32) },
              get_001558(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 59u32) },
              get_001559(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 60u32) },
              get_001561(),
            ),
          ],
          get_001562(),
        ))
      }
      pub(super) fn get_001593() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001592() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_55(),
          vec![
            get_ident_str_52(),
            get_ident_c_53(),
            get_number_0_0(),
            get_001593(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001553() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 55u32) },
            get_001554(),
          )],
          get_001592(),
        ))
      }
      pub(super) fn get_001596() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.splitLimit third parameter should be a number, got ",
        ))
      }
      pub(super) fn get_001597() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_maxsplits_54()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001595() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001596(),
          CoreBinaryOperator::Plus(None),
          get_001597(),
        ))
      }
      pub(super) fn get_001594() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001595()))
      }
      pub(super) fn get_001550() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001551(), get_001553(), get_001594()))
      }
      pub(super) fn get_001600() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.splitLimit second parameter should have length 1, got ",
        ))
      }
      pub(super) fn get_001601() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_c_53()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001599() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001600(),
          CoreBinaryOperator::Plus(None),
          get_001601(),
        ))
      }
      pub(super) fn get_001598() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001599()))
      }
      pub(super) fn get_001547() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001548(), get_001550(), get_001598()))
      }
      pub(super) fn get_001604() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.splitLimit second parameter should be a string, got ",
        ))
      }
      pub(super) fn get_001605() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_c_53()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001603() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001604(),
          CoreBinaryOperator::Plus(None),
          get_001605(),
        ))
      }
      pub(super) fn get_001602() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001603()))
      }
      pub(super) fn get_001544() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001545(), get_001547(), get_001602()))
      }
      pub(super) fn get_001608() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.splitLimit first parameter should be a string, got ",
        ))
      }
      pub(super) fn get_001609() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_str_52()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001607() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001608(),
          CoreBinaryOperator::Plus(None),
          get_001609(),
        ))
      }
      pub(super) fn get_001606() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001607()))
      }
      pub(super) fn get_001541() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001542(), get_001544(), get_001606()))
      }
      pub(super) fn get_001536() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 52u32) },
              get_001537(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("c", 53u32) },
              get_001538(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("maxsplits", 54u32) },
              get_001539(),
            ),
          ],
          get_001541(),
        ))
      }
      pub(super) fn get_001473() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001474(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001476(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001518(),
            ),
          ],
          get_001536(),
        ))
      }
      pub(super) fn get_001610() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("strReplace"))
      }
      pub(super) fn get_001613() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001612() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001613(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001615() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001616() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001620() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001619() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001620(),
        ))
      }
      pub(super) fn get_001618() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001619(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001622() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001624() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001626() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001629() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001630() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001632() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001635() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001637() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001636() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001637(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001639() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001641() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001640() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001641(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001642() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001638() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001639(), get_001640(), get_001642()))
      }
      pub(super) fn get_001634() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001635(), get_001636(), get_001638()))
      }
      pub(super) fn get_001646() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001645() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001646(),
        ))
      }
      pub(super) fn get_001644() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001645(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001648() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001647() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001648(),
        ))
      }
      pub(super) fn get_001651() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001650() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001651()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001649() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001650()))
      }
      pub(super) fn get_001643() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001644(), get_001647(), get_001649()))
      }
      pub(super) fn get_001633() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001634(),
          )],
          get_001643(),
        ))
      }
      pub(super) fn get_001631() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001632(),
          )],
          get_001633(),
        ))
      }
      pub(super) fn get_001628() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001629(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001630(),
            ),
          ],
          get_001631(),
        ))
      }
      pub(super) fn get_001653() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001652() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001653(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001627() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001628(),
          )],
          get_001652(),
        ))
      }
      pub(super) fn get_001625() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001626(),
          )],
          get_001627(),
        ))
      }
      pub(super) fn get_001623() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001624(),
          )],
          get_001625(),
        ))
      }
      pub(super) fn get_001621() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001622(),
          )],
          get_001623(),
        ))
      }
      pub(super) fn get_001655() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001654() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001655()))
      }
      pub(super) fn get_001617() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001618(), get_001621(), get_001654()))
      }
      pub(super) fn get_001614() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001615(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001616(),
            ),
          ],
          get_001617(),
        ))
      }
      pub(super) fn get_001658() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001659() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001657() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001658(),
          )],
          get_001659(),
        ))
      }
      pub(super) fn get_001661() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001660() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001661(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001663() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001665() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001667() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001669() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001671() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001673() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001672() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001673()]))
      }
      pub(super) fn get_001670() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001671(),
          )],
          get_001672(),
        ))
      }
      pub(super) fn get_001668() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001669(),
          )],
          get_001670(),
        ))
      }
      pub(super) fn get_001666() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001667(), get_001668()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001664() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001665(), get_001666()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001662() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001663(),
          )],
          get_001664(),
        ))
      }
      pub(super) fn get_001656() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001657(),
          get_001660(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001662(),
        ))
      }
      pub(super) fn get_001675() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001676() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000616()))
      }
      pub(super) fn get_001678() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'to' not bound"))
      }
      pub(super) fn get_001677() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001678()))
      }
      pub(super) fn get_ident_str_63() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 63u32)
        }))
      }
      pub(super) fn get_001680() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_63()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_from_64() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("from", 64u32)
        }))
      }
      pub(super) fn get_001683() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_from_64()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_to_65() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("to", 65u32)
        }))
      }
      pub(super) fn get_001686() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_to_65()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001690() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_from_64(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001689() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_001690(),
        ))
      }
      pub(super) fn get_001692() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_63()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001694() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_from_64()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001697() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_69() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 69u32)
        }))
      }
      pub(super) fn get_ident_from_len_67() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("from_len", 67u32)
        }))
      }
      pub(super) fn get_001701() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_69(),
          CoreBinaryOperator::Plus(None),
          get_ident_from_len_67(),
        ))
      }
      pub(super) fn get_001699() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![
            get_ident_str_63(),
            get_ident_i_69(),
            get_001701(),
            get_null(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001698() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_001699(), get_ident_from_64()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001696() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 69u32) },
            get_001697(),
          )],
          get_001698(),
        ))
      }
      pub(super) fn get_001706() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Parameter 'start_index' not bound",
        ))
      }
      pub(super) fn get_001705() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001706()))
      }
      pub(super) fn get_001708() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'curr_index' not bound"))
      }
      pub(super) fn get_001707() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001708()))
      }
      pub(super) fn get_001710() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'acc' not bound"))
      }
      pub(super) fn get_001709() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001710()))
      }
      pub(super) fn get_ident_curr_index_72() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("curr_index", 72u32)
        }))
      }
      pub(super) fn get_ident_str_len_66() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str_len", 66u32)
        }))
      }
      pub(super) fn get_001712() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_curr_index_72(),
          CoreBinaryOperator::GreaterThan(None),
          get_ident_str_len_66(),
        ))
      }
      pub(super) fn get_ident_acc_73() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("acc", 73u32)
        }))
      }
      pub(super) fn get_ident_start_index_71() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("start_index", 71u32)
        }))
      }
      pub(super) fn get_001717() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![
            get_ident_str_63(),
            get_ident_start_index_71(),
            get_ident_curr_index_72(),
            get_null(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001715() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_73(),
          CoreBinaryOperator::Plus(None),
          get_001717(),
        ))
      }
      pub(super) fn get_ident_found_at_68() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("found_at", 68u32)
        }))
      }
      pub(super) fn get_001720() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_found_at_68(),
          vec![get_ident_curr_index_72()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001724() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_from_64()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001723() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_curr_index_72(),
          CoreBinaryOperator::Plus(None),
          get_001724(),
        ))
      }
      pub(super) fn get_ident_replace_after_70() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("replace_after", 70u32)
        }))
      }
      pub(super) fn get_ident_new_index_74() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("new_index", 74u32)
        }))
      }
      pub(super) fn get_001730() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![
            get_ident_str_63(),
            get_ident_start_index_71(),
            get_ident_curr_index_72(),
            get_null(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001729() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_73(),
          CoreBinaryOperator::Plus(None),
          get_001730(),
        ))
      }
      pub(super) fn get_001728() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001729(),
          CoreBinaryOperator::Plus(None),
          get_ident_to_65(),
        ))
      }
      pub(super) fn get_001725() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_replace_after_70(),
          vec![
            get_ident_new_index_74(),
            get_ident_new_index_74(),
            get_001728(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_001722() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("new_index", 74u32) },
            get_001723(),
          )],
          get_001725(),
        ))
      }
      pub(super) fn get_001732() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_curr_index_72(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_001731() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_replace_after_70(),
          vec![get_ident_start_index_71(), get_001732(), get_ident_acc_73()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_001719() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001720(), get_001722(), get_001731()))
      }
      pub(super) fn get_001711() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001712(), get_001715(), get_001719()))
      }
      pub(super) fn get_001704() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("start_index", 71u32) },
              get_001705(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("curr_index", 72u32) },
              get_001707(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("acc", 73u32) },
              get_001709(),
            ),
          ],
          get_001711(),
        ))
      }
      pub(super) fn get_001734() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_from_len_67(), get_number_1_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_std_3_split() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_001380()))
      }
      pub(super) fn get_001736() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_split(),
          vec![get_ident_str_63(), get_ident_from_64()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001735() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_ident_to_65(), get_001736()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001738() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_replace_after_70(),
          vec![get_number_0_0(), get_number_0_0(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001733() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001734(), get_001735(), get_001738()))
      }
      pub(super) fn get_001703() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("replace_after", 70u32) },
            get_001704(),
          )],
          get_001733(),
        ))
      }
      pub(super) fn get_001695() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("found_at", 68u32) },
            get_001696(),
          )],
          get_001703(),
        ))
      }
      pub(super) fn get_001693() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("from_len", 67u32) },
            get_001694(),
          )],
          get_001695(),
        ))
      }
      pub(super) fn get_001691() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str_len", 66u32) },
            get_001692(),
          )],
          get_001693(),
        ))
      }
      pub(super) fn get_001740() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "'from' string must not be zero length.",
        ))
      }
      pub(super) fn get_001739() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001740()))
      }
      pub(super) fn get_001688() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001689(), get_001691(), get_001739()))
      }
      pub(super) fn get_001742() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Assertion failed: std.isString(to)",
        ))
      }
      pub(super) fn get_001741() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001742()))
      }
      pub(super) fn get_001685() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001686(), get_001688(), get_001741()))
      }
      pub(super) fn get_001744() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Assertion failed: std.isString(from)",
        ))
      }
      pub(super) fn get_001743() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001744()))
      }
      pub(super) fn get_001682() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001683(), get_001685(), get_001743()))
      }
      pub(super) fn get_001746() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Assertion failed: std.isString(str)",
        ))
      }
      pub(super) fn get_001745() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001746()))
      }
      pub(super) fn get_001679() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001680(), get_001682(), get_001745()))
      }
      pub(super) fn get_001674() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 63u32) },
              get_001675(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("from", 64u32) },
              get_001676(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("to", 65u32) },
              get_001677(),
            ),
          ],
          get_001679(),
        ))
      }
      pub(super) fn get_001611() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001612(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001614(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001656(),
            ),
          ],
          get_001674(),
        ))
      }
      pub(super) fn get_001747() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("asciiUpper"))
      }
      pub(super) fn get_001750() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001749() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001750(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001752() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001753() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001757() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001756() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001757(),
        ))
      }
      pub(super) fn get_001755() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001756(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001759() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001761() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001763() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001766() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001767() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001769() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001772() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001774() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001773() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001774(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001776() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001778() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001777() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001778(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001779() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001775() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001776(), get_001777(), get_001779()))
      }
      pub(super) fn get_001771() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001772(), get_001773(), get_001775()))
      }
      pub(super) fn get_001783() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001782() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001783(),
        ))
      }
      pub(super) fn get_001781() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001782(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001785() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001784() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001785(),
        ))
      }
      pub(super) fn get_001788() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001787() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001788()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001786() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001787()))
      }
      pub(super) fn get_001780() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001781(), get_001784(), get_001786()))
      }
      pub(super) fn get_001770() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001771(),
          )],
          get_001780(),
        ))
      }
      pub(super) fn get_001768() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001769(),
          )],
          get_001770(),
        ))
      }
      pub(super) fn get_001765() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001766(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001767(),
            ),
          ],
          get_001768(),
        ))
      }
      pub(super) fn get_001790() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001789() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001790(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001764() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001765(),
          )],
          get_001789(),
        ))
      }
      pub(super) fn get_001762() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001763(),
          )],
          get_001764(),
        ))
      }
      pub(super) fn get_001760() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001761(),
          )],
          get_001762(),
        ))
      }
      pub(super) fn get_001758() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001759(),
          )],
          get_001760(),
        ))
      }
      pub(super) fn get_001792() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001791() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001792()))
      }
      pub(super) fn get_001754() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001755(), get_001758(), get_001791()))
      }
      pub(super) fn get_001751() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001752(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001753(),
            ),
          ],
          get_001754(),
        ))
      }
      pub(super) fn get_001795() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001796() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001794() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001795(),
          )],
          get_001796(),
        ))
      }
      pub(super) fn get_001798() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001797() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001798(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001800() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001802() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001804() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001806() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001808() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001810() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001809() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001810()]))
      }
      pub(super) fn get_001807() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001808(),
          )],
          get_001809(),
        ))
      }
      pub(super) fn get_001805() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001806(),
          )],
          get_001807(),
        ))
      }
      pub(super) fn get_001803() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001804(), get_001805()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001801() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001802(), get_001803()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001799() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001800(),
          )],
          get_001801(),
        ))
      }
      pub(super) fn get_001793() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001794(),
          get_001797(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001799(),
        ))
      }
      pub(super) fn get_001812() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001816() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001447()))
      }
      pub(super) fn get_ident_cp_76() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cp", 76u32)
        }))
      }
      pub(super) fn get_ident_c_78() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 78u32)
        }))
      }
      pub(super) fn get_001820() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_cp_76(),
          vec![get_ident_c_78()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_number_97_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(97f64))
      }
      pub(super) fn get_001825() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_cp_76(),
          vec![get_ident_c_78()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001823() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_97_0(),
          CoreBinaryOperator::And(None),
          get_001825(),
        ))
      }
      pub(super) fn get_001819() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001820(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001823(),
        ))
      }
      pub(super) fn get_number_123_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(123f64))
      }
      pub(super) fn get_001818() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001819(),
          CoreBinaryOperator::LessThan(None),
          get_number_123_0(),
        ))
      }
      pub(super) fn get_001829() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("char"))
      }
      pub(super) fn get_member_std_3_char() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_001829()))
      }
      pub(super) fn get_001831() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_cp_76(),
          vec![get_ident_c_78()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_number_32_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(32f64))
      }
      pub(super) fn get_001830() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001831(),
          CoreBinaryOperator::Minus(None),
          get_number_32_0(),
        ))
      }
      pub(super) fn get_001827() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_char(),
          vec![get_001830()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001817() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_001818(),
          get_001827(),
          get_ident_c_78(),
        ))
      }
      pub(super) fn get_001815() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("c", 78u32) },
            get_001816(),
          )],
          get_001817(),
        ))
      }
      pub(super) fn get_001836() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("map"))
      }
      pub(super) fn get_member_std_3_map() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_001836()))
      }
      pub(super) fn get_ident_up_letter_77() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("up_letter", 77u32)
        }))
      }
      pub(super) fn get_ident_str_75() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 75u32)
        }))
      }
      pub(super) fn get_001838() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_75()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001834() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_map(),
          vec![get_ident_up_letter_77(), get_001838()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001833() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_001834()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001814() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("up_letter", 77u32) },
            get_001815(),
          )],
          get_001833(),
        ))
      }
      pub(super) fn get_001813() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("cp", 76u32) },
            get_member_std_3_codepoint(),
          )],
          get_001814(),
        ))
      }
      pub(super) fn get_001811() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 75u32) },
            get_001812(),
          )],
          get_001813(),
        ))
      }
      pub(super) fn get_001748() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001749(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001751(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001793(),
            ),
          ],
          get_001811(),
        ))
      }
      pub(super) fn get_001840() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("asciiLower"))
      }
      pub(super) fn get_001843() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001842() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001843(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001845() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001846() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001850() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001849() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001850(),
        ))
      }
      pub(super) fn get_001848() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001849(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001852() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001854() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001856() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001859() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001860() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001862() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001865() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001867() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001866() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001867(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001869() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001871() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001870() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001871(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001872() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001868() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001869(), get_001870(), get_001872()))
      }
      pub(super) fn get_001864() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001865(), get_001866(), get_001868()))
      }
      pub(super) fn get_001876() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001875() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001876(),
        ))
      }
      pub(super) fn get_001874() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001875(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001878() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001877() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001878(),
        ))
      }
      pub(super) fn get_001881() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001880() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001881()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001879() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001880()))
      }
      pub(super) fn get_001873() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001874(), get_001877(), get_001879()))
      }
      pub(super) fn get_001863() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001864(),
          )],
          get_001873(),
        ))
      }
      pub(super) fn get_001861() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001862(),
          )],
          get_001863(),
        ))
      }
      pub(super) fn get_001858() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001859(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001860(),
            ),
          ],
          get_001861(),
        ))
      }
      pub(super) fn get_001883() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001882() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001883(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001857() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001858(),
          )],
          get_001882(),
        ))
      }
      pub(super) fn get_001855() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001856(),
          )],
          get_001857(),
        ))
      }
      pub(super) fn get_001853() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001854(),
          )],
          get_001855(),
        ))
      }
      pub(super) fn get_001851() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001852(),
          )],
          get_001853(),
        ))
      }
      pub(super) fn get_001885() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001884() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001885()))
      }
      pub(super) fn get_001847() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001848(), get_001851(), get_001884()))
      }
      pub(super) fn get_001844() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001845(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001846(),
            ),
          ],
          get_001847(),
        ))
      }
      pub(super) fn get_001888() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001889() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001887() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001888(),
          )],
          get_001889(),
        ))
      }
      pub(super) fn get_001891() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001890() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001891(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001893() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001895() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001897() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001899() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001901() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001903() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001902() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001903()]))
      }
      pub(super) fn get_001900() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001901(),
          )],
          get_001902(),
        ))
      }
      pub(super) fn get_001898() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001899(),
          )],
          get_001900(),
        ))
      }
      pub(super) fn get_001896() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001897(), get_001898()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001894() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001895(), get_001896()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001892() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001893(),
          )],
          get_001894(),
        ))
      }
      pub(super) fn get_001886() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001887(),
          get_001890(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001892(),
        ))
      }
      pub(super) fn get_001905() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001909() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001447()))
      }
      pub(super) fn get_ident_cp_80() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cp", 80u32)
        }))
      }
      pub(super) fn get_ident_c_82() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 82u32)
        }))
      }
      pub(super) fn get_001913() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_cp_80(),
          vec![get_ident_c_82()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_number_65_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(65f64))
      }
      pub(super) fn get_001918() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_cp_80(),
          vec![get_ident_c_82()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001916() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_65_0(),
          CoreBinaryOperator::And(None),
          get_001918(),
        ))
      }
      pub(super) fn get_001912() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001913(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001916(),
        ))
      }
      pub(super) fn get_number_91_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(91f64))
      }
      pub(super) fn get_001911() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001912(),
          CoreBinaryOperator::LessThan(None),
          get_number_91_0(),
        ))
      }
      pub(super) fn get_001922() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_cp_80(),
          vec![get_ident_c_82()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001921() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001922(),
          CoreBinaryOperator::Plus(None),
          get_number_32_0(),
        ))
      }
      pub(super) fn get_001920() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_char(),
          vec![get_001921()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001910() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_001911(),
          get_001920(),
          get_ident_c_82(),
        ))
      }
      pub(super) fn get_001908() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("c", 82u32) },
            get_001909(),
          )],
          get_001910(),
        ))
      }
      pub(super) fn get_ident_down_letter_81() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("down_letter", 81u32)
        }))
      }
      pub(super) fn get_ident_str_79() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 79u32)
        }))
      }
      pub(super) fn get_001926() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_79()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001924() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_map(),
          vec![get_ident_down_letter_81(), get_001926()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001923() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_001924()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001907() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("down_letter", 81u32) },
            get_001908(),
          )],
          get_001923(),
        ))
      }
      pub(super) fn get_001906() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("cp", 80u32) },
            get_member_std_3_codepoint(),
          )],
          get_001907(),
        ))
      }
      pub(super) fn get_001904() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 79u32) },
            get_001905(),
          )],
          get_001906(),
        ))
      }
      pub(super) fn get_001841() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001842(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001844(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001886(),
            ),
          ],
          get_001904(),
        ))
      }
      pub(super) fn get_001930() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_001929() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_001930(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_001932() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_001933() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_001937() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001936() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_001937(),
        ))
      }
      pub(super) fn get_001935() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001936(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_001939() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001941() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001943() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001946() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_001947() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_001949() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001952() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001954() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_001953() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001954(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001956() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001958() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_001957() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001958(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_001959() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_001955() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001956(), get_001957(), get_001959()))
      }
      pub(super) fn get_001951() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001952(), get_001953(), get_001955()))
      }
      pub(super) fn get_001963() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001962() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_001963(),
        ))
      }
      pub(super) fn get_001961() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001962(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_001965() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_001964() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_001965(),
        ))
      }
      pub(super) fn get_001968() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_001967() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_001968()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001966() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001967()))
      }
      pub(super) fn get_001960() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001961(), get_001964(), get_001966()))
      }
      pub(super) fn get_001950() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_001951(),
          )],
          get_001960(),
        ))
      }
      pub(super) fn get_001948() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_001949(),
          )],
          get_001950(),
        ))
      }
      pub(super) fn get_001945() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_001946(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_001947(),
            ),
          ],
          get_001948(),
        ))
      }
      pub(super) fn get_001970() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001969() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_001970(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001944() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_001945(),
          )],
          get_001969(),
        ))
      }
      pub(super) fn get_001942() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_001943(),
          )],
          get_001944(),
        ))
      }
      pub(super) fn get_001940() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_001941(),
          )],
          get_001942(),
        ))
      }
      pub(super) fn get_001938() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_001939(),
          )],
          get_001940(),
        ))
      }
      pub(super) fn get_001972() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001971() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001972()))
      }
      pub(super) fn get_001934() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_001935(), get_001938(), get_001971()))
      }
      pub(super) fn get_001931() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_001932(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_001933(),
            ),
          ],
          get_001934(),
        ))
      }
      pub(super) fn get_001975() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001976() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001974() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001975(),
          )],
          get_001976(),
        ))
      }
      pub(super) fn get_001978() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_001977() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001978(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_001980() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001982() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_001984() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001986() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_001988() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_001990() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_001989() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_001990()]))
      }
      pub(super) fn get_001987() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_001988(),
          )],
          get_001989(),
        ))
      }
      pub(super) fn get_001985() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_001986(),
          )],
          get_001987(),
        ))
      }
      pub(super) fn get_001983() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001984(), get_001985()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001981() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_001982(), get_001983()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001979() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_001980(),
          )],
          get_001981(),
        ))
      }
      pub(super) fn get_001973() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_001974(),
          get_001977(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_001979(),
        ))
      }
      pub(super) fn get_001992() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000616()))
      }
      pub(super) fn get_001993() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001678()))
      }
      pub(super) fn get_ident_to_84() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("to", 84u32)
        }))
      }
      pub(super) fn get_ident_from_83() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("from", 83u32)
        }))
      }
      pub(super) fn get_001996() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_to_84(),
          CoreBinaryOperator::Minus(None),
          get_ident_from_83(),
        ))
      }
      pub(super) fn get_001995() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001996(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_002000() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_85() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 85u32)
        }))
      }
      pub(super) fn get_002001() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_85(),
          CoreBinaryOperator::Plus(None),
          get_ident_from_83(),
        ))
      }
      pub(super) fn get_001999() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 85u32) },
            get_002000(),
          )],
          get_002001(),
        ))
      }
      pub(super) fn get_001994() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_001995(), get_001999()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_001991() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("from", 83u32) },
              get_001992(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("to", 84u32) },
              get_001993(),
            ),
          ],
          get_001994(),
        ))
      }
      pub(super) fn get_001928() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_001929(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_001931(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_001973(),
            ),
          ],
          get_001991(),
        ))
      }
      pub(super) fn get_002003() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("repeat"))
      }
      pub(super) fn get_002006() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002005() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002006(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002008() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002009() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002013() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002012() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002013(),
        ))
      }
      pub(super) fn get_002011() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002012(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002015() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002017() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002019() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002022() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002023() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002025() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002028() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002030() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002029() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002030(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002032() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002034() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002033() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002034(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002035() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002031() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002032(), get_002033(), get_002035()))
      }
      pub(super) fn get_002027() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002028(), get_002029(), get_002031()))
      }
      pub(super) fn get_002039() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002038() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002039(),
        ))
      }
      pub(super) fn get_002037() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002038(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002041() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002040() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002041(),
        ))
      }
      pub(super) fn get_002044() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002043() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002044()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002042() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002043()))
      }
      pub(super) fn get_002036() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002037(), get_002040(), get_002042()))
      }
      pub(super) fn get_002026() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002027(),
          )],
          get_002036(),
        ))
      }
      pub(super) fn get_002024() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002025(),
          )],
          get_002026(),
        ))
      }
      pub(super) fn get_002021() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002022(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002023(),
            ),
          ],
          get_002024(),
        ))
      }
      pub(super) fn get_002046() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002045() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002046(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002020() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002021(),
          )],
          get_002045(),
        ))
      }
      pub(super) fn get_002018() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002019(),
          )],
          get_002020(),
        ))
      }
      pub(super) fn get_002016() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002017(),
          )],
          get_002018(),
        ))
      }
      pub(super) fn get_002014() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002015(),
          )],
          get_002016(),
        ))
      }
      pub(super) fn get_002048() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002047() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002048()))
      }
      pub(super) fn get_002010() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002011(), get_002014(), get_002047()))
      }
      pub(super) fn get_002007() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002008(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002009(),
            ),
          ],
          get_002010(),
        ))
      }
      pub(super) fn get_002051() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002052() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002050() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002051(),
          )],
          get_002052(),
        ))
      }
      pub(super) fn get_002054() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002053() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002054(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002056() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002058() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002060() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002062() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002064() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002066() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002065() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002066()]))
      }
      pub(super) fn get_002063() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002064(),
          )],
          get_002065(),
        ))
      }
      pub(super) fn get_002061() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002062(),
          )],
          get_002063(),
        ))
      }
      pub(super) fn get_002059() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002060(), get_002061()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002057() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002058(), get_002059()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002055() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002056(),
          )],
          get_002057(),
        ))
      }
      pub(super) fn get_002049() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002050(),
          get_002053(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002055(),
        ))
      }
      pub(super) fn get_002069() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'what' not bound"))
      }
      pub(super) fn get_002068() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002069()))
      }
      pub(super) fn get_002071() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'count' not bound"))
      }
      pub(super) fn get_002070() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002071()))
      }
      pub(super) fn get_ident_what_86() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("what", 86u32)
        }))
      }
      pub(super) fn get_002074() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_what_86()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_std_3_isArray() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000336()))
      }
      pub(super) fn get_002077() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_what_86()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002079() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002081() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.repeat first argument must be an array or a string",
        ))
      }
      pub(super) fn get_002080() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002081()))
      }
      pub(super) fn get_002076() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002077(), get_002079(), get_002080()))
      }
      pub(super) fn get_002073() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002074(), get_000548(), get_002076()))
      }
      pub(super) fn get_ident_joiner_88() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("joiner", 88u32)
        }))
      }
      pub(super) fn get_ident_count_87() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("count", 87u32)
        }))
      }
      pub(super) fn get_002087() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_002086() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 89u32) },
            get_002087(),
          )],
          get_ident_what_86(),
        ))
      }
      pub(super) fn get_002084() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_ident_count_87(), get_002086()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002082() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_ident_joiner_88(), get_002084()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002072() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("joiner", 88u32) },
            get_002073(),
          )],
          get_002082(),
        ))
      }
      pub(super) fn get_002067() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("what", 86u32) },
              get_002068(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("count", 87u32) },
              get_002070(),
            ),
          ],
          get_002072(),
        ))
      }
      pub(super) fn get_002004() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002005(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002007(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002049(),
            ),
          ],
          get_002067(),
        ))
      }
      pub(super) fn get_002090() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002089() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002090(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002092() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002093() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002097() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002096() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002097(),
        ))
      }
      pub(super) fn get_002095() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002096(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002099() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002101() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002103() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002106() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002107() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002109() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002112() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002114() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002113() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002114(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002116() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002118() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002117() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002118(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002119() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002115() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002116(), get_002117(), get_002119()))
      }
      pub(super) fn get_002111() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002112(), get_002113(), get_002115()))
      }
      pub(super) fn get_002123() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002122() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002123(),
        ))
      }
      pub(super) fn get_002121() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002122(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002125() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002124() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002125(),
        ))
      }
      pub(super) fn get_002128() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002127() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002128()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002126() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002127()))
      }
      pub(super) fn get_002120() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002121(), get_002124(), get_002126()))
      }
      pub(super) fn get_002110() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002111(),
          )],
          get_002120(),
        ))
      }
      pub(super) fn get_002108() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002109(),
          )],
          get_002110(),
        ))
      }
      pub(super) fn get_002105() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002106(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002107(),
            ),
          ],
          get_002108(),
        ))
      }
      pub(super) fn get_002130() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002129() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002130(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002104() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002105(),
          )],
          get_002129(),
        ))
      }
      pub(super) fn get_002102() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002103(),
          )],
          get_002104(),
        ))
      }
      pub(super) fn get_002100() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002101(),
          )],
          get_002102(),
        ))
      }
      pub(super) fn get_002098() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002099(),
          )],
          get_002100(),
        ))
      }
      pub(super) fn get_002132() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002131() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002132()))
      }
      pub(super) fn get_002094() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002095(), get_002098(), get_002131()))
      }
      pub(super) fn get_002091() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002092(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002093(),
            ),
          ],
          get_002094(),
        ))
      }
      pub(super) fn get_002135() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002136() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002134() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002135(),
          )],
          get_002136(),
        ))
      }
      pub(super) fn get_002138() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002137() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002138(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002140() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002142() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002144() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002146() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002148() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002150() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002149() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002150()]))
      }
      pub(super) fn get_002147() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002148(),
          )],
          get_002149(),
        ))
      }
      pub(super) fn get_002145() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002146(),
          )],
          get_002147(),
        ))
      }
      pub(super) fn get_002143() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002144(), get_002145()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002141() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002142(), get_002143()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002139() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002140(),
          )],
          get_002141(),
        ))
      }
      pub(super) fn get_002133() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002134(),
          get_002137(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002139(),
        ))
      }
      pub(super) fn get_002153() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'indexable' not bound"))
      }
      pub(super) fn get_002152() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002153()))
      }
      pub(super) fn get_002155() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'index' not bound"))
      }
      pub(super) fn get_002154() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002155()))
      }
      pub(super) fn get_002157() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'end' not bound"))
      }
      pub(super) fn get_002156() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002157()))
      }
      pub(super) fn get_002159() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'step' not bound"))
      }
      pub(super) fn get_002158() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002159()))
      }
      pub(super) fn get_002162() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("indexable"))
      }
      pub(super) fn get_ident_indexable_90() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("indexable", 90u32)
        }))
      }
      pub(super) fn get_002163() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_indexable_90()))
      }
      pub(super) fn get_002165() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("index"))
      }
      pub(super) fn get_ident_index_91() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("index", 91u32)
        }))
      }
      pub(super) fn get_002168() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_index_91(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002167() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_002168(),
          get_number_0_0(),
          get_ident_index_91(),
        ))
      }
      pub(super) fn get_002166() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_002167()))
      }
      pub(super) fn get_002170() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("end"))
      }
      pub(super) fn get_ident_end_92() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("end", 92u32)
        }))
      }
      pub(super) fn get_002173() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_end_92(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002175() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_indexable_90()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002172() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_002173(),
          get_002175(),
          get_ident_end_92(),
        ))
      }
      pub(super) fn get_002171() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_002172()))
      }
      pub(super) fn get_002176() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("step"))
      }
      pub(super) fn get_ident_step_93() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("step", 93u32)
        }))
      }
      pub(super) fn get_002179() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_step_93(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002178() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_002179(),
          get_number_1_0(),
          get_ident_step_93(),
        ))
      }
      pub(super) fn get_002177() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_002178()))
      }
      pub(super) fn get_002182() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_indexable_90()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002181() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_002182()))
      }
      pub(super) fn get_002184() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_indexable_90()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002183() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_002184()))
      }
      pub(super) fn get_002161() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_002162(),
              CoreObjectFieldOperator::Default(None),
              get_002163(),
            ),
            CoreObjectField::new(
              get_002165(),
              CoreObjectFieldOperator::Default(None),
              get_002166(),
            ),
            CoreObjectField::new(
              get_002170(),
              CoreObjectFieldOperator::Default(None),
              get_002171(),
            ),
            CoreObjectField::new(
              get_002176(),
              CoreObjectFieldOperator::Default(None),
              get_002177(),
            ),
            CoreObjectField::new(
              get_000105(),
              CoreObjectFieldOperator::Default(None),
              get_002181(),
            ),
            CoreObjectField::new(
              get_000123(),
              CoreObjectFieldOperator::Default(None),
              get_002183(),
            ),
          ],
        ))
      }
      pub(super) fn get_ident_invar_94() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("invar", 94u32)
        }))
      }
      pub(super) fn get_member_invar_94_index() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_invar_94(),
          get_002165(),
        ))
      }
      pub(super) fn get_member_invar_94_end() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_invar_94(),
          get_002170(),
        ))
      }
      pub(super) fn get_002191() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_member_invar_94_end(),
        ))
      }
      pub(super) fn get_002188() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_member_invar_94_index(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002191(),
        ))
      }
      pub(super) fn get_member_invar_94_step() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_invar_94(),
          get_002176(),
        ))
      }
      pub(super) fn get_002193() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_member_invar_94_step(),
        ))
      }
      pub(super) fn get_002187() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002188(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002193(),
        ))
      }
      pub(super) fn get_002186() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002187(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002197() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_step_93(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002196() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002197(),
        ))
      }
      pub(super) fn get_002200() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_indexable_90()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002201() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_indexable_90()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002199() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002200(),
          CoreBinaryOperator::Or(None),
          get_002201(),
        ))
      }
      pub(super) fn get_002205() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'slice' not bound"))
      }
      pub(super) fn get_002204() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002205()))
      }
      pub(super) fn get_002207() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'cur' not bound"))
      }
      pub(super) fn get_002206() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002207()))
      }
      pub(super) fn get_ident_cur_97() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cur", 97u32)
        }))
      }
      pub(super) fn get_002212() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_member_invar_94_end(),
          CoreBinaryOperator::Or(None),
          get_ident_cur_97(),
        ))
      }
      pub(super) fn get_002210() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cur_97(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002212(),
        ))
      }
      pub(super) fn get_member_invar_94_length() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_invar_94(),
          get_000105(),
        ))
      }
      pub(super) fn get_002209() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002210(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_member_invar_94_length(),
        ))
      }
      pub(super) fn get_ident_slice_96() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("slice", 96u32)
        }))
      }
      pub(super) fn get_ident_build_95() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("build", 95u32)
        }))
      }
      pub(super) fn get_member_invar_94_type() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_invar_94(),
          get_000123(),
        ))
      }
      pub(super) fn get_002218() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_invar_94_type(), get_000125()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_invar_94_indexable() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_invar_94(),
          get_002162(),
        ))
      }
      pub(super) fn get_002221() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_member_invar_94_indexable(),
          get_ident_cur_97(),
        ))
      }
      pub(super) fn get_002220() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_slice_96(),
          CoreBinaryOperator::Plus(None),
          get_002221(),
        ))
      }
      pub(super) fn get_002225() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_member_invar_94_indexable(),
          get_ident_cur_97(),
        ))
      }
      pub(super) fn get_002224() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002225()]))
      }
      pub(super) fn get_002223() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_slice_96(),
          CoreBinaryOperator::Plus(None),
          get_002224(),
        ))
      }
      pub(super) fn get_002217() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002218(), get_002220(), get_002223()))
      }
      pub(super) fn get_002226() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cur_97(),
          CoreBinaryOperator::Plus(None),
          get_member_invar_94_step(),
        ))
      }
      pub(super) fn get_002215() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_build_95(),
          vec![get_002217(), get_002226()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_002208() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_002209(),
          get_ident_slice_96(),
          get_002215(),
        ))
      }
      pub(super) fn get_002203() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("slice", 96u32) },
              get_002204(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("cur", 97u32) },
              get_002206(),
            ),
          ],
          get_002208(),
        ))
      }
      pub(super) fn get_002229() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_invar_94_type(), get_000125()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002230() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002228() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002229(), get_000548(), get_002230()))
      }
      pub(super) fn get_002227() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_build_95(),
          vec![get_002228(), get_member_invar_94_index()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002202() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("build", 95u32) },
            get_002203(),
          )],
          get_002227(),
        ))
      }
      pub(super) fn get_002233() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.slice accepts a string or an array, but got: %s",
        ))
      }
      pub(super) fn get_002234() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_indexable_90()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002232() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_002233(), get_002234()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002231() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002232()))
      }
      pub(super) fn get_002198() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002199(), get_002202(), get_002231()))
      }
      pub(super) fn get_002237() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "got %s but step must be greater than 0",
        ))
      }
      pub(super) fn get_002236() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_002237(), get_ident_step_93()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002235() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002236()))
      }
      pub(super) fn get_002195() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002196(), get_002198(), get_002235()))
      }
      pub(super) fn get_002240() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "got [%s:%s:%s] but negative index, end, and steps are not supported",
        ))
      }
      pub(super) fn get_002241() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_member_invar_94_index(),
          get_member_invar_94_end(),
          get_member_invar_94_step(),
        ]))
      }
      pub(super) fn get_002239() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_002240(), get_002241()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002238() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002239()))
      }
      pub(super) fn get_002185() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002186(), get_002195(), get_002238()))
      }
      pub(super) fn get_002160() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("invar", 94u32) },
            get_002161(),
          )],
          get_002185(),
        ))
      }
      pub(super) fn get_002151() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("indexable", 90u32) },
              get_002152(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("index", 91u32) },
              get_002154(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("end", 92u32) },
              get_002156(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("step", 93u32) },
              get_002158(),
            ),
          ],
          get_002160(),
        ))
      }
      pub(super) fn get_002088() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002089(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002091(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002133(),
            ),
          ],
          get_002151(),
        ))
      }
      pub(super) fn get_002244() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002243() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002244(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002246() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002247() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002251() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002250() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002251(),
        ))
      }
      pub(super) fn get_002249() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002250(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002253() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002255() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002257() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002260() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002261() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002263() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002266() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002268() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002267() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002268(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002270() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002272() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002271() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002272(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002273() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002269() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002270(), get_002271(), get_002273()))
      }
      pub(super) fn get_002265() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002266(), get_002267(), get_002269()))
      }
      pub(super) fn get_002277() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002276() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002277(),
        ))
      }
      pub(super) fn get_002275() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002276(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002279() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002278() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002279(),
        ))
      }
      pub(super) fn get_002282() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002281() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002282()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002280() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002281()))
      }
      pub(super) fn get_002274() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002275(), get_002278(), get_002280()))
      }
      pub(super) fn get_002264() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002265(),
          )],
          get_002274(),
        ))
      }
      pub(super) fn get_002262() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002263(),
          )],
          get_002264(),
        ))
      }
      pub(super) fn get_002259() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002260(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002261(),
            ),
          ],
          get_002262(),
        ))
      }
      pub(super) fn get_002284() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002283() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002284(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002258() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002259(),
          )],
          get_002283(),
        ))
      }
      pub(super) fn get_002256() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002257(),
          )],
          get_002258(),
        ))
      }
      pub(super) fn get_002254() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002255(),
          )],
          get_002256(),
        ))
      }
      pub(super) fn get_002252() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002253(),
          )],
          get_002254(),
        ))
      }
      pub(super) fn get_002286() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002285() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002286()))
      }
      pub(super) fn get_002248() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002249(), get_002252(), get_002285()))
      }
      pub(super) fn get_002245() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002246(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002247(),
            ),
          ],
          get_002248(),
        ))
      }
      pub(super) fn get_002289() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002290() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002288() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002289(),
          )],
          get_002290(),
        ))
      }
      pub(super) fn get_002292() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002291() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002292(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002294() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002296() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002298() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002300() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002302() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002304() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002303() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002304()]))
      }
      pub(super) fn get_002301() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002302(),
          )],
          get_002303(),
        ))
      }
      pub(super) fn get_002299() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002300(),
          )],
          get_002301(),
        ))
      }
      pub(super) fn get_002297() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002298(), get_002299()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002295() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002296(), get_002297()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002293() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002294(),
          )],
          get_002295(),
        ))
      }
      pub(super) fn get_002287() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002288(),
          get_002291(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002293(),
        ))
      }
      pub(super) fn get_002306() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_002307() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_ident_arr_98() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 98u32)
        }))
      }
      pub(super) fn get_002309() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_98()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002314() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("count"))
      }
      pub(super) fn get_member_std_3_count() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_002314()))
      }
      pub(super) fn get_ident_x_99() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 99u32)
        }))
      }
      pub(super) fn get_002312() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_count(),
          vec![get_ident_arr_98(), get_ident_x_99()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002311() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002312(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002317() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_arr_98()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002322() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("findSubstr"))
      }
      pub(super) fn get_member_std_3_findSubstr() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_002322()))
      }
      pub(super) fn get_002320() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_findSubstr(),
          vec![get_ident_x_99(), get_ident_arr_98()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002319() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_002320()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002318() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002319(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002324() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.member first argument must be an array or a string",
        ))
      }
      pub(super) fn get_002323() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002324()))
      }
      pub(super) fn get_002316() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002317(), get_002318(), get_002323()))
      }
      pub(super) fn get_002308() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002309(), get_002311(), get_002316()))
      }
      pub(super) fn get_002305() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 98u32) },
              get_002306(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("x", 99u32) },
              get_002307(),
            ),
          ],
          get_002308(),
        ))
      }
      pub(super) fn get_002242() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002243(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002245(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002287(),
            ),
          ],
          get_002305(),
        ))
      }
      pub(super) fn get_002327() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002326() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002327(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002329() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002330() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002334() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002333() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002334(),
        ))
      }
      pub(super) fn get_002332() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002333(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002336() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002338() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002340() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002343() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002344() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002346() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002349() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002351() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002350() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002351(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002353() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002355() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002354() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002355(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002356() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002352() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002353(), get_002354(), get_002356()))
      }
      pub(super) fn get_002348() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002349(), get_002350(), get_002352()))
      }
      pub(super) fn get_002360() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002359() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002360(),
        ))
      }
      pub(super) fn get_002358() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002359(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002362() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002361() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002362(),
        ))
      }
      pub(super) fn get_002365() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002364() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002365()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002363() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002364()))
      }
      pub(super) fn get_002357() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002358(), get_002361(), get_002363()))
      }
      pub(super) fn get_002347() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002348(),
          )],
          get_002357(),
        ))
      }
      pub(super) fn get_002345() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002346(),
          )],
          get_002347(),
        ))
      }
      pub(super) fn get_002342() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002343(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002344(),
            ),
          ],
          get_002345(),
        ))
      }
      pub(super) fn get_002367() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002366() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002367(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002341() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002342(),
          )],
          get_002366(),
        ))
      }
      pub(super) fn get_002339() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002340(),
          )],
          get_002341(),
        ))
      }
      pub(super) fn get_002337() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002338(),
          )],
          get_002339(),
        ))
      }
      pub(super) fn get_002335() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002336(),
          )],
          get_002337(),
        ))
      }
      pub(super) fn get_002369() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002368() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002369()))
      }
      pub(super) fn get_002331() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002332(), get_002335(), get_002368()))
      }
      pub(super) fn get_002328() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002329(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002330(),
            ),
          ],
          get_002331(),
        ))
      }
      pub(super) fn get_002372() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002373() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002371() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002372(),
          )],
          get_002373(),
        ))
      }
      pub(super) fn get_002375() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002374() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002375(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002377() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002379() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002381() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002383() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002385() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002387() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002386() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002387()]))
      }
      pub(super) fn get_002384() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002385(),
          )],
          get_002386(),
        ))
      }
      pub(super) fn get_002382() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002383(),
          )],
          get_002384(),
        ))
      }
      pub(super) fn get_002380() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002381(), get_002382()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002378() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002379(), get_002380()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002376() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002377(),
          )],
          get_002378(),
        ))
      }
      pub(super) fn get_002370() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002371(),
          get_002374(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002376(),
        ))
      }
      pub(super) fn get_002389() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_002390() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002394() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("filter"))
      }
      pub(super) fn get_member_std_3_filter() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_002394()))
      }
      pub(super) fn get_002396() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_102() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 102u32)
        }))
      }
      pub(super) fn get_ident_x_101() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 101u32)
        }))
      }
      pub(super) fn get_002397() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_102(), get_ident_x_101()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002395() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 102u32) },
            get_002396(),
          )],
          get_002397(),
        ))
      }
      pub(super) fn get_ident_arr_100() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 100u32)
        }))
      }
      pub(super) fn get_002392() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_filter(),
          vec![get_002395(), get_ident_arr_100()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002391() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_002392()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002388() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 100u32) },
              get_002389(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("x", 101u32) },
              get_002390(),
            ),
          ],
          get_002391(),
        ))
      }
      pub(super) fn get_002325() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002326(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002328(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002370(),
            ),
          ],
          get_002388(),
        ))
      }
      pub(super) fn get_002403() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002402() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002403(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002405() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002406() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002410() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002409() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002410(),
        ))
      }
      pub(super) fn get_002408() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002409(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002412() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002414() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002416() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002419() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002420() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002422() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002425() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002427() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002426() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002427(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002429() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002431() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002430() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002431(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002432() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002428() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002429(), get_002430(), get_002432()))
      }
      pub(super) fn get_002424() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002425(), get_002426(), get_002428()))
      }
      pub(super) fn get_002436() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002435() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002436(),
        ))
      }
      pub(super) fn get_002434() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002435(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002438() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002437() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002438(),
        ))
      }
      pub(super) fn get_002441() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002440() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002441()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002439() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002440()))
      }
      pub(super) fn get_002433() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002434(), get_002437(), get_002439()))
      }
      pub(super) fn get_002423() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002424(),
          )],
          get_002433(),
        ))
      }
      pub(super) fn get_002421() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002422(),
          )],
          get_002423(),
        ))
      }
      pub(super) fn get_002418() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002419(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002420(),
            ),
          ],
          get_002421(),
        ))
      }
      pub(super) fn get_002443() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002442() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002443(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002417() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002418(),
          )],
          get_002442(),
        ))
      }
      pub(super) fn get_002415() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002416(),
          )],
          get_002417(),
        ))
      }
      pub(super) fn get_002413() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002414(),
          )],
          get_002415(),
        ))
      }
      pub(super) fn get_002411() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002412(),
          )],
          get_002413(),
        ))
      }
      pub(super) fn get_002445() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002444() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002445()))
      }
      pub(super) fn get_002407() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002408(), get_002411(), get_002444()))
      }
      pub(super) fn get_002404() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002405(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002406(),
            ),
          ],
          get_002407(),
        ))
      }
      pub(super) fn get_002448() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002449() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002447() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002448(),
          )],
          get_002449(),
        ))
      }
      pub(super) fn get_002451() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002450() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002451(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002453() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002455() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002457() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002459() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002461() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002463() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002462() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002463()]))
      }
      pub(super) fn get_002460() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002461(),
          )],
          get_002462(),
        ))
      }
      pub(super) fn get_002458() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002459(),
          )],
          get_002460(),
        ))
      }
      pub(super) fn get_002456() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002457(), get_002458()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002454() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002455(), get_002456()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002452() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002453(),
          )],
          get_002454(),
        ))
      }
      pub(super) fn get_002446() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002447(),
          get_002450(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002452(),
        ))
      }
      pub(super) fn get_002465() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_002466() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_103() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 103u32)
        }))
      }
      pub(super) fn get_002469() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_a_103()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_b_104() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 104u32)
        }))
      }
      pub(super) fn get_002471() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_b_104()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002468() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002469(),
          CoreBinaryOperator::And(None),
          get_002471(),
        ))
      }
      pub(super) fn get_002475() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("modulo"))
      }
      pub(super) fn get_member_std_3_modulo() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_002475()))
      }
      pub(super) fn get_002473() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_modulo(),
          vec![get_ident_a_103(), get_ident_b_104()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002477() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_a_103()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002480() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("format"))
      }
      pub(super) fn get_member_std_3_format() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_002480()))
      }
      pub(super) fn get_002478() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_format(),
          vec![get_ident_a_103(), get_ident_b_104()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002486() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Operator % cannot be used on types ",
        ))
      }
      pub(super) fn get_002487() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_a_103()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002485() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002486(),
          CoreBinaryOperator::Plus(None),
          get_002487(),
        ))
      }
      pub(super) fn get_002488() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(" and "))
      }
      pub(super) fn get_002484() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002485(),
          CoreBinaryOperator::Plus(None),
          get_002488(),
        ))
      }
      pub(super) fn get_002489() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_b_104()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002483() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002484(),
          CoreBinaryOperator::Plus(None),
          get_002489(),
        ))
      }
      pub(super) fn get_002490() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("."))
      }
      pub(super) fn get_002482() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002483(),
          CoreBinaryOperator::Plus(None),
          get_002490(),
        ))
      }
      pub(super) fn get_002481() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002482()))
      }
      pub(super) fn get_002476() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002477(), get_002478(), get_002481()))
      }
      pub(super) fn get_002467() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002468(), get_002473(), get_002476()))
      }
      pub(super) fn get_002464() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 103u32) },
              get_002465(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 104u32) },
              get_002466(),
            ),
          ],
          get_002467(),
        ))
      }
      pub(super) fn get_002401() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002402(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002404(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002446(),
            ),
          ],
          get_002464(),
        ))
      }
      pub(super) fn get_002493() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002492() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002493(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002495() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002496() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002500() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002499() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002500(),
        ))
      }
      pub(super) fn get_002498() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002499(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002502() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002504() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002506() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002509() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002510() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002512() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002515() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002517() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002516() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002517(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002519() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002521() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002520() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002521(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002522() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002518() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002519(), get_002520(), get_002522()))
      }
      pub(super) fn get_002514() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002515(), get_002516(), get_002518()))
      }
      pub(super) fn get_002526() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002525() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002526(),
        ))
      }
      pub(super) fn get_002524() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002525(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002528() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002527() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002528(),
        ))
      }
      pub(super) fn get_002531() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002530() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002531()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002529() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002530()))
      }
      pub(super) fn get_002523() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002524(), get_002527(), get_002529()))
      }
      pub(super) fn get_002513() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002514(),
          )],
          get_002523(),
        ))
      }
      pub(super) fn get_002511() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002512(),
          )],
          get_002513(),
        ))
      }
      pub(super) fn get_002508() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002509(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002510(),
            ),
          ],
          get_002511(),
        ))
      }
      pub(super) fn get_002533() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002532() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002533(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002507() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002508(),
          )],
          get_002532(),
        ))
      }
      pub(super) fn get_002505() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002506(),
          )],
          get_002507(),
        ))
      }
      pub(super) fn get_002503() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002504(),
          )],
          get_002505(),
        ))
      }
      pub(super) fn get_002501() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002502(),
          )],
          get_002503(),
        ))
      }
      pub(super) fn get_002535() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002534() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002535()))
      }
      pub(super) fn get_002497() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002498(), get_002501(), get_002534()))
      }
      pub(super) fn get_002494() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002495(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002496(),
            ),
          ],
          get_002497(),
        ))
      }
      pub(super) fn get_002538() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002539() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002537() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002538(),
          )],
          get_002539(),
        ))
      }
      pub(super) fn get_002541() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002540() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002541(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002543() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002545() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002547() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002549() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002551() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002553() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002552() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002553()]))
      }
      pub(super) fn get_002550() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002551(),
          )],
          get_002552(),
        ))
      }
      pub(super) fn get_002548() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002549(),
          )],
          get_002550(),
        ))
      }
      pub(super) fn get_002546() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002547(), get_002548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002544() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002545(), get_002546()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002542() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002543(),
          )],
          get_002544(),
        ))
      }
      pub(super) fn get_002536() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002537(),
          get_002540(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002542(),
        ))
      }
      pub(super) fn get_002556() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'func' not bound"))
      }
      pub(super) fn get_002555() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_002557() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_member_std_3_isFunction() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000406()))
      }
      pub(super) fn get_ident_func_105() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 105u32)
        }))
      }
      pub(super) fn get_002560() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_func_105()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002559() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002560(),
        ))
      }
      pub(super) fn get_002565() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.map first param must be function, got ",
        ))
      }
      pub(super) fn get_002566() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_func_105()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002564() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002565(),
          CoreBinaryOperator::Plus(None),
          get_002566(),
        ))
      }
      pub(super) fn get_002563() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002564()))
      }
      pub(super) fn get_ident_arr_106() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 106u32)
        }))
      }
      pub(super) fn get_002570() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_106()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002569() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002570(),
        ))
      }
      pub(super) fn get_002573() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_arr_106()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002572() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002573(),
        ))
      }
      pub(super) fn get_002568() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002569(),
          CoreBinaryOperator::And(None),
          get_002572(),
        ))
      }
      pub(super) fn get_002576() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.map second param must be array / string, got ",
        ))
      }
      pub(super) fn get_002577() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_arr_106()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002575() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002576(),
          CoreBinaryOperator::Plus(None),
          get_002577(),
        ))
      }
      pub(super) fn get_002574() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002575()))
      }
      pub(super) fn get_002579() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_106()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002581() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_107() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 107u32)
        }))
      }
      pub(super) fn get_002583() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_106(),
          get_ident_i_107(),
        ))
      }
      pub(super) fn get_002582() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_func_105(),
          vec![get_002583()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002580() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 107u32) },
            get_002581(),
          )],
          get_002582(),
        ))
      }
      pub(super) fn get_002578() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002579(), get_002580()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002567() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002568(), get_002574(), get_002578()))
      }
      pub(super) fn get_002558() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002559(), get_002563(), get_002567()))
      }
      pub(super) fn get_002554() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 105u32) },
              get_002555(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 106u32) },
              get_002557(),
            ),
          ],
          get_002558(),
        ))
      }
      pub(super) fn get_002491() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002492(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002494(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002536(),
            ),
          ],
          get_002554(),
        ))
      }
      pub(super) fn get_002585() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("mapWithIndex"))
      }
      pub(super) fn get_002588() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002587() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002588(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002590() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002591() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002595() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002594() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002595(),
        ))
      }
      pub(super) fn get_002593() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002594(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002597() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002599() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002601() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002604() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002605() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002607() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002610() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002612() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002611() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002612(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002614() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002616() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002615() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002616(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002617() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002613() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002614(), get_002615(), get_002617()))
      }
      pub(super) fn get_002609() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002610(), get_002611(), get_002613()))
      }
      pub(super) fn get_002621() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002620() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002621(),
        ))
      }
      pub(super) fn get_002619() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002620(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002623() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002622() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002623(),
        ))
      }
      pub(super) fn get_002626() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002625() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002626()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002624() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002625()))
      }
      pub(super) fn get_002618() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002619(), get_002622(), get_002624()))
      }
      pub(super) fn get_002608() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002609(),
          )],
          get_002618(),
        ))
      }
      pub(super) fn get_002606() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002607(),
          )],
          get_002608(),
        ))
      }
      pub(super) fn get_002603() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002604(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002605(),
            ),
          ],
          get_002606(),
        ))
      }
      pub(super) fn get_002628() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002627() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002628(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002602() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002603(),
          )],
          get_002627(),
        ))
      }
      pub(super) fn get_002600() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002601(),
          )],
          get_002602(),
        ))
      }
      pub(super) fn get_002598() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002599(),
          )],
          get_002600(),
        ))
      }
      pub(super) fn get_002596() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002597(),
          )],
          get_002598(),
        ))
      }
      pub(super) fn get_002630() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002629() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002630()))
      }
      pub(super) fn get_002592() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002593(), get_002596(), get_002629()))
      }
      pub(super) fn get_002589() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002590(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002591(),
            ),
          ],
          get_002592(),
        ))
      }
      pub(super) fn get_002633() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002634() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002632() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002633(),
          )],
          get_002634(),
        ))
      }
      pub(super) fn get_002636() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002635() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002636(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002638() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002640() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002642() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002644() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002646() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002648() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002647() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002648()]))
      }
      pub(super) fn get_002645() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002646(),
          )],
          get_002647(),
        ))
      }
      pub(super) fn get_002643() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002644(),
          )],
          get_002645(),
        ))
      }
      pub(super) fn get_002641() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002642(), get_002643()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002639() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002640(), get_002641()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002637() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002638(),
          )],
          get_002639(),
        ))
      }
      pub(super) fn get_002631() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002632(),
          get_002635(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002637(),
        ))
      }
      pub(super) fn get_002650() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_002651() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_func_108() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 108u32)
        }))
      }
      pub(super) fn get_002654() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_func_108()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002653() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002654(),
        ))
      }
      pub(super) fn get_002658() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.mapWithIndex first param must be function, got ",
        ))
      }
      pub(super) fn get_002659() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_func_108()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002657() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002658(),
          CoreBinaryOperator::Plus(None),
          get_002659(),
        ))
      }
      pub(super) fn get_002656() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002657()))
      }
      pub(super) fn get_ident_arr_109() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 109u32)
        }))
      }
      pub(super) fn get_002663() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_109()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002662() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002663(),
        ))
      }
      pub(super) fn get_002666() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_arr_109()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002665() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002666(),
        ))
      }
      pub(super) fn get_002661() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002662(),
          CoreBinaryOperator::And(None),
          get_002665(),
        ))
      }
      pub(super) fn get_002669() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.mapWithIndex second param must be array, got ",
        ))
      }
      pub(super) fn get_002670() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_arr_109()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002668() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002669(),
          CoreBinaryOperator::Plus(None),
          get_002670(),
        ))
      }
      pub(super) fn get_002667() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002668()))
      }
      pub(super) fn get_002672() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_109()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002674() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_110() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 110u32)
        }))
      }
      pub(super) fn get_002677() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_109(),
          get_ident_i_110(),
        ))
      }
      pub(super) fn get_002675() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_func_108(),
          vec![get_ident_i_110(), get_002677()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002673() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 110u32) },
            get_002674(),
          )],
          get_002675(),
        ))
      }
      pub(super) fn get_002671() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002672(), get_002673()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002660() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002661(), get_002667(), get_002671()))
      }
      pub(super) fn get_002652() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002653(), get_002656(), get_002660()))
      }
      pub(super) fn get_002649() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 108u32) },
              get_002650(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 109u32) },
              get_002651(),
            ),
          ],
          get_002652(),
        ))
      }
      pub(super) fn get_002586() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002587(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002589(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002631(),
            ),
          ],
          get_002649(),
        ))
      }
      pub(super) fn get_002678() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("mapWithKey"))
      }
      pub(super) fn get_002681() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002680() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002681(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002683() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002684() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002688() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002687() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002688(),
        ))
      }
      pub(super) fn get_002686() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002687(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002690() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002692() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002694() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002697() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002698() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002700() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002703() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002705() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002704() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002705(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002707() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002709() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002708() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002709(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002710() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002706() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002707(), get_002708(), get_002710()))
      }
      pub(super) fn get_002702() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002703(), get_002704(), get_002706()))
      }
      pub(super) fn get_002714() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002713() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002714(),
        ))
      }
      pub(super) fn get_002712() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002713(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002716() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002715() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002716(),
        ))
      }
      pub(super) fn get_002719() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002718() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002719()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002717() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002718()))
      }
      pub(super) fn get_002711() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002712(), get_002715(), get_002717()))
      }
      pub(super) fn get_002701() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002702(),
          )],
          get_002711(),
        ))
      }
      pub(super) fn get_002699() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002700(),
          )],
          get_002701(),
        ))
      }
      pub(super) fn get_002696() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002697(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002698(),
            ),
          ],
          get_002699(),
        ))
      }
      pub(super) fn get_002721() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002720() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002721(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002695() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002696(),
          )],
          get_002720(),
        ))
      }
      pub(super) fn get_002693() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002694(),
          )],
          get_002695(),
        ))
      }
      pub(super) fn get_002691() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002692(),
          )],
          get_002693(),
        ))
      }
      pub(super) fn get_002689() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002690(),
          )],
          get_002691(),
        ))
      }
      pub(super) fn get_002723() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002722() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002723()))
      }
      pub(super) fn get_002685() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002686(), get_002689(), get_002722()))
      }
      pub(super) fn get_002682() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002683(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002684(),
            ),
          ],
          get_002685(),
        ))
      }
      pub(super) fn get_002726() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002727() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002725() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002726(),
          )],
          get_002727(),
        ))
      }
      pub(super) fn get_002729() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002728() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002729(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002731() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002733() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002735() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002737() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002739() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002741() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002740() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002741()]))
      }
      pub(super) fn get_002738() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002739(),
          )],
          get_002740(),
        ))
      }
      pub(super) fn get_002736() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002737(),
          )],
          get_002738(),
        ))
      }
      pub(super) fn get_002734() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002735(), get_002736()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002732() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002733(), get_002734()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002730() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002731(),
          )],
          get_002732(),
        ))
      }
      pub(super) fn get_002724() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002725(),
          get_002728(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002730(),
        ))
      }
      pub(super) fn get_002743() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_002745() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'obj' not bound"))
      }
      pub(super) fn get_002744() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002745()))
      }
      pub(super) fn get_ident_func_111() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 111u32)
        }))
      }
      pub(super) fn get_002748() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_func_111()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002747() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002748(),
        ))
      }
      pub(super) fn get_002752() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.mapWithKey first param must be function, got ",
        ))
      }
      pub(super) fn get_002753() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_func_111()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002751() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002752(),
          CoreBinaryOperator::Plus(None),
          get_002753(),
        ))
      }
      pub(super) fn get_002750() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002751()))
      }
      pub(super) fn get_member_std_3_isObject() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000266()))
      }
      pub(super) fn get_ident_obj_112() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("obj", 112u32)
        }))
      }
      pub(super) fn get_002756() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_obj_112()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002755() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002756(),
        ))
      }
      pub(super) fn get_002761() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.mapWithKey second param must be object, got ",
        ))
      }
      pub(super) fn get_002762() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_obj_112()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002760() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002761(),
          CoreBinaryOperator::Plus(None),
          get_002762(),
        ))
      }
      pub(super) fn get_002759() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002760()))
      }
      pub(super) fn get_ident_genid_arr_113() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 113u32)
        }))
      }
      pub(super) fn get_002765() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_113(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_k_114() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 114u32)
        }))
      }
      pub(super) fn get_002764() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 114u32) },
            get_002765(),
          )],
          get_ident_k_114(),
        ))
      }
      pub(super) fn get_002769() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_113(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002771() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_obj_112(),
          get_ident_k_114(),
        ))
      }
      pub(super) fn get_002770() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_func_111(),
          vec![get_ident_k_114(), get_002771()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002768() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 114u32) },
            get_002769(),
          )],
          get_002770(),
        ))
      }
      pub(super) fn get_002775() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("objectFields"))
      }
      pub(super) fn get_member_std_3_objectFields() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_002775()))
      }
      pub(super) fn get_002773() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_obj_112()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002777() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_115() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 115u32)
        }))
      }
      pub(super) fn get_002779() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_115()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002782() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_116() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 116u32)
        }))
      }
      pub(super) fn get_002784() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_115(),
          get_ident_genid_i_116(),
        ))
      }
      pub(super) fn get_002787() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_k_114()]))
      }
      pub(super) fn get_002786() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002787()]))
      }
      pub(super) fn get_002783() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 114u32) },
            get_002784(),
          )],
          get_002786(),
        ))
      }
      pub(super) fn get_002781() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 116u32) },
            get_002782(),
          )],
          get_002783(),
        ))
      }
      pub(super) fn get_002778() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002779(), get_002781()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002776() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002777(), get_002778()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002772() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 115u32) },
            get_002773(),
          )],
          get_002776(),
        ))
      }
      pub(super) fn get_002763() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002764(),
          get_002768(),
          unsafe { CoreIdent::new_unchecked("$arr", 113u32) },
          get_002772(),
        ))
      }
      pub(super) fn get_002754() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002755(), get_002759(), get_002763()))
      }
      pub(super) fn get_002746() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002747(), get_002750(), get_002754()))
      }
      pub(super) fn get_002742() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 111u32) },
              get_002743(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("obj", 112u32) },
              get_002744(),
            ),
          ],
          get_002746(),
        ))
      }
      pub(super) fn get_002679() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002680(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002682(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002724(),
            ),
          ],
          get_002742(),
        ))
      }
      pub(super) fn get_002788() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("flatMap"))
      }
      pub(super) fn get_002791() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002790() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002791(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002793() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002794() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002798() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002797() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002798(),
        ))
      }
      pub(super) fn get_002796() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002797(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002800() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002802() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002804() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002807() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002808() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002810() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002813() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002815() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002814() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002815(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002817() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002819() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002818() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002819(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002820() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002816() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002817(), get_002818(), get_002820()))
      }
      pub(super) fn get_002812() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002813(), get_002814(), get_002816()))
      }
      pub(super) fn get_002824() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002823() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002824(),
        ))
      }
      pub(super) fn get_002822() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002823(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002826() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002825() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002826(),
        ))
      }
      pub(super) fn get_002829() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002828() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002829()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002827() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002828()))
      }
      pub(super) fn get_002821() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002822(), get_002825(), get_002827()))
      }
      pub(super) fn get_002811() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002812(),
          )],
          get_002821(),
        ))
      }
      pub(super) fn get_002809() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002810(),
          )],
          get_002811(),
        ))
      }
      pub(super) fn get_002806() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002807(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002808(),
            ),
          ],
          get_002809(),
        ))
      }
      pub(super) fn get_002831() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002830() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002831(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002805() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002806(),
          )],
          get_002830(),
        ))
      }
      pub(super) fn get_002803() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002804(),
          )],
          get_002805(),
        ))
      }
      pub(super) fn get_002801() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002802(),
          )],
          get_002803(),
        ))
      }
      pub(super) fn get_002799() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002800(),
          )],
          get_002801(),
        ))
      }
      pub(super) fn get_002833() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002832() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002833()))
      }
      pub(super) fn get_002795() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002796(), get_002799(), get_002832()))
      }
      pub(super) fn get_002792() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002793(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002794(),
            ),
          ],
          get_002795(),
        ))
      }
      pub(super) fn get_002836() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002837() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002835() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002836(),
          )],
          get_002837(),
        ))
      }
      pub(super) fn get_002839() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002838() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002839(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002841() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002843() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002845() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002847() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002849() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002851() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002850() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002851()]))
      }
      pub(super) fn get_002848() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002849(),
          )],
          get_002850(),
        ))
      }
      pub(super) fn get_002846() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002847(),
          )],
          get_002848(),
        ))
      }
      pub(super) fn get_002844() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002845(), get_002846()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002842() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002843(), get_002844()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002840() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002841(),
          )],
          get_002842(),
        ))
      }
      pub(super) fn get_002834() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002835(),
          get_002838(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002840(),
        ))
      }
      pub(super) fn get_002853() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_002854() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_func_117() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 117u32)
        }))
      }
      pub(super) fn get_002857() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_func_117()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002856() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002857(),
        ))
      }
      pub(super) fn get_002861() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.flatMap first param must be function, got ",
        ))
      }
      pub(super) fn get_002862() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_func_117()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002860() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002861(),
          CoreBinaryOperator::Plus(None),
          get_002862(),
        ))
      }
      pub(super) fn get_002859() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002860()))
      }
      pub(super) fn get_ident_arr_118() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 118u32)
        }))
      }
      pub(super) fn get_002864() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_118()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002868() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("flattenArrays"))
      }
      pub(super) fn get_member_std_3_flattenArrays() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_002868()))
      }
      pub(super) fn get_002870() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_118()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002872() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_119() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 119u32)
        }))
      }
      pub(super) fn get_002874() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_118(),
          get_ident_i_119(),
        ))
      }
      pub(super) fn get_002873() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_func_117(),
          vec![get_002874()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002871() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 119u32) },
            get_002872(),
          )],
          get_002873(),
        ))
      }
      pub(super) fn get_002869() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002870(), get_002871()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002866() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_flattenArrays(),
          vec![get_002869()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002877() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_arr_118()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002880() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_118()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002882() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_120() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 120u32)
        }))
      }
      pub(super) fn get_002884() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_118(),
          get_ident_i_120(),
        ))
      }
      pub(super) fn get_002883() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_func_117(),
          vec![get_002884()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002881() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 120u32) },
            get_002882(),
          )],
          get_002883(),
        ))
      }
      pub(super) fn get_002879() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002880(), get_002881()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002878() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_002879()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002888() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.flatMap second param must be array / string, got ",
        ))
      }
      pub(super) fn get_002889() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_arr_118()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002887() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002888(),
          CoreBinaryOperator::Plus(None),
          get_002889(),
        ))
      }
      pub(super) fn get_002886() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002887()))
      }
      pub(super) fn get_002876() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002877(), get_002878(), get_002886()))
      }
      pub(super) fn get_002863() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002864(), get_002866(), get_002876()))
      }
      pub(super) fn get_002855() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002856(), get_002859(), get_002863()))
      }
      pub(super) fn get_002852() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 117u32) },
              get_002853(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 118u32) },
              get_002854(),
            ),
          ],
          get_002855(),
        ))
      }
      pub(super) fn get_002789() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002790(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002792(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002834(),
            ),
          ],
          get_002852(),
        ))
      }
      pub(super) fn get_002892() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_002891() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_002892(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_002894() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_002895() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_002899() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002898() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_002899(),
        ))
      }
      pub(super) fn get_002897() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002898(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_002901() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002903() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002905() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002908() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_002909() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_002911() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002914() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002916() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_002915() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002916(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002918() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002920() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_002919() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002920(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_002921() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_002917() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002918(), get_002919(), get_002921()))
      }
      pub(super) fn get_002913() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002914(), get_002915(), get_002917()))
      }
      pub(super) fn get_002925() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002924() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002925(),
        ))
      }
      pub(super) fn get_002923() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_002924(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_002927() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_002926() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_002927(),
        ))
      }
      pub(super) fn get_002930() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_002929() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_002930()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002928() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002929()))
      }
      pub(super) fn get_002922() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002923(), get_002926(), get_002928()))
      }
      pub(super) fn get_002912() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_002913(),
          )],
          get_002922(),
        ))
      }
      pub(super) fn get_002910() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_002911(),
          )],
          get_002912(),
        ))
      }
      pub(super) fn get_002907() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_002908(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_002909(),
            ),
          ],
          get_002910(),
        ))
      }
      pub(super) fn get_002932() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002931() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_002932(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002906() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_002907(),
          )],
          get_002931(),
        ))
      }
      pub(super) fn get_002904() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_002905(),
          )],
          get_002906(),
        ))
      }
      pub(super) fn get_002902() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_002903(),
          )],
          get_002904(),
        ))
      }
      pub(super) fn get_002900() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_002901(),
          )],
          get_002902(),
        ))
      }
      pub(super) fn get_002934() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002933() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002934()))
      }
      pub(super) fn get_002896() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002897(), get_002900(), get_002933()))
      }
      pub(super) fn get_002893() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_002894(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_002895(),
            ),
          ],
          get_002896(),
        ))
      }
      pub(super) fn get_002937() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002938() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002936() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002937(),
          )],
          get_002938(),
        ))
      }
      pub(super) fn get_002940() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_002939() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002940(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_002942() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002944() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_002946() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002948() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_002950() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_002952() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_002951() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_002952()]))
      }
      pub(super) fn get_002949() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_002950(),
          )],
          get_002951(),
        ))
      }
      pub(super) fn get_002947() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_002948(),
          )],
          get_002949(),
        ))
      }
      pub(super) fn get_002945() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_002946(), get_002947()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002943() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_002944(), get_002945()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002941() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_002942(),
          )],
          get_002943(),
        ))
      }
      pub(super) fn get_002935() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_002936(),
          get_002939(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_002941(),
        ))
      }
      pub(super) fn get_002955() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'sep' not bound"))
      }
      pub(super) fn get_002954() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002955()))
      }
      pub(super) fn get_002956() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_002959() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_002960() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_002962() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'first' not bound"))
      }
      pub(super) fn get_002961() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002962()))
      }
      pub(super) fn get_002964() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'running' not bound"))
      }
      pub(super) fn get_002963() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002964()))
      }
      pub(super) fn get_ident_i_125() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 125u32)
        }))
      }
      pub(super) fn get_ident_arr_124() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 124u32)
        }))
      }
      pub(super) fn get_002968() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_124()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002966() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_125(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_002968(),
        ))
      }
      pub(super) fn get_ident_running_127() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("running", 127u32)
        }))
      }
      pub(super) fn get_002973() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_124(),
          get_ident_i_125(),
        ))
      }
      pub(super) fn get_002972() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_002973(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_aux_123() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 123u32)
        }))
      }
      pub(super) fn get_002976() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_125(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_first_126() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("first", 126u32)
        }))
      }
      pub(super) fn get_002974() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_123(),
          vec![
            get_ident_arr_124(),
            get_002976(),
            get_ident_first_126(),
            get_ident_running_127(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_002982() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_124(),
          get_ident_i_125(),
        ))
      }
      pub(super) fn get_002981() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_002982()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_sep_121() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("sep", 121u32)
        }))
      }
      pub(super) fn get_002983() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_sep_121()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002980() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_002981(), get_002983()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002979() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_002980(),
        ))
      }
      pub(super) fn get_002987() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("expected %s but arr[%d] was %s "))
      }
      pub(super) fn get_002989() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_sep_121()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002991() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_124(),
          get_ident_i_125(),
        ))
      }
      pub(super) fn get_002990() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_002991()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002988() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_002989(),
          get_ident_i_125(),
          get_002990(),
        ]))
      }
      pub(super) fn get_002986() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_002987(), get_002988()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_002985() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002986()))
      }
      pub(super) fn get_002994() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_125(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_002996() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_124(),
          get_ident_i_125(),
        ))
      }
      pub(super) fn get_002995() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_running_127(),
          CoreBinaryOperator::Plus(None),
          get_002996(),
        ))
      }
      pub(super) fn get_002993() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_123(),
          vec![get_ident_arr_124(), get_002994(), get_false(), get_002995()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_002998() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_125(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003000() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_running_127(),
          CoreBinaryOperator::Plus(None),
          get_ident_sep_121(),
        ))
      }
      pub(super) fn get_003001() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_124(),
          get_ident_i_125(),
        ))
      }
      pub(super) fn get_002999() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003000(),
          CoreBinaryOperator::Plus(None),
          get_003001(),
        ))
      }
      pub(super) fn get_002997() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_123(),
          vec![get_ident_arr_124(), get_002998(), get_false(), get_002999()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_002992() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_first_126(),
          get_002993(),
          get_002997(),
        ))
      }
      pub(super) fn get_002978() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002979(), get_002985(), get_002992()))
      }
      pub(super) fn get_002971() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_002972(), get_002974(), get_002978()))
      }
      pub(super) fn get_002965() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_002966(),
          get_ident_running_127(),
          get_002971(),
        ))
      }
      pub(super) fn get_002958() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 124u32) },
              get_002959(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 125u32) },
              get_002960(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("first", 126u32) },
              get_002961(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("running", 127u32) },
              get_002963(),
            ),
          ],
          get_002965(),
        ))
      }
      pub(super) fn get_ident_arr_122() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 122u32)
        }))
      }
      pub(super) fn get_003004() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_122()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003003() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_003004(),
        ))
      }
      pub(super) fn get_003008() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "join second parameter should be array, got ",
        ))
      }
      pub(super) fn get_003009() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_arr_122()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003007() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003008(),
          CoreBinaryOperator::Plus(None),
          get_003009(),
        ))
      }
      pub(super) fn get_003006() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003007()))
      }
      pub(super) fn get_003011() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_sep_121()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_true() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_true())
      }
      pub(super) fn get_003012() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_123(),
          vec![
            get_ident_arr_122(),
            get_number_0_0(),
            get_true(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003015() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_sep_121()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003017() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_003016() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_123(),
          vec![
            get_ident_arr_122(),
            get_number_0_0(),
            get_true(),
            get_003017(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003020() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "join first parameter should be string or array, got ",
        ))
      }
      pub(super) fn get_003021() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_sep_121()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003019() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003020(),
          CoreBinaryOperator::Plus(None),
          get_003021(),
        ))
      }
      pub(super) fn get_003018() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003019()))
      }
      pub(super) fn get_003014() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003015(), get_003016(), get_003018()))
      }
      pub(super) fn get_003010() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003011(), get_003012(), get_003014()))
      }
      pub(super) fn get_003002() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003003(), get_003006(), get_003010()))
      }
      pub(super) fn get_002957() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 123u32) },
            get_002958(),
          )],
          get_003002(),
        ))
      }
      pub(super) fn get_002953() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("sep", 121u32) },
              get_002954(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 122u32) },
              get_002956(),
            ),
          ],
          get_002957(),
        ))
      }
      pub(super) fn get_002890() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_002891(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_002893(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_002935(),
            ),
          ],
          get_002953(),
        ))
      }
      pub(super) fn get_003022() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("lines"))
      }
      pub(super) fn get_003025() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_003024() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_003025(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_003027() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003028() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_003032() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_003031() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_003032(),
        ))
      }
      pub(super) fn get_003030() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003031(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_003034() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003036() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003038() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003041() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_003042() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_003044() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003047() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_003049() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_003048() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003049(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_003051() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_003053() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_003052() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003053(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_003054() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_003050() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003051(), get_003052(), get_003054()))
      }
      pub(super) fn get_003046() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003047(), get_003048(), get_003050()))
      }
      pub(super) fn get_003058() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_003057() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_003058(),
        ))
      }
      pub(super) fn get_003056() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003057(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_003060() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_003059() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_003060(),
        ))
      }
      pub(super) fn get_003063() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_003062() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_003063()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003061() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003062()))
      }
      pub(super) fn get_003055() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003056(), get_003059(), get_003061()))
      }
      pub(super) fn get_003045() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_003046(),
          )],
          get_003055(),
        ))
      }
      pub(super) fn get_003043() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_003044(),
          )],
          get_003045(),
        ))
      }
      pub(super) fn get_003040() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_003041(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_003042(),
            ),
          ],
          get_003043(),
        ))
      }
      pub(super) fn get_003065() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003064() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_003065(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003039() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_003040(),
          )],
          get_003064(),
        ))
      }
      pub(super) fn get_003037() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_003038(),
          )],
          get_003039(),
        ))
      }
      pub(super) fn get_003035() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_003036(),
          )],
          get_003037(),
        ))
      }
      pub(super) fn get_003033() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_003034(),
          )],
          get_003035(),
        ))
      }
      pub(super) fn get_003067() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003066() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003067()))
      }
      pub(super) fn get_003029() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003030(), get_003033(), get_003066()))
      }
      pub(super) fn get_003026() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_003027(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_003028(),
            ),
          ],
          get_003029(),
        ))
      }
      pub(super) fn get_003070() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003071() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_003069() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003070(),
          )],
          get_003071(),
        ))
      }
      pub(super) fn get_003073() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003072() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003073(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_003075() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003077() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_003079() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003081() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_003083() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_003085() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_003084() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_003085()]))
      }
      pub(super) fn get_003082() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003083(),
          )],
          get_003084(),
        ))
      }
      pub(super) fn get_003080() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_003081(),
          )],
          get_003082(),
        ))
      }
      pub(super) fn get_003078() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_003079(), get_003080()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003076() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_003077(), get_003078()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003074() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_003075(),
          )],
          get_003076(),
        ))
      }
      pub(super) fn get_003068() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_003069(),
          get_003072(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_003074(),
        ))
      }
      pub(super) fn get_003087() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_003089() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\n"))
      }
      pub(super) fn get_ident_arr_128() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 128u32)
        }))
      }
      pub(super) fn get_003092() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000548()]))
      }
      pub(super) fn get_003090() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_arr_128(),
          CoreBinaryOperator::Plus(None),
          get_003092(),
        ))
      }
      pub(super) fn get_003088() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_003089(), get_003090()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003086() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("arr", 128u32) },
            get_003087(),
          )],
          get_003088(),
        ))
      }
      pub(super) fn get_003023() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_003024(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_003026(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_003068(),
            ),
          ],
          get_003086(),
        ))
      }
      pub(super) fn get_003093() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("deepJoin"))
      }
      pub(super) fn get_003096() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_003095() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_003096(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_003098() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003099() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_003103() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_003102() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_003103(),
        ))
      }
      pub(super) fn get_003101() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003102(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_003105() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003107() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003109() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003112() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_003113() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_003115() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003118() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_003120() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_003119() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003120(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_003122() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_003124() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_003123() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003124(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_003125() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_003121() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003122(), get_003123(), get_003125()))
      }
      pub(super) fn get_003117() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003118(), get_003119(), get_003121()))
      }
      pub(super) fn get_003129() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_003128() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_003129(),
        ))
      }
      pub(super) fn get_003127() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003128(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_003131() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_003130() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_003131(),
        ))
      }
      pub(super) fn get_003134() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_003133() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_003134()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003132() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003133()))
      }
      pub(super) fn get_003126() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003127(), get_003130(), get_003132()))
      }
      pub(super) fn get_003116() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_003117(),
          )],
          get_003126(),
        ))
      }
      pub(super) fn get_003114() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_003115(),
          )],
          get_003116(),
        ))
      }
      pub(super) fn get_003111() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_003112(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_003113(),
            ),
          ],
          get_003114(),
        ))
      }
      pub(super) fn get_003136() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003135() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_003136(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003110() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_003111(),
          )],
          get_003135(),
        ))
      }
      pub(super) fn get_003108() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_003109(),
          )],
          get_003110(),
        ))
      }
      pub(super) fn get_003106() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_003107(),
          )],
          get_003108(),
        ))
      }
      pub(super) fn get_003104() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_003105(),
          )],
          get_003106(),
        ))
      }
      pub(super) fn get_003138() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003137() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003138()))
      }
      pub(super) fn get_003100() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003101(), get_003104(), get_003137()))
      }
      pub(super) fn get_003097() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_003098(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_003099(),
            ),
          ],
          get_003100(),
        ))
      }
      pub(super) fn get_003141() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003142() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_003140() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003141(),
          )],
          get_003142(),
        ))
      }
      pub(super) fn get_003144() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003143() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003144(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_003146() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003148() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_003150() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003152() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_003154() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_003156() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_003155() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_003156()]))
      }
      pub(super) fn get_003153() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003154(),
          )],
          get_003155(),
        ))
      }
      pub(super) fn get_003151() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_003152(),
          )],
          get_003153(),
        ))
      }
      pub(super) fn get_003149() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_003150(), get_003151()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003147() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_003148(), get_003149()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003145() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_003146(),
          )],
          get_003147(),
        ))
      }
      pub(super) fn get_003139() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_003140(),
          get_003143(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_003145(),
        ))
      }
      pub(super) fn get_003158() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_arr_129() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 129u32)
        }))
      }
      pub(super) fn get_003160() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_arr_129()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003163() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_129()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003167() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_131() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 131u32)
        }))
      }
      pub(super) fn get_003169() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_131()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003172() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_132() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 132u32)
        }))
      }
      pub(super) fn get_003174() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_131(),
          get_ident_genid_i_132(),
        ))
      }
      pub(super) fn get_member_std_3_deepJoin() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_003093()))
      }
      pub(super) fn get_ident_x_130() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 130u32)
        }))
      }
      pub(super) fn get_003177() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_deepJoin(),
          vec![get_ident_x_130()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003176() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_003177()]))
      }
      pub(super) fn get_003173() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("x", 130u32) },
            get_003174(),
          )],
          get_003176(),
        ))
      }
      pub(super) fn get_003171() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 132u32) },
            get_003172(),
          )],
          get_003173(),
        ))
      }
      pub(super) fn get_003168() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_003169(), get_003171()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003166() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_003167(), get_003168()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003165() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 131u32) },
            get_ident_arr_129(),
          )],
          get_003166(),
        ))
      }
      pub(super) fn get_003164() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_003165()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003182() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Expected string or array, got %s"))
      }
      pub(super) fn get_003183() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_arr_129()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003181() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_003182(), get_003183()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003180() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003181()))
      }
      pub(super) fn get_003162() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003163(), get_003164(), get_003180()))
      }
      pub(super) fn get_003159() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_003160(),
          get_ident_arr_129(),
          get_003162(),
        ))
      }
      pub(super) fn get_003157() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("arr", 129u32) },
            get_003158(),
          )],
          get_003159(),
        ))
      }
      pub(super) fn get_003094() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_003095(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_003097(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_003139(),
            ),
          ],
          get_003157(),
        ))
      }
      pub(super) fn get_003186() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_003185() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_003186(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_003188() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003189() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_003193() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_003192() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_003193(),
        ))
      }
      pub(super) fn get_003191() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003192(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_003195() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003197() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003199() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003202() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_003203() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_003205() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003208() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_003210() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_003209() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003210(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_003212() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_003214() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_003213() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003214(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_003215() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_003211() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003212(), get_003213(), get_003215()))
      }
      pub(super) fn get_003207() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003208(), get_003209(), get_003211()))
      }
      pub(super) fn get_003219() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_003218() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_003219(),
        ))
      }
      pub(super) fn get_003217() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003218(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_003221() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_003220() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_003221(),
        ))
      }
      pub(super) fn get_003224() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_003223() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_003224()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003222() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003223()))
      }
      pub(super) fn get_003216() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003217(), get_003220(), get_003222()))
      }
      pub(super) fn get_003206() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_003207(),
          )],
          get_003216(),
        ))
      }
      pub(super) fn get_003204() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_003205(),
          )],
          get_003206(),
        ))
      }
      pub(super) fn get_003201() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_003202(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_003203(),
            ),
          ],
          get_003204(),
        ))
      }
      pub(super) fn get_003226() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003225() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_003226(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003200() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_003201(),
          )],
          get_003225(),
        ))
      }
      pub(super) fn get_003198() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_003199(),
          )],
          get_003200(),
        ))
      }
      pub(super) fn get_003196() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_003197(),
          )],
          get_003198(),
        ))
      }
      pub(super) fn get_003194() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_003195(),
          )],
          get_003196(),
        ))
      }
      pub(super) fn get_003228() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003227() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003228()))
      }
      pub(super) fn get_003190() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003191(), get_003194(), get_003227()))
      }
      pub(super) fn get_003187() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_003188(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_003189(),
            ),
          ],
          get_003190(),
        ))
      }
      pub(super) fn get_003231() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003232() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_003230() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003231(),
          )],
          get_003232(),
        ))
      }
      pub(super) fn get_003234() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003233() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003234(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_003236() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003238() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_003240() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003242() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_003244() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_003246() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_003245() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_003246()]))
      }
      pub(super) fn get_003243() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_003244(),
          )],
          get_003245(),
        ))
      }
      pub(super) fn get_003241() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_003242(),
          )],
          get_003243(),
        ))
      }
      pub(super) fn get_003239() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_003240(), get_003241()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003237() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_003238(), get_003239()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003235() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_003236(),
          )],
          get_003237(),
        ))
      }
      pub(super) fn get_003229() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_003230(),
          get_003233(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_003235(),
        ))
      }
      pub(super) fn get_003248() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003250() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'vals' not bound"))
      }
      pub(super) fn get_003249() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003250()))
      }
      pub(super) fn get_003253() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003254() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_137() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 137u32)
        }))
      }
      pub(super) fn get_ident_str_136() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 136u32)
        }))
      }
      pub(super) fn get_003258() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_136()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003256() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_137(),
          CoreBinaryOperator::LessThan(None),
          get_003258(),
        ))
      }
      pub(super) fn get_003261() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_136(),
          get_ident_i_137(),
        ))
      }
      pub(super) fn get_ident_c_138() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 138u32)
        }))
      }
      pub(super) fn get_003265() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("("))
      }
      pub(super) fn get_003263() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_138(), get_003265()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003268() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003270() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'j' not bound"))
      }
      pub(super) fn get_003269() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_003271() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_j_141() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 141u32)
        }))
      }
      pub(super) fn get_ident_str_140() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 140u32)
        }))
      }
      pub(super) fn get_003275() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_140()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003273() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_141(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_003275(),
        ))
      }
      pub(super) fn get_003278() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Truncated format code."))
      }
      pub(super) fn get_003277() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003280() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_140(),
          get_ident_j_141(),
        ))
      }
      pub(super) fn get_ident_c_143() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 143u32)
        }))
      }
      pub(super) fn get_003285() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(")"))
      }
      pub(super) fn get_003283() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_143(), get_003285()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003282() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_003283(),
        ))
      }
      pub(super) fn get_ident_consume_139() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("consume", 139u32)
        }))
      }
      pub(super) fn get_003288() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_141(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_v_142() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 142u32)
        }))
      }
      pub(super) fn get_003289() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_142(),
          CoreBinaryOperator::Plus(None),
          get_ident_c_143(),
        ))
      }
      pub(super) fn get_003286() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_139(),
          vec![get_ident_str_140(), get_003288(), get_003289()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003292() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("i"))
      }
      pub(super) fn get_003294() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_141(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003293() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003294()))
      }
      pub(super) fn get_003295() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("v"))
      }
      pub(super) fn get_003296() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_v_142()))
      }
      pub(super) fn get_003291() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003293(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003296(),
            ),
          ],
        ))
      }
      pub(super) fn get_003281() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003282(), get_003286(), get_003291()))
      }
      pub(super) fn get_003279() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 143u32) },
            get_003280(),
          )],
          get_003281(),
        ))
      }
      pub(super) fn get_003272() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003273(), get_003277(), get_003279()))
      }
      pub(super) fn get_003267() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 140u32) },
              get_003268(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 141u32) },
              get_003269(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 142u32) },
              get_003271(),
            ),
          ],
          get_003272(),
        ))
      }
      pub(super) fn get_003298() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_137(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003297() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_139(),
          vec![get_ident_str_136(), get_003298(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003266() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("consume", 139u32) },
            get_003267(),
          )],
          get_003297(),
        ))
      }
      pub(super) fn get_003300() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_i_137()))
      }
      pub(super) fn get_003301() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_null()))
      }
      pub(super) fn get_003299() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003300(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003301(),
            ),
          ],
        ))
      }
      pub(super) fn get_003262() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003263(), get_003266(), get_003299()))
      }
      pub(super) fn get_003260() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 138u32) },
            get_003261(),
          )],
          get_003262(),
        ))
      }
      pub(super) fn get_003302() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003255() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003256(), get_003260(), get_003302()))
      }
      pub(super) fn get_003252() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 136u32) },
              get_003253(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 137u32) },
              get_003254(),
            ),
          ],
          get_003255(),
        ))
      }
      pub(super) fn get_003305() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003306() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_003309() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003310() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_003311() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_j_149() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 149u32)
        }))
      }
      pub(super) fn get_ident_str_148() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 148u32)
        }))
      }
      pub(super) fn get_003315() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_148()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003313() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_149(),
          CoreBinaryOperator::LessThan(None),
          get_003315(),
        ))
      }
      pub(super) fn get_003318() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_148(),
          get_ident_j_149(),
        ))
      }
      pub(super) fn get_ident_c_151() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 151u32)
        }))
      }
      pub(super) fn get_003322() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("#"))
      }
      pub(super) fn get_003320() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_151(), get_003322()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_consume_147() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("consume", 147u32)
        }))
      }
      pub(super) fn get_003325() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_149(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_v_150() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 150u32)
        }))
      }
      pub(super) fn get_003329() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("alt"))
      }
      pub(super) fn get_003330() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003328() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![CoreObjectField::new(
            get_003329(),
            CoreObjectFieldOperator::Default(None),
            get_003330(),
          )],
        ))
      }
      pub(super) fn get_003326() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_150(),
          CoreBinaryOperator::Plus(None),
          get_003328(),
        ))
      }
      pub(super) fn get_003323() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_147(),
          vec![get_ident_str_148(), get_003325(), get_003326()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003332() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_151(), get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003334() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_149(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003337() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("zero"))
      }
      pub(super) fn get_003338() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003336() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![CoreObjectField::new(
            get_003337(),
            CoreObjectFieldOperator::Default(None),
            get_003338(),
          )],
        ))
      }
      pub(super) fn get_003335() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_150(),
          CoreBinaryOperator::Plus(None),
          get_003336(),
        ))
      }
      pub(super) fn get_003333() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_147(),
          vec![get_ident_str_148(), get_003334(), get_003335()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003340() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_151(), get_001206()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003342() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_149(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003345() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("left"))
      }
      pub(super) fn get_003346() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003344() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![CoreObjectField::new(
            get_003345(),
            CoreObjectFieldOperator::Default(None),
            get_003346(),
          )],
        ))
      }
      pub(super) fn get_003343() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_150(),
          CoreBinaryOperator::Plus(None),
          get_003344(),
        ))
      }
      pub(super) fn get_003341() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_147(),
          vec![get_ident_str_148(), get_003342(), get_003343()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003349() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(" "))
      }
      pub(super) fn get_003348() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_151(), get_003349()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003351() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_149(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003354() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("blank"))
      }
      pub(super) fn get_003355() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003353() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![CoreObjectField::new(
            get_003354(),
            CoreObjectFieldOperator::Default(None),
            get_003355(),
          )],
        ))
      }
      pub(super) fn get_003352() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_150(),
          CoreBinaryOperator::Plus(None),
          get_003353(),
        ))
      }
      pub(super) fn get_003350() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_147(),
          vec![get_ident_str_148(), get_003351(), get_003352()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003358() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("+"))
      }
      pub(super) fn get_003357() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_151(), get_003358()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003360() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_149(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003363() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("plus"))
      }
      pub(super) fn get_003364() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003362() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![CoreObjectField::new(
            get_003363(),
            CoreObjectFieldOperator::Default(None),
            get_003364(),
          )],
        ))
      }
      pub(super) fn get_003361() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_150(),
          CoreBinaryOperator::Plus(None),
          get_003362(),
        ))
      }
      pub(super) fn get_003359() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_147(),
          vec![get_ident_str_148(), get_003360(), get_003361()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003366() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_j_149()))
      }
      pub(super) fn get_003367() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_v_150()))
      }
      pub(super) fn get_003365() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003366(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003367(),
            ),
          ],
        ))
      }
      pub(super) fn get_003356() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003357(), get_003359(), get_003365()))
      }
      pub(super) fn get_003347() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003348(), get_003350(), get_003356()))
      }
      pub(super) fn get_003339() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003340(), get_003341(), get_003347()))
      }
      pub(super) fn get_003331() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003332(), get_003333(), get_003339()))
      }
      pub(super) fn get_003319() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003320(), get_003323(), get_003331()))
      }
      pub(super) fn get_003317() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 151u32) },
            get_003318(),
          )],
          get_003319(),
        ))
      }
      pub(super) fn get_003368() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003312() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003313(), get_003317(), get_003368()))
      }
      pub(super) fn get_003308() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 148u32) },
              get_003309(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 149u32) },
              get_003310(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 150u32) },
              get_003311(),
            ),
          ],
          get_003312(),
        ))
      }
      pub(super) fn get_ident_str_145() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 145u32)
        }))
      }
      pub(super) fn get_ident_i_146() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 146u32)
        }))
      }
      pub(super) fn get_003373() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003374() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003375() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003376() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003377() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003372() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003329(),
              CoreObjectFieldOperator::Default(None),
              get_003373(),
            ),
            CoreObjectField::new(
              get_003337(),
              CoreObjectFieldOperator::Default(None),
              get_003374(),
            ),
            CoreObjectField::new(
              get_003345(),
              CoreObjectFieldOperator::Default(None),
              get_003375(),
            ),
            CoreObjectField::new(
              get_003354(),
              CoreObjectFieldOperator::Default(None),
              get_003376(),
            ),
            CoreObjectField::new(
              get_003363(),
              CoreObjectFieldOperator::Default(None),
              get_003377(),
            ),
          ],
        ))
      }
      pub(super) fn get_003369() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_147(),
          vec![get_ident_str_145(), get_ident_i_146(), get_003372()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003307() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("consume", 147u32) },
            get_003308(),
          )],
          get_003369(),
        ))
      }
      pub(super) fn get_003304() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 145u32) },
              get_003305(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 146u32) },
              get_003306(),
            ),
          ],
          get_003307(),
        ))
      }
      pub(super) fn get_003380() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003381() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_154() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 154u32)
        }))
      }
      pub(super) fn get_ident_str_153() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 153u32)
        }))
      }
      pub(super) fn get_003387() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_153()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003389() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_153(),
          get_ident_i_154(),
        ))
      }
      pub(super) fn get_003386() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003387(),
          CoreBinaryOperator::And(None),
          get_003389(),
        ))
      }
      pub(super) fn get_003390() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("*"))
      }
      pub(super) fn get_003385() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_003386(), get_003390()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003383() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_154(),
          CoreBinaryOperator::LessThan(None),
          get_003385(),
        ))
      }
      pub(super) fn get_003393() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_154(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003392() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003393()))
      }
      pub(super) fn get_003394() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003390()))
      }
      pub(super) fn get_003391() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003392(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003394(),
            ),
          ],
        ))
      }
      pub(super) fn get_003397() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003398() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_003399() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_j_157() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 157u32)
        }))
      }
      pub(super) fn get_ident_str_156() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 156u32)
        }))
      }
      pub(super) fn get_003403() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_156()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003401() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::LessThan(None),
          get_003403(),
        ))
      }
      pub(super) fn get_003406() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_156(),
          get_ident_j_157(),
        ))
      }
      pub(super) fn get_ident_c_159() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 159u32)
        }))
      }
      pub(super) fn get_003408() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_consume_155() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("consume", 155u32)
        }))
      }
      pub(super) fn get_003412() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_v_158() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 158u32)
        }))
      }
      pub(super) fn get_003415() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003413() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003415(),
        ))
      }
      pub(super) fn get_003410() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003412(), get_003413()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003418() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("1"))
      }
      pub(super) fn get_003417() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003418()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003420() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003422() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003421() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003422(),
        ))
      }
      pub(super) fn get_003419() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003420(), get_003421()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003425() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("2"))
      }
      pub(super) fn get_003424() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003425()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003427() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_number_2_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(2f64))
      }
      pub(super) fn get_003429() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_003428() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003429(),
        ))
      }
      pub(super) fn get_003426() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003427(), get_003428()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003433() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("3"))
      }
      pub(super) fn get_003432() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003433()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003435() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_number_3_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(3f64))
      }
      pub(super) fn get_003437() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_003436() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003437(),
        ))
      }
      pub(super) fn get_003434() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003435(), get_003436()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003441() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("4"))
      }
      pub(super) fn get_003440() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003441()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003443() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_number_4_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(4f64))
      }
      pub(super) fn get_003445() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_4_0(),
        ))
      }
      pub(super) fn get_003444() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003445(),
        ))
      }
      pub(super) fn get_003442() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003443(), get_003444()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003449() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("5"))
      }
      pub(super) fn get_003448() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003449()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003451() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_number_5_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(5f64))
      }
      pub(super) fn get_003453() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_5_0(),
        ))
      }
      pub(super) fn get_003452() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003453(),
        ))
      }
      pub(super) fn get_003450() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003451(), get_003452()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003457() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("6"))
      }
      pub(super) fn get_003456() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003457()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003459() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_number_6_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(6f64))
      }
      pub(super) fn get_003461() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_6_0(),
        ))
      }
      pub(super) fn get_003460() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003461(),
        ))
      }
      pub(super) fn get_003458() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003459(), get_003460()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003465() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("7"))
      }
      pub(super) fn get_003464() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003465()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003467() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_number_7_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(7f64))
      }
      pub(super) fn get_003469() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_7_0(),
        ))
      }
      pub(super) fn get_003468() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003469(),
        ))
      }
      pub(super) fn get_003466() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003467(), get_003468()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003473() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("8"))
      }
      pub(super) fn get_003472() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003473()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003475() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003477() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_8_0(),
        ))
      }
      pub(super) fn get_003476() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003477(),
        ))
      }
      pub(super) fn get_003474() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003475(), get_003476()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003480() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("9"))
      }
      pub(super) fn get_003479() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_159(), get_003480()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003482() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_157(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_number_9_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(9f64))
      }
      pub(super) fn get_003484() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_10_0(),
          CoreBinaryOperator::Plus(None),
          get_number_9_0(),
        ))
      }
      pub(super) fn get_003483() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_158(),
          CoreBinaryOperator::Mult(None),
          get_003484(),
        ))
      }
      pub(super) fn get_003481() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_156(), get_003482(), get_003483()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003487() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_j_157()))
      }
      pub(super) fn get_003488() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_v_158()))
      }
      pub(super) fn get_003486() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003487(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003488(),
            ),
          ],
        ))
      }
      pub(super) fn get_003478() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003479(), get_003481(), get_003486()))
      }
      pub(super) fn get_003471() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003472(), get_003474(), get_003478()))
      }
      pub(super) fn get_003463() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003464(), get_003466(), get_003471()))
      }
      pub(super) fn get_003455() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003456(), get_003458(), get_003463()))
      }
      pub(super) fn get_003447() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003448(), get_003450(), get_003455()))
      }
      pub(super) fn get_003439() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003440(), get_003442(), get_003447()))
      }
      pub(super) fn get_003431() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003432(), get_003434(), get_003439()))
      }
      pub(super) fn get_003423() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003424(), get_003426(), get_003431()))
      }
      pub(super) fn get_003416() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003417(), get_003419(), get_003423()))
      }
      pub(super) fn get_003407() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003408(), get_003410(), get_003416()))
      }
      pub(super) fn get_003405() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 159u32) },
            get_003406(),
          )],
          get_003407(),
        ))
      }
      pub(super) fn get_003489() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003400() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003401(), get_003405(), get_003489()))
      }
      pub(super) fn get_003396() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 156u32) },
              get_003397(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 157u32) },
              get_003398(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 158u32) },
              get_003399(),
            ),
          ],
          get_003400(),
        ))
      }
      pub(super) fn get_003490() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_consume_155(),
          vec![get_ident_str_153(), get_ident_i_154(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003395() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("consume", 155u32) },
            get_003396(),
          )],
          get_003490(),
        ))
      }
      pub(super) fn get_003382() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003383(), get_003391(), get_003395()))
      }
      pub(super) fn get_003379() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 153u32) },
              get_003380(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 154u32) },
              get_003381(),
            ),
          ],
          get_003382(),
        ))
      }
      pub(super) fn get_003493() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003494() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_162() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 162u32)
        }))
      }
      pub(super) fn get_ident_str_161() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 161u32)
        }))
      }
      pub(super) fn get_003498() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_161()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003496() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_162(),
          CoreBinaryOperator::LessThan(None),
          get_003498(),
        ))
      }
      pub(super) fn get_003501() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_161(),
          get_ident_i_162(),
        ))
      }
      pub(super) fn get_ident_c_163() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 163u32)
        }))
      }
      pub(super) fn get_003503() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_163(), get_002490()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_try_parse_field_width_152() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("try_parse_field_width", 152u32)
        }))
      }
      pub(super) fn get_003507() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_162(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003505() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_try_parse_field_width_152(),
          vec![get_ident_str_161(), get_003507()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003509() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_i_162()))
      }
      pub(super) fn get_003510() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_null()))
      }
      pub(super) fn get_003508() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003509(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003510(),
            ),
          ],
        ))
      }
      pub(super) fn get_003502() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003503(), get_003505(), get_003508()))
      }
      pub(super) fn get_003500() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 163u32) },
            get_003501(),
          )],
          get_003502(),
        ))
      }
      pub(super) fn get_003511() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003495() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003496(), get_003500(), get_003511()))
      }
      pub(super) fn get_003492() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 161u32) },
              get_003493(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 162u32) },
              get_003494(),
            ),
          ],
          get_003495(),
        ))
      }
      pub(super) fn get_003514() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003515() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_166() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 166u32)
        }))
      }
      pub(super) fn get_ident_str_165() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 165u32)
        }))
      }
      pub(super) fn get_003519() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_165()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003517() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_166(),
          CoreBinaryOperator::LessThan(None),
          get_003519(),
        ))
      }
      pub(super) fn get_003522() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_165(),
          get_ident_i_166(),
        ))
      }
      pub(super) fn get_ident_c_167() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 167u32)
        }))
      }
      pub(super) fn get_003529() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("h"))
      }
      pub(super) fn get_003528() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003529(),
          CoreBinaryOperator::Or(None),
          get_ident_c_167(),
        ))
      }
      pub(super) fn get_003526() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_167(), get_003528()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003531() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("l"))
      }
      pub(super) fn get_003530() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003531(),
          CoreBinaryOperator::Or(None),
          get_ident_c_167(),
        ))
      }
      pub(super) fn get_003525() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_003526(), get_003530()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003532() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("L"))
      }
      pub(super) fn get_003524() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_003525(), get_003532()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003533() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_166(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003523() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_003524(),
          get_003533(),
          get_ident_i_166(),
        ))
      }
      pub(super) fn get_003521() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 167u32) },
            get_003522(),
          )],
          get_003523(),
        ))
      }
      pub(super) fn get_003534() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003516() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003517(), get_003521(), get_003534()))
      }
      pub(super) fn get_003513() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 165u32) },
              get_003514(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 166u32) },
              get_003515(),
            ),
          ],
          get_003516(),
        ))
      }
      pub(super) fn get_003537() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003538() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_170() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 170u32)
        }))
      }
      pub(super) fn get_ident_str_169() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 169u32)
        }))
      }
      pub(super) fn get_003542() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_169()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003540() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::LessThan(None),
          get_003542(),
        ))
      }
      pub(super) fn get_003545() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_169(),
          get_ident_i_170(),
        ))
      }
      pub(super) fn get_ident_c_171() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 171u32)
        }))
      }
      pub(super) fn get_003552() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("d"))
      }
      pub(super) fn get_003551() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003552(),
          CoreBinaryOperator::Or(None),
          get_ident_c_171(),
        ))
      }
      pub(super) fn get_003549() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003551()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003553() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003292(),
          CoreBinaryOperator::Or(None),
          get_ident_c_171(),
        ))
      }
      pub(super) fn get_003548() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_003549(), get_003553()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003554() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("u"))
      }
      pub(super) fn get_003547() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_003548(), get_003554()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003557() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003556() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003557()))
      }
      pub(super) fn get_003558() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003552()))
      }
      pub(super) fn get_003559() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("caps"))
      }
      pub(super) fn get_003560() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003555() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003556(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003558(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003560(),
            ),
          ],
        ))
      }
      pub(super) fn get_003563() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("o"))
      }
      pub(super) fn get_003562() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003563()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003566() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003565() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003566()))
      }
      pub(super) fn get_003567() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003563()))
      }
      pub(super) fn get_003568() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003564() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003565(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003567(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003568(),
            ),
          ],
        ))
      }
      pub(super) fn get_003571() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("x"))
      }
      pub(super) fn get_003570() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003571()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003574() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003573() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003574()))
      }
      pub(super) fn get_003575() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003571()))
      }
      pub(super) fn get_003576() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003572() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003573(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003575(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003576(),
            ),
          ],
        ))
      }
      pub(super) fn get_003579() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("X"))
      }
      pub(super) fn get_003578() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003579()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003582() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003581() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003582()))
      }
      pub(super) fn get_003583() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003571()))
      }
      pub(super) fn get_003584() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003580() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003581(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003583(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003584(),
            ),
          ],
        ))
      }
      pub(super) fn get_003587() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("e"))
      }
      pub(super) fn get_003586() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003587()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003590() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003589() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003590()))
      }
      pub(super) fn get_003591() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003587()))
      }
      pub(super) fn get_003592() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003588() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003589(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003591(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003592(),
            ),
          ],
        ))
      }
      pub(super) fn get_003595() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("E"))
      }
      pub(super) fn get_003594() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003595()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003598() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003597() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003598()))
      }
      pub(super) fn get_003599() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003587()))
      }
      pub(super) fn get_003600() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003596() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003597(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003599(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003600(),
            ),
          ],
        ))
      }
      pub(super) fn get_003603() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("f"))
      }
      pub(super) fn get_003602() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003603()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003606() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003605() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003606()))
      }
      pub(super) fn get_003607() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003603()))
      }
      pub(super) fn get_003608() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003604() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003605(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003607(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003608(),
            ),
          ],
        ))
      }
      pub(super) fn get_003611() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("F"))
      }
      pub(super) fn get_003610() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003611()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003614() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003613() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003614()))
      }
      pub(super) fn get_003615() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003603()))
      }
      pub(super) fn get_003616() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003612() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003613(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003615(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003616(),
            ),
          ],
        ))
      }
      pub(super) fn get_003619() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("g"))
      }
      pub(super) fn get_003618() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003619()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003622() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003621() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003622()))
      }
      pub(super) fn get_003623() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003619()))
      }
      pub(super) fn get_003624() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003620() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003621(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003623(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003624(),
            ),
          ],
        ))
      }
      pub(super) fn get_003627() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("G"))
      }
      pub(super) fn get_003626() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003627()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003630() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003629() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003630()))
      }
      pub(super) fn get_003631() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003619()))
      }
      pub(super) fn get_003632() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_true()))
      }
      pub(super) fn get_003628() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003629(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003631(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003632(),
            ),
          ],
        ))
      }
      pub(super) fn get_003635() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("c"))
      }
      pub(super) fn get_003634() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003635()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003638() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003637() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003638()))
      }
      pub(super) fn get_003639() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003635()))
      }
      pub(super) fn get_003640() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003636() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003637(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003639(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003640(),
            ),
          ],
        ))
      }
      pub(super) fn get_003643() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("s"))
      }
      pub(super) fn get_003642() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003643()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003646() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003645() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003646()))
      }
      pub(super) fn get_003647() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003643()))
      }
      pub(super) fn get_003648() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003644() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003645(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003647(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003648(),
            ),
          ],
        ))
      }
      pub(super) fn get_003651() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("%"))
      }
      pub(super) fn get_003650() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_171(), get_003651()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003654() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_170(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003653() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003654()))
      }
      pub(super) fn get_003655() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003651()))
      }
      pub(super) fn get_003656() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_false()))
      }
      pub(super) fn get_003652() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003653(),
            ),
            CoreObjectField::new(
              get_003295(),
              CoreObjectFieldOperator::Default(None),
              get_003655(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003656(),
            ),
          ],
        ))
      }
      pub(super) fn get_003659() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Unrecognised conversion type: "))
      }
      pub(super) fn get_003658() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003659(),
          CoreBinaryOperator::Plus(None),
          get_ident_c_171(),
        ))
      }
      pub(super) fn get_003657() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003658()))
      }
      pub(super) fn get_003649() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003650(), get_003652(), get_003657()))
      }
      pub(super) fn get_003641() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003642(), get_003644(), get_003649()))
      }
      pub(super) fn get_003633() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003634(), get_003636(), get_003641()))
      }
      pub(super) fn get_003625() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003626(), get_003628(), get_003633()))
      }
      pub(super) fn get_003617() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003618(), get_003620(), get_003625()))
      }
      pub(super) fn get_003609() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003610(), get_003612(), get_003617()))
      }
      pub(super) fn get_003601() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003602(), get_003604(), get_003609()))
      }
      pub(super) fn get_003593() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003594(), get_003596(), get_003601()))
      }
      pub(super) fn get_003585() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003586(), get_003588(), get_003593()))
      }
      pub(super) fn get_003577() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003578(), get_003580(), get_003585()))
      }
      pub(super) fn get_003569() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003570(), get_003572(), get_003577()))
      }
      pub(super) fn get_003561() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003562(), get_003564(), get_003569()))
      }
      pub(super) fn get_003546() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003547(), get_003555(), get_003561()))
      }
      pub(super) fn get_003544() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 171u32) },
            get_003545(),
          )],
          get_003546(),
        ))
      }
      pub(super) fn get_003660() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003539() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003540(), get_003544(), get_003660()))
      }
      pub(super) fn get_003536() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 169u32) },
              get_003537(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 170u32) },
              get_003538(),
            ),
          ],
          get_003539(),
        ))
      }
      pub(super) fn get_003663() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003664() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_174() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 174u32)
        }))
      }
      pub(super) fn get_ident_str_173() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 173u32)
        }))
      }
      pub(super) fn get_003668() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_173()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003666() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_174(),
          CoreBinaryOperator::LessThan(None),
          get_003668(),
        ))
      }
      pub(super) fn get_ident_try_parse_mapping_key_135() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("try_parse_mapping_key", 135u32)
        }))
      }
      pub(super) fn get_003671() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_try_parse_mapping_key_135(),
          vec![get_ident_str_173(), get_ident_i_174()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_try_parse_cflags_144() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("try_parse_cflags", 144u32)
        }))
      }
      pub(super) fn get_ident_mkey_175() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("mkey", 175u32)
        }))
      }
      pub(super) fn get_member_mkey_175_i() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_mkey_175(),
          get_003292(),
        ))
      }
      pub(super) fn get_003674() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_try_parse_cflags_144(),
          vec![get_ident_str_173(), get_member_mkey_175_i()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_cflags_176() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cflags", 176u32)
        }))
      }
      pub(super) fn get_member_cflags_176_i() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_cflags_176(),
          get_003292(),
        ))
      }
      pub(super) fn get_003679() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_try_parse_field_width_152(),
          vec![get_ident_str_173(), get_member_cflags_176_i()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_try_parse_precision_160() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("try_parse_precision", 160u32)
        }))
      }
      pub(super) fn get_ident_fw_177() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("fw", 177u32)
        }))
      }
      pub(super) fn get_member_fw_177_i() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_fw_177(), get_003292()))
      }
      pub(super) fn get_003683() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_try_parse_precision_160(),
          vec![get_ident_str_173(), get_member_fw_177_i()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_try_parse_length_modifier_164() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("try_parse_length_modifier", 164u32)
        }))
      }
      pub(super) fn get_ident_prec_178() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("prec", 178u32)
        }))
      }
      pub(super) fn get_member_prec_178_i() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_prec_178(),
          get_003292(),
        ))
      }
      pub(super) fn get_003688() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_try_parse_length_modifier_164(),
          vec![get_ident_str_173(), get_member_prec_178_i()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_parse_conv_type_168() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("parse_conv_type", 168u32)
        }))
      }
      pub(super) fn get_ident_len_mod_179() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("len_mod", 179u32)
        }))
      }
      pub(super) fn get_003693() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_conv_type_168(),
          vec![get_ident_str_173(), get_ident_len_mod_179()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_ctype_180() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ctype", 180u32)
        }))
      }
      pub(super) fn get_member_ctype_180_i() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_ctype_180(),
          get_003292(),
        ))
      }
      pub(super) fn get_003697() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_ctype_180_i()))
      }
      pub(super) fn get_003700() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("code"))
      }
      pub(super) fn get_003703() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("mkey"))
      }
      pub(super) fn get_member_mkey_175_v() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_mkey_175(),
          get_003295(),
        ))
      }
      pub(super) fn get_003704() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_mkey_175_v()))
      }
      pub(super) fn get_003706() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("cflags"))
      }
      pub(super) fn get_member_cflags_176_v() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_cflags_176(),
          get_003295(),
        ))
      }
      pub(super) fn get_003707() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_cflags_176_v()))
      }
      pub(super) fn get_003709() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("fw"))
      }
      pub(super) fn get_member_fw_177_v() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_fw_177(), get_003295()))
      }
      pub(super) fn get_003710() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_fw_177_v()))
      }
      pub(super) fn get_003712() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("prec"))
      }
      pub(super) fn get_member_prec_178_v() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_prec_178(),
          get_003295(),
        ))
      }
      pub(super) fn get_003713() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_prec_178_v()))
      }
      pub(super) fn get_003715() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("ctype"))
      }
      pub(super) fn get_member_ctype_180_v() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_ctype_180(),
          get_003295(),
        ))
      }
      pub(super) fn get_003716() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_ctype_180_v()))
      }
      pub(super) fn get_member_ctype_180_caps() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_ctype_180(),
          get_003559(),
        ))
      }
      pub(super) fn get_003718() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_ctype_180_caps()))
      }
      pub(super) fn get_003702() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003703(),
              CoreObjectFieldOperator::Default(None),
              get_003704(),
            ),
            CoreObjectField::new(
              get_003706(),
              CoreObjectFieldOperator::Default(None),
              get_003707(),
            ),
            CoreObjectField::new(
              get_003709(),
              CoreObjectFieldOperator::Default(None),
              get_003710(),
            ),
            CoreObjectField::new(
              get_003712(),
              CoreObjectFieldOperator::Default(None),
              get_003713(),
            ),
            CoreObjectField::new(
              get_003715(),
              CoreObjectFieldOperator::Default(None),
              get_003716(),
            ),
            CoreObjectField::new(
              get_003559(),
              CoreObjectFieldOperator::Default(None),
              get_003718(),
            ),
          ],
        ))
      }
      pub(super) fn get_003701() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003702()))
      }
      pub(super) fn get_003696() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_003292(),
              CoreObjectFieldOperator::Default(None),
              get_003697(),
            ),
            CoreObjectField::new(
              get_003700(),
              CoreObjectFieldOperator::Default(None),
              get_003701(),
            ),
          ],
        ))
      }
      pub(super) fn get_003692() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("ctype", 180u32) },
            get_003693(),
          )],
          get_003696(),
        ))
      }
      pub(super) fn get_003687() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("len_mod", 179u32) },
            get_003688(),
          )],
          get_003692(),
        ))
      }
      pub(super) fn get_003682() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("prec", 178u32) },
            get_003683(),
          )],
          get_003687(),
        ))
      }
      pub(super) fn get_003678() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("fw", 177u32) },
            get_003679(),
          )],
          get_003682(),
        ))
      }
      pub(super) fn get_003673() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("cflags", 176u32) },
            get_003674(),
          )],
          get_003678(),
        ))
      }
      pub(super) fn get_003670() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("mkey", 175u32) },
            get_003671(),
          )],
          get_003673(),
        ))
      }
      pub(super) fn get_003720() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003278()))
      }
      pub(super) fn get_003665() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003666(), get_003670(), get_003720()))
      }
      pub(super) fn get_003662() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 173u32) },
              get_003663(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 174u32) },
              get_003664(),
            ),
          ],
          get_003665(),
        ))
      }
      pub(super) fn get_003723() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003724() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_003726() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'out' not bound"))
      }
      pub(super) fn get_003725() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003726()))
      }
      pub(super) fn get_003727() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002207()))
      }
      pub(super) fn get_ident_i_183() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 183u32)
        }))
      }
      pub(super) fn get_ident_str_182() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 182u32)
        }))
      }
      pub(super) fn get_003731() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_182()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003729() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_183(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_003731(),
        ))
      }
      pub(super) fn get_ident_out_184() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("out", 184u32)
        }))
      }
      pub(super) fn get_ident_cur_185() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cur", 185u32)
        }))
      }
      pub(super) fn get_003735() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_cur_185()]))
      }
      pub(super) fn get_003733() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_out_184(),
          CoreBinaryOperator::Plus(None),
          get_003735(),
        ))
      }
      pub(super) fn get_003738() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_182(),
          get_ident_i_183(),
        ))
      }
      pub(super) fn get_ident_c_186() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 186u32)
        }))
      }
      pub(super) fn get_003740() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_c_186(), get_003651()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_parse_code_172() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("parse_code", 172u32)
        }))
      }
      pub(super) fn get_003745() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_183(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003743() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_code_172(),
          vec![get_ident_str_182(), get_003745()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_parse_codes_181() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("parse_codes", 181u32)
        }))
      }
      pub(super) fn get_ident_r_187() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("r", 187u32)
        }))
      }
      pub(super) fn get_member_r_187_i() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_r_187(), get_003292()))
      }
      pub(super) fn get_member_r_187_code() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_r_187(), get_003700()))
      }
      pub(super) fn get_003751() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_cur_185(),
          get_member_r_187_code(),
        ]))
      }
      pub(super) fn get_003750() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_out_184(),
          CoreBinaryOperator::Plus(None),
          get_003751(),
        ))
      }
      pub(super) fn get_003746() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_codes_181(),
          vec![
            get_ident_str_182(),
            get_member_r_187_i(),
            get_003750(),
            get_000548(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_003742() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("r", 187u32) },
            get_003743(),
          )],
          get_003746(),
        ))
      }
      pub(super) fn get_003754() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_183(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003755() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cur_185(),
          CoreBinaryOperator::Plus(None),
          get_ident_c_186(),
        ))
      }
      pub(super) fn get_003753() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_codes_181(),
          vec![
            get_ident_str_182(),
            get_003754(),
            get_ident_out_184(),
            get_003755(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_003739() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003740(), get_003742(), get_003753()))
      }
      pub(super) fn get_003737() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("c", 186u32) },
            get_003738(),
          )],
          get_003739(),
        ))
      }
      pub(super) fn get_003728() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003729(), get_003733(), get_003737()))
      }
      pub(super) fn get_003722() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 182u32) },
              get_003723(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 183u32) },
              get_003724(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("out", 184u32) },
              get_003725(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("cur", 185u32) },
              get_003727(),
            ),
          ],
          get_003728(),
        ))
      }
      pub(super) fn get_ident_str_133() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 133u32)
        }))
      }
      pub(super) fn get_003759() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_003757() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_parse_codes_181(),
          vec![
            get_ident_str_133(),
            get_number_0_0(),
            get_003759(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003763() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'w' not bound"))
      }
      pub(super) fn get_003762() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003763()))
      }
      pub(super) fn get_003765() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 's' not bound"))
      }
      pub(super) fn get_003764() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003765()))
      }
      pub(super) fn get_003768() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003763()))
      }
      pub(super) fn get_003769() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_w_193() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("w", 193u32)
        }))
      }
      pub(super) fn get_003771() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_w_193(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_v_194() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 194u32)
        }))
      }
      pub(super) fn get_ident_aux_192() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 192u32)
        }))
      }
      pub(super) fn get_003776() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_w_193(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_s_191() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("s", 191u32)
        }))
      }
      pub(super) fn get_003777() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_194(),
          CoreBinaryOperator::Plus(None),
          get_ident_s_191(),
        ))
      }
      pub(super) fn get_003774() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_192(),
          vec![get_003776(), get_003777()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003770() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_003771(),
          get_ident_v_194(),
          get_003774(),
        ))
      }
      pub(super) fn get_003767() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("w", 193u32) },
              get_003768(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 194u32) },
              get_003769(),
            ),
          ],
          get_003770(),
        ))
      }
      pub(super) fn get_ident_w_190() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("w", 190u32)
        }))
      }
      pub(super) fn get_003779() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_192(),
          vec![get_ident_w_190(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003766() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 192u32) },
            get_003767(),
          )],
          get_003779(),
        ))
      }
      pub(super) fn get_003761() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("w", 190u32) },
              get_003762(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("s", 191u32) },
              get_003764(),
            ),
          ],
          get_003766(),
        ))
      }
      pub(super) fn get_003783() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003784() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003763()))
      }
      pub(super) fn get_003785() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003765()))
      }
      pub(super) fn get_ident_padding_189() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("padding", 189u32)
        }))
      }
      pub(super) fn get_ident_w_197() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("w", 197u32)
        }))
      }
      pub(super) fn get_ident_str_196() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 196u32)
        }))
      }
      pub(super) fn get_003791() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_196()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003789() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_w_197(),
          CoreBinaryOperator::Minus(None),
          get_003791(),
        ))
      }
      pub(super) fn get_ident_s_198() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("s", 198u32)
        }))
      }
      pub(super) fn get_003787() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_padding_189(),
          vec![get_003789(), get_ident_s_198()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003786() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003787(),
          CoreBinaryOperator::Plus(None),
          get_ident_str_196(),
        ))
      }
      pub(super) fn get_003782() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 196u32) },
              get_003783(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("w", 197u32) },
              get_003784(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("s", 198u32) },
              get_003785(),
            ),
          ],
          get_003786(),
        ))
      }
      pub(super) fn get_003796() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003797() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003763()))
      }
      pub(super) fn get_003798() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003765()))
      }
      pub(super) fn get_ident_str_200() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 200u32)
        }))
      }
      pub(super) fn get_ident_w_201() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("w", 201u32)
        }))
      }
      pub(super) fn get_003804() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_200()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003802() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_w_201(),
          CoreBinaryOperator::Minus(None),
          get_003804(),
        ))
      }
      pub(super) fn get_ident_s_202() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("s", 202u32)
        }))
      }
      pub(super) fn get_003801() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_padding_189(),
          vec![get_003802(), get_ident_s_202()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003799() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_str_200(),
          CoreBinaryOperator::Plus(None),
          get_003801(),
        ))
      }
      pub(super) fn get_003795() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 200u32) },
              get_003796(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("w", 201u32) },
              get_003797(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("s", 202u32) },
              get_003798(),
            ),
          ],
          get_003799(),
        ))
      }
      pub(super) fn get_003809() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'neg' not bound"))
      }
      pub(super) fn get_003808() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003809()))
      }
      pub(super) fn get_003811() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'mag' not bound"))
      }
      pub(super) fn get_003810() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003811()))
      }
      pub(super) fn get_003813() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'min_chars' not bound"))
      }
      pub(super) fn get_003812() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003813()))
      }
      pub(super) fn get_003815() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'min_digits' not bound"))
      }
      pub(super) fn get_003814() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003815()))
      }
      pub(super) fn get_003817() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'blank' not bound"))
      }
      pub(super) fn get_003816() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003817()))
      }
      pub(super) fn get_003819() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'plus' not bound"))
      }
      pub(super) fn get_003818() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003819()))
      }
      pub(super) fn get_003821() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'radix' not bound"))
      }
      pub(super) fn get_003820() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003821()))
      }
      pub(super) fn get_003823() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Parameter 'zero_prefix' not bound",
        ))
      }
      pub(super) fn get_003822() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003823()))
      }
      pub(super) fn get_ident_mag_205() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("mag", 205u32)
        }))
      }
      pub(super) fn get_003826() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_mag_205(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003831() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'n' not bound"))
      }
      pub(super) fn get_003830() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003831()))
      }
      pub(super) fn get_ident_n_214() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n", 214u32)
        }))
      }
      pub(super) fn get_003833() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_n_214(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_zero_prefix_211() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zero_prefix", 211u32)
        }))
      }
      pub(super) fn get_ident_aux_213() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 213u32)
        }))
      }
      pub(super) fn get_003841() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("floor"))
      }
      pub(super) fn get_member_std_3_floor() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_003841()))
      }
      pub(super) fn get_ident_radix_210() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("radix", 210u32)
        }))
      }
      pub(super) fn get_003842() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n_214(),
          CoreBinaryOperator::Div(None),
          get_ident_radix_210(),
        ))
      }
      pub(super) fn get_003839() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_003842()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003837() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_213(),
          vec![get_003839()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003844() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_ident_n_214(), get_ident_radix_210()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003836() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003837(),
          CoreBinaryOperator::Plus(None),
          get_003844(),
        ))
      }
      pub(super) fn get_003832() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_003833(),
          get_ident_zero_prefix_211(),
          get_003836(),
        ))
      }
      pub(super) fn get_003829() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("n", 214u32) },
            get_003830(),
          )],
          get_003832(),
        ))
      }
      pub(super) fn get_003845() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_213(),
          vec![get_ident_mag_205()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003828() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 213u32) },
            get_003829(),
          )],
          get_003845(),
        ))
      }
      pub(super) fn get_003825() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003826(), get_000025(), get_003828()))
      }
      pub(super) fn get_ident_min_chars_206() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("min_chars", 206u32)
        }))
      }
      pub(super) fn get_ident_neg_204() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("neg", 204u32)
        }))
      }
      pub(super) fn get_ident_blank_208() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("blank", 208u32)
        }))
      }
      pub(super) fn get_003851() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_neg_204(),
          CoreBinaryOperator::Or(None),
          get_ident_blank_208(),
        ))
      }
      pub(super) fn get_ident_plus_209() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("plus", 209u32)
        }))
      }
      pub(super) fn get_003850() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003851(),
          CoreBinaryOperator::Or(None),
          get_ident_plus_209(),
        ))
      }
      pub(super) fn get_003849() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_003850(),
          get_number_1_0(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003847() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_min_chars_206(),
          CoreBinaryOperator::Minus(None),
          get_003849(),
        ))
      }
      pub(super) fn get_ident_zp_215() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zp", 215u32)
        }))
      }
      pub(super) fn get_ident_min_digits_207() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("min_digits", 207u32)
        }))
      }
      pub(super) fn get_003856() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_max(),
          vec![get_ident_zp_215(), get_ident_min_digits_207()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_pad_left_195() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("pad_left", 195u32)
        }))
      }
      pub(super) fn get_ident_dec_212() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("dec", 212u32)
        }))
      }
      pub(super) fn get_ident_zp2_216() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zp2", 216u32)
        }))
      }
      pub(super) fn get_003860() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_pad_left_195(),
          vec![get_ident_dec_212(), get_ident_zp2_216(), get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003867() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_blank_208(),
          get_003349(),
          get_000548(),
        ))
      }
      pub(super) fn get_003866() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_plus_209(),
          get_003358(),
          get_003867(),
        ))
      }
      pub(super) fn get_003865() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_neg_204(),
          get_001206(),
          get_003866(),
        ))
      }
      pub(super) fn get_ident_dec2_217() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("dec2", 217u32)
        }))
      }
      pub(super) fn get_003864() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003865(),
          CoreBinaryOperator::Plus(None),
          get_ident_dec2_217(),
        ))
      }
      pub(super) fn get_003859() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("dec2", 217u32) },
            get_003860(),
          )],
          get_003864(),
        ))
      }
      pub(super) fn get_003855() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zp2", 216u32) },
            get_003856(),
          )],
          get_003859(),
        ))
      }
      pub(super) fn get_003846() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zp", 215u32) },
            get_003847(),
          )],
          get_003855(),
        ))
      }
      pub(super) fn get_003824() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("dec", 212u32) },
            get_003825(),
          )],
          get_003846(),
        ))
      }
      pub(super) fn get_003807() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("neg", 204u32) },
              get_003808(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("mag", 205u32) },
              get_003810(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("min_chars", 206u32) },
              get_003812(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("min_digits", 207u32) },
              get_003814(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("blank", 208u32) },
              get_003816(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("plus", 209u32) },
              get_003818(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("radix", 210u32) },
              get_003820(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("zero_prefix", 211u32) },
              get_003822(),
            ),
          ],
          get_003824(),
        ))
      }
      pub(super) fn get_003872() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'n__' not bound"))
      }
      pub(super) fn get_003871() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003872()))
      }
      pub(super) fn get_003873() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003813()))
      }
      pub(super) fn get_003874() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003815()))
      }
      pub(super) fn get_003875() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003817()))
      }
      pub(super) fn get_003876() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003819()))
      }
      pub(super) fn get_003878() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'add_zerox' not bound"))
      }
      pub(super) fn get_003877() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003878()))
      }
      pub(super) fn get_003880() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'capitals' not bound"))
      }
      pub(super) fn get_003879() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003880()))
      }
      pub(super) fn get_003883() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_number_0_0(),
          get_number_1_0(),
          get_number_2_0(),
          get_number_3_0(),
          get_number_4_0(),
          get_number_5_0(),
          get_number_6_0(),
          get_number_7_0(),
          get_number_8_0(),
          get_number_9_0(),
        ]))
      }
      pub(super) fn get_ident_capitals_225() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("capitals", 225u32)
        }))
      }
      pub(super) fn get_003887() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("B"))
      }
      pub(super) fn get_003888() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("C"))
      }
      pub(super) fn get_003889() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("D"))
      }
      pub(super) fn get_003886() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_000028(),
          get_003887(),
          get_003888(),
          get_003889(),
          get_003595(),
          get_003611(),
        ]))
      }
      pub(super) fn get_003891() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("b"))
      }
      pub(super) fn get_003890() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_000031(),
          get_003891(),
          get_003635(),
          get_003552(),
          get_003587(),
          get_003603(),
        ]))
      }
      pub(super) fn get_003884() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_capitals_225(),
          get_003886(),
          get_003890(),
        ))
      }
      pub(super) fn get_003882() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003883(),
          CoreBinaryOperator::Plus(None),
          get_003884(),
        ))
      }
      pub(super) fn get_003895() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("abs"))
      }
      pub(super) fn get_member_std_3_abs() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_003895()))
      }
      pub(super) fn get_ident_n___219() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n__", 219u32)
        }))
      }
      pub(super) fn get_003893() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_abs(),
          vec![get_ident_n___219()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003899() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003831()))
      }
      pub(super) fn get_ident_n_229() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n", 229u32)
        }))
      }
      pub(super) fn get_003901() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_n_229(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_aux_228() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 228u32)
        }))
      }
      pub(super) fn get_003907() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n_229(),
          CoreBinaryOperator::Div(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_003906() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_003907()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003904() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_228(),
          vec![get_003906()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_numerals_226() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("numerals", 226u32)
        }))
      }
      pub(super) fn get_003910() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_ident_n_229(), get_number_16_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003908() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_numerals_226(),
          get_003910(),
        ))
      }
      pub(super) fn get_003903() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003904(),
          CoreBinaryOperator::Plus(None),
          get_003908(),
        ))
      }
      pub(super) fn get_003900() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003901(), get_000548(), get_003903()))
      }
      pub(super) fn get_003898() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("n", 229u32) },
            get_003899(),
          )],
          get_003900(),
        ))
      }
      pub(super) fn get_ident_n__227() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n_", 227u32)
        }))
      }
      pub(super) fn get_003914() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_ident_n__227()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003913() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_003914(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003917() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_ident_n__227()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003916() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_228(),
          vec![get_003917()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003912() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003913(), get_000025(), get_003916()))
      }
      pub(super) fn get_003919() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n___219(),
          CoreBinaryOperator::LessThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_min_chars_220() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("min_chars", 220u32)
        }))
      }
      pub(super) fn get_ident_neg_231() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("neg", 231u32)
        }))
      }
      pub(super) fn get_ident_blank_222() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("blank", 222u32)
        }))
      }
      pub(super) fn get_003926() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_neg_231(),
          CoreBinaryOperator::Or(None),
          get_ident_blank_222(),
        ))
      }
      pub(super) fn get_ident_plus_223() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("plus", 223u32)
        }))
      }
      pub(super) fn get_003925() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003926(),
          CoreBinaryOperator::Or(None),
          get_ident_plus_223(),
        ))
      }
      pub(super) fn get_003924() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_003925(),
          get_number_1_0(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003922() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_min_chars_220(),
          CoreBinaryOperator::Minus(None),
          get_003924(),
        ))
      }
      pub(super) fn get_ident_add_zerox_224() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("add_zerox", 224u32)
        }))
      }
      pub(super) fn get_003930() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_add_zerox_224(),
          get_number_2_0(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_003921() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003922(),
          CoreBinaryOperator::Minus(None),
          get_003930(),
        ))
      }
      pub(super) fn get_ident_zp_232() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zp", 232u32)
        }))
      }
      pub(super) fn get_ident_min_digits_221() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("min_digits", 221u32)
        }))
      }
      pub(super) fn get_003933() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_max(),
          vec![get_ident_zp_232(), get_ident_min_digits_221()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003940() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("0X"))
      }
      pub(super) fn get_003941() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("0x"))
      }
      pub(super) fn get_003939() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_capitals_225(),
          get_003940(),
          get_003941(),
        ))
      }
      pub(super) fn get_003938() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_add_zerox_224(),
          get_003939(),
          get_000548(),
        ))
      }
      pub(super) fn get_ident_hex_230() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("hex", 230u32)
        }))
      }
      pub(super) fn get_ident_zp2_233() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zp2", 233u32)
        }))
      }
      pub(super) fn get_003942() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_pad_left_195(),
          vec![get_ident_hex_230(), get_ident_zp2_233(), get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003937() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003938(),
          CoreBinaryOperator::Plus(None),
          get_003942(),
        ))
      }
      pub(super) fn get_003948() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_blank_222(),
          get_003349(),
          get_000548(),
        ))
      }
      pub(super) fn get_003947() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_plus_223(),
          get_003358(),
          get_003948(),
        ))
      }
      pub(super) fn get_003946() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_neg_231(),
          get_001206(),
          get_003947(),
        ))
      }
      pub(super) fn get_ident_hex2_234() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("hex2", 234u32)
        }))
      }
      pub(super) fn get_003945() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003946(),
          CoreBinaryOperator::Plus(None),
          get_ident_hex2_234(),
        ))
      }
      pub(super) fn get_003936() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("hex2", 234u32) },
            get_003937(),
          )],
          get_003945(),
        ))
      }
      pub(super) fn get_003932() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zp2", 233u32) },
            get_003933(),
          )],
          get_003936(),
        ))
      }
      pub(super) fn get_003920() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zp", 232u32) },
            get_003921(),
          )],
          get_003932(),
        ))
      }
      pub(super) fn get_003918() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("neg", 231u32) },
            get_003919(),
          )],
          get_003920(),
        ))
      }
      pub(super) fn get_003911() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("hex", 230u32) },
            get_003912(),
          )],
          get_003918(),
        ))
      }
      pub(super) fn get_003897() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 228u32) },
            get_003898(),
          )],
          get_003911(),
        ))
      }
      pub(super) fn get_003892() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("n_", 227u32) },
            get_003893(),
          )],
          get_003897(),
        ))
      }
      pub(super) fn get_003881() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("numerals", 226u32) },
            get_003882(),
          )],
          get_003892(),
        ))
      }
      pub(super) fn get_003870() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("n__", 219u32) },
              get_003871(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("min_chars", 220u32) },
              get_003873(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("min_digits", 221u32) },
              get_003874(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("blank", 222u32) },
              get_003875(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("plus", 223u32) },
              get_003876(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("add_zerox", 224u32) },
              get_003877(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("capitals", 225u32) },
              get_003879(),
            ),
          ],
          get_003881(),
        ))
      }
      pub(super) fn get_003952() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003955() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_003956() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_239() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 239u32)
        }))
      }
      pub(super) fn get_003958() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_239(),
          CoreBinaryOperator::LessThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_str_238() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 238u32)
        }))
      }
      pub(super) fn get_003962() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_238(),
          get_ident_i_239(),
        ))
      }
      pub(super) fn get_003961() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_003962(), get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_aux_237() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 237u32)
        }))
      }
      pub(super) fn get_003966() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_239(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003964() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_237(),
          vec![get_ident_str_238(), get_003966()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003968() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_239(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003967() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_substr(),
          vec![get_ident_str_238(), get_number_0_0(), get_003968()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003960() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003961(), get_003964(), get_003967()))
      }
      pub(super) fn get_003957() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_003958(), get_000548(), get_003960()))
      }
      pub(super) fn get_003954() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 238u32) },
              get_003955(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 239u32) },
              get_003956(),
            ),
          ],
          get_003957(),
        ))
      }
      pub(super) fn get_ident_str_236() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 236u32)
        }))
      }
      pub(super) fn get_003972() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_236()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003971() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003972(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_003969() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_237(),
          vec![get_ident_str_236(), get_003971()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003953() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 237u32) },
            get_003954(),
          )],
          get_003969(),
        ))
      }
      pub(super) fn get_003951() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 236u32) },
            get_003952(),
          )],
          get_003953(),
        ))
      }
      pub(super) fn get_003975() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003872()))
      }
      pub(super) fn get_003977() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'zero_pad' not bound"))
      }
      pub(super) fn get_003976() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003977()))
      }
      pub(super) fn get_003978() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003817()))
      }
      pub(super) fn get_003979() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003819()))
      }
      pub(super) fn get_003981() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'ensure_pt' not bound"))
      }
      pub(super) fn get_003980() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003981()))
      }
      pub(super) fn get_003983() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'trailing' not bound"))
      }
      pub(super) fn get_003982() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003983()))
      }
      pub(super) fn get_003985() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'prec' not bound"))
      }
      pub(super) fn get_003984() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003985()))
      }
      pub(super) fn get_ident_n___241() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n__", 241u32)
        }))
      }
      pub(super) fn get_003987() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_abs(),
          vec![get_ident_n___241()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_n__248() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n_", 248u32)
        }))
      }
      pub(super) fn get_003990() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_ident_n__248()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_prec_247() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("prec", 247u32)
        }))
      }
      pub(super) fn get_ident_ensure_pt_245() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ensure_pt", 245u32)
        }))
      }
      pub(super) fn get_003997() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_ident_ensure_pt_245(),
        ))
      }
      pub(super) fn get_003996() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_003997(),
        ))
      }
      pub(super) fn get_003994() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_prec_247(), get_003996()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_003993() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_003994(),
          get_number_0_0(),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_zero_pad_242() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zero_pad", 242u32)
        }))
      }
      pub(super) fn get_004001() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_zero_pad_242(),
          CoreBinaryOperator::Minus(None),
          get_ident_prec_247(),
        ))
      }
      pub(super) fn get_ident_dot_size_250() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("dot_size", 250u32)
        }))
      }
      pub(super) fn get_004000() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004001(),
          CoreBinaryOperator::Minus(None),
          get_ident_dot_size_250(),
        ))
      }
      pub(super) fn get_ident_render_int_203() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("render_int", 203u32)
        }))
      }
      pub(super) fn get_004007() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n___241(),
          CoreBinaryOperator::LessThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_whole_249() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("whole", 249u32)
        }))
      }
      pub(super) fn get_ident_zp_251() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zp", 251u32)
        }))
      }
      pub(super) fn get_ident_blank_243() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("blank", 243u32)
        }))
      }
      pub(super) fn get_ident_plus_244() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("plus", 244u32)
        }))
      }
      pub(super) fn get_004005() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_int_203(),
          vec![
            get_004007(),
            get_ident_whole_249(),
            get_ident_zp_251(),
            get_number_0_0(),
            get_ident_blank_243(),
            get_ident_plus_244(),
            get_number_10_0(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004013() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_prec_247(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_str_252() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 252u32)
        }))
      }
      pub(super) fn get_004016() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_ensure_pt_245(),
          get_002490(),
          get_000548(),
        ))
      }
      pub(super) fn get_004014() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_str_252(),
          CoreBinaryOperator::Plus(None),
          get_004016(),
        ))
      }
      pub(super) fn get_004020() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n__248(),
          CoreBinaryOperator::Minus(None),
          get_ident_whole_249(),
        ))
      }
      pub(super) fn get_004024() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("pow"))
      }
      pub(super) fn get_member_std_3_pow() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_004024()))
      }
      pub(super) fn get_004022() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_pow(),
          vec![get_number_10_0(), get_ident_prec_247()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_number_0_5() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(0.5f64))
      }
      pub(super) fn get_004021() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004022(),
          CoreBinaryOperator::Plus(None),
          get_number_0_5(),
        ))
      }
      pub(super) fn get_004019() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004020(),
          CoreBinaryOperator::Mult(None),
          get_004021(),
        ))
      }
      pub(super) fn get_004018() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_004019()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_trailing_246() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("trailing", 246u32)
        }))
      }
      pub(super) fn get_ident_frac_253() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("frac", 253u32)
        }))
      }
      pub(super) fn get_004028() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_trailing_246(),
          CoreBinaryOperator::Or(None),
          get_ident_frac_253(),
        ))
      }
      pub(super) fn get_004027() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004028(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004032() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_int_203(),
          vec![
            get_false(),
            get_ident_frac_253(),
            get_ident_prec_247(),
            get_number_0_0(),
            get_false(),
            get_false(),
            get_number_10_0(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004034() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_str_252(),
          CoreBinaryOperator::Plus(None),
          get_002490(),
        ))
      }
      pub(super) fn get_004036() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_ident_trailing_246(),
        ))
      }
      pub(super) fn get_ident_strip_trailing_zero_235() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("strip_trailing_zero", 235u32)
        }))
      }
      pub(super) fn get_ident_frac_str_254() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("frac_str", 254u32)
        }))
      }
      pub(super) fn get_004037() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_strip_trailing_zero_235(),
          vec![get_ident_frac_str_254()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004035() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004036(),
          get_004037(),
          get_ident_frac_str_254(),
        ))
      }
      pub(super) fn get_004033() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004034(),
          CoreBinaryOperator::Plus(None),
          get_004035(),
        ))
      }
      pub(super) fn get_004031() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("frac_str", 254u32) },
            get_004032(),
          )],
          get_004033(),
        ))
      }
      pub(super) fn get_004026() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004027(),
          get_004031(),
          get_ident_str_252(),
        ))
      }
      pub(super) fn get_004017() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("frac", 253u32) },
            get_004018(),
          )],
          get_004026(),
        ))
      }
      pub(super) fn get_004012() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004013(), get_004014(), get_004017()))
      }
      pub(super) fn get_004004() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str", 252u32) },
            get_004005(),
          )],
          get_004012(),
        ))
      }
      pub(super) fn get_003999() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zp", 251u32) },
            get_004000(),
          )],
          get_004004(),
        ))
      }
      pub(super) fn get_003992() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("dot_size", 250u32) },
            get_003993(),
          )],
          get_003999(),
        ))
      }
      pub(super) fn get_003989() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("whole", 249u32) },
            get_003990(),
          )],
          get_003992(),
        ))
      }
      pub(super) fn get_003986() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("n_", 248u32) },
            get_003987(),
          )],
          get_003989(),
        ))
      }
      pub(super) fn get_003974() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("n__", 241u32) },
              get_003975(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("zero_pad", 242u32) },
              get_003976(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("blank", 243u32) },
              get_003978(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("plus", 244u32) },
              get_003979(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("ensure_pt", 245u32) },
              get_003980(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("trailing", 246u32) },
              get_003982(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("prec", 247u32) },
              get_003984(),
            ),
          ],
          get_003986(),
        ))
      }
      pub(super) fn get_004042() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003872()))
      }
      pub(super) fn get_004043() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003977()))
      }
      pub(super) fn get_004044() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003817()))
      }
      pub(super) fn get_004045() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003819()))
      }
      pub(super) fn get_004046() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003981()))
      }
      pub(super) fn get_004047() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003983()))
      }
      pub(super) fn get_004049() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'caps' not bound"))
      }
      pub(super) fn get_004048() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004049()))
      }
      pub(super) fn get_004050() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003985()))
      }
      pub(super) fn get_ident_n___256() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n__", 256u32)
        }))
      }
      pub(super) fn get_004053() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_n___256(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004059() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("log"))
      }
      pub(super) fn get_member_std_3_log() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_004059()))
      }
      pub(super) fn get_004060() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_abs(),
          vec![get_ident_n___256()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004057() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_log(),
          vec![get_004060()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004061() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_log(),
          vec![get_number_10_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004056() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004057(),
          CoreBinaryOperator::Div(None),
          get_004061(),
        ))
      }
      pub(super) fn get_004055() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_004056()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004052() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004053(),
          get_number_0_0(),
          get_004055(),
        ))
      }
      pub(super) fn get_ident_caps_262() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("caps", 262u32)
        }))
      }
      pub(super) fn get_004064() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_caps_262(),
          get_003595(),
          get_003587(),
        ))
      }
      pub(super) fn get_ident_exponent_264() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("exponent", 264u32)
        }))
      }
      pub(super) fn get_004067() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_exponent_264(),
          CoreBinaryOperator::LessThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004069() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_abs(),
          vec![get_ident_exponent_264()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004066() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_int_203(),
          vec![
            get_004067(),
            get_004069(),
            get_number_3_0(),
            get_number_0_0(),
            get_false(),
            get_true(),
            get_number_10_0(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004063() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004064(),
          CoreBinaryOperator::Plus(None),
          get_004066(),
        ))
      }
      pub(super) fn get_number_324_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(324f64))
      }
      pub(super) fn get_004073() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_number_324_0(),
        ))
      }
      pub(super) fn get_004072() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_exponent_264(), get_004073()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004076() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n___256(),
          CoreBinaryOperator::Mult(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004078() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_exponent_264(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004077() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_pow(),
          vec![get_number_10_0(), get_004078()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004075() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004076(),
          CoreBinaryOperator::Div(None),
          get_004077(),
        ))
      }
      pub(super) fn get_004080() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_pow(),
          vec![get_number_10_0(), get_ident_exponent_264()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004079() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n___256(),
          CoreBinaryOperator::Div(None),
          get_004080(),
        ))
      }
      pub(super) fn get_004071() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004072(), get_004075(), get_004079()))
      }
      pub(super) fn get_ident_zero_pad_257() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zero_pad", 257u32)
        }))
      }
      pub(super) fn get_ident_suff_265() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("suff", 265u32)
        }))
      }
      pub(super) fn get_004084() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_suff_265()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004082() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_zero_pad_257(),
          CoreBinaryOperator::Minus(None),
          get_004084(),
        ))
      }
      pub(super) fn get_ident_render_float_dec_240() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("render_float_dec", 240u32)
        }))
      }
      pub(super) fn get_ident_mantissa_266() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("mantissa", 266u32)
        }))
      }
      pub(super) fn get_ident_zp2_267() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zp2", 267u32)
        }))
      }
      pub(super) fn get_ident_blank_258() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("blank", 258u32)
        }))
      }
      pub(super) fn get_ident_plus_259() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("plus", 259u32)
        }))
      }
      pub(super) fn get_ident_ensure_pt_260() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ensure_pt", 260u32)
        }))
      }
      pub(super) fn get_ident_trailing_261() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("trailing", 261u32)
        }))
      }
      pub(super) fn get_ident_prec_263() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("prec", 263u32)
        }))
      }
      pub(super) fn get_004087() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_float_dec_240(),
          vec![
            get_ident_mantissa_266(),
            get_ident_zp2_267(),
            get_ident_blank_258(),
            get_ident_plus_259(),
            get_ident_ensure_pt_260(),
            get_ident_trailing_261(),
            get_ident_prec_263(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004086() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004087(),
          CoreBinaryOperator::Plus(None),
          get_ident_suff_265(),
        ))
      }
      pub(super) fn get_004081() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zp2", 267u32) },
            get_004082(),
          )],
          get_004086(),
        ))
      }
      pub(super) fn get_004070() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("mantissa", 266u32) },
            get_004071(),
          )],
          get_004081(),
        ))
      }
      pub(super) fn get_004062() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("suff", 265u32) },
            get_004063(),
          )],
          get_004070(),
        ))
      }
      pub(super) fn get_004051() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("exponent", 264u32) },
            get_004052(),
          )],
          get_004062(),
        ))
      }
      pub(super) fn get_004041() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("n__", 256u32) },
              get_004042(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("zero_pad", 257u32) },
              get_004043(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("blank", 258u32) },
              get_004044(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("plus", 259u32) },
              get_004045(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("ensure_pt", 260u32) },
              get_004046(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("trailing", 261u32) },
              get_004047(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("caps", 262u32) },
              get_004048(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("prec", 263u32) },
              get_004050(),
            ),
          ],
          get_004051(),
        ))
      }
      pub(super) fn get_004099() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'val' not bound"))
      }
      pub(super) fn get_004098() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004099()))
      }
      pub(super) fn get_004101() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'code' not bound"))
      }
      pub(super) fn get_004100() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004101()))
      }
      pub(super) fn get_004103() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'fw' not bound"))
      }
      pub(super) fn get_004102() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004103()))
      }
      pub(super) fn get_004105() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Parameter 'prec_or_null' not bound",
        ))
      }
      pub(super) fn get_004104() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004105()))
      }
      pub(super) fn get_004106() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_code_270() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("code", 270u32)
        }))
      }
      pub(super) fn get_member_code_270_cflags() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_270(),
          get_003706(),
        ))
      }
      pub(super) fn get_ident_prec_or_null_272() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("prec_or_null", 272u32)
        }))
      }
      pub(super) fn get_004113() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_prec_or_null_272(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004112() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004113(),
        ))
      }
      pub(super) fn get_004111() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004112(),
          get_ident_prec_or_null_272(),
          get_number_6_0(),
        ))
      }
      pub(super) fn get_004118() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_prec_or_null_272(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004117() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004118(),
        ))
      }
      pub(super) fn get_004116() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004117(),
          get_ident_prec_or_null_272(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_cflags_274() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cflags", 274u32)
        }))
      }
      pub(super) fn get_member_cflags_274_zero() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_cflags_274(),
          get_003337(),
        ))
      }
      pub(super) fn get_member_cflags_274_left() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_cflags_274(),
          get_003345(),
        ))
      }
      pub(super) fn get_004124() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_member_cflags_274_left(),
        ))
      }
      pub(super) fn get_004121() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_member_cflags_274_zero(),
          CoreBinaryOperator::And(None),
          get_004124(),
        ))
      }
      pub(super) fn get_ident_fw_271() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("fw", 271u32)
        }))
      }
      pub(super) fn get_004120() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004121(),
          get_ident_fw_271(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_member_code_270_ctype() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_270(),
          get_003715(),
        ))
      }
      pub(super) fn get_004128() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003643()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_std_3_toString() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_000476()))
      }
      pub(super) fn get_ident_val_269() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("val", 269u32)
        }))
      }
      pub(super) fn get_004130() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_toString(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004134() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003552()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004138() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004137() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004138(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004136() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004137(),
        ))
      }
      pub(super) fn get_004143() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Format required number at "))
      }
      pub(super) fn get_ident_i_273() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 273u32)
        }))
      }
      pub(super) fn get_004142() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004143(),
          CoreBinaryOperator::Plus(None),
          get_ident_i_273(),
        ))
      }
      pub(super) fn get_004145() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(", got "))
      }
      pub(super) fn get_004141() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004142(),
          CoreBinaryOperator::Plus(None),
          get_004145(),
        ))
      }
      pub(super) fn get_004146() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004140() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004141(),
          CoreBinaryOperator::Plus(None),
          get_004146(),
        ))
      }
      pub(super) fn get_004139() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004140()))
      }
      pub(super) fn get_004149() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004148() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_val_269(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_004149(),
        ))
      }
      pub(super) fn get_004151() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_abs(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004150() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_004151()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_zp_277() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zp", 277u32)
        }))
      }
      pub(super) fn get_ident_iprec_276() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("iprec", 276u32)
        }))
      }
      pub(super) fn get_member_cflags_274_blank() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_cflags_274(),
          get_003354(),
        ))
      }
      pub(super) fn get_member_cflags_274_plus() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_cflags_274(),
          get_003363(),
        ))
      }
      pub(super) fn get_004147() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_int_203(),
          vec![
            get_004148(),
            get_004150(),
            get_ident_zp_277(),
            get_ident_iprec_276(),
            get_member_cflags_274_blank(),
            get_member_cflags_274_plus(),
            get_number_10_0(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004135() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004136(), get_004139(), get_004147()))
      }
      pub(super) fn get_004157() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003563()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004161() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004160() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004161(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004159() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004160(),
        ))
      }
      pub(super) fn get_004165() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004143(),
          CoreBinaryOperator::Plus(None),
          get_ident_i_273(),
        ))
      }
      pub(super) fn get_004164() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004165(),
          CoreBinaryOperator::Plus(None),
          get_004145(),
        ))
      }
      pub(super) fn get_004166() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004163() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004164(),
          CoreBinaryOperator::Plus(None),
          get_004166(),
        ))
      }
      pub(super) fn get_004162() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004163()))
      }
      pub(super) fn get_member_cflags_274_alt() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_cflags_274(),
          get_003329(),
        ))
      }
      pub(super) fn get_004168() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_member_cflags_274_alt(),
          get_000025(),
          get_000548(),
        ))
      }
      pub(super) fn get_004172() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004171() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_val_269(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_004172(),
        ))
      }
      pub(super) fn get_004174() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_abs(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004173() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_004174()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_zero_prefix_278() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("zero_prefix", 278u32)
        }))
      }
      pub(super) fn get_004170() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_int_203(),
          vec![
            get_004171(),
            get_004173(),
            get_ident_zp_277(),
            get_ident_iprec_276(),
            get_member_cflags_274_blank(),
            get_member_cflags_274_plus(),
            get_number_8_0(),
            get_ident_zero_prefix_278(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004167() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_prefix", 278u32) },
            get_004168(),
          )],
          get_004170(),
        ))
      }
      pub(super) fn get_004158() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004159(), get_004162(), get_004167()))
      }
      pub(super) fn get_004177() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003571()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004181() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004180() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004181(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004179() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004180(),
        ))
      }
      pub(super) fn get_004185() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004143(),
          CoreBinaryOperator::Plus(None),
          get_ident_i_273(),
        ))
      }
      pub(super) fn get_004184() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004185(),
          CoreBinaryOperator::Plus(None),
          get_004145(),
        ))
      }
      pub(super) fn get_004186() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004183() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004184(),
          CoreBinaryOperator::Plus(None),
          get_004186(),
        ))
      }
      pub(super) fn get_004182() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004183()))
      }
      pub(super) fn get_ident_render_hex_218() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("render_hex", 218u32)
        }))
      }
      pub(super) fn get_004189() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_code_270_caps() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_270(),
          get_003559(),
        ))
      }
      pub(super) fn get_004187() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_hex_218(),
          vec![
            get_004189(),
            get_ident_zp_277(),
            get_ident_iprec_276(),
            get_member_cflags_274_blank(),
            get_member_cflags_274_plus(),
            get_member_cflags_274_alt(),
            get_member_code_270_caps(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004178() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004179(), get_004182(), get_004187()))
      }
      pub(super) fn get_004192() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003603()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004196() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004195() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004196(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004194() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004195(),
        ))
      }
      pub(super) fn get_004200() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004143(),
          CoreBinaryOperator::Plus(None),
          get_ident_i_273(),
        ))
      }
      pub(super) fn get_004199() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004200(),
          CoreBinaryOperator::Plus(None),
          get_004145(),
        ))
      }
      pub(super) fn get_004201() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004198() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004199(),
          CoreBinaryOperator::Plus(None),
          get_004201(),
        ))
      }
      pub(super) fn get_004197() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004198()))
      }
      pub(super) fn get_ident_fpprec_275() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("fpprec", 275u32)
        }))
      }
      pub(super) fn get_004202() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_float_dec_240(),
          vec![
            get_ident_val_269(),
            get_ident_zp_277(),
            get_member_cflags_274_blank(),
            get_member_cflags_274_plus(),
            get_member_cflags_274_alt(),
            get_true(),
            get_ident_fpprec_275(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004193() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004194(), get_004197(), get_004202()))
      }
      pub(super) fn get_004205() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003587()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004209() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004208() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004209(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004207() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004208(),
        ))
      }
      pub(super) fn get_004213() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004143(),
          CoreBinaryOperator::Plus(None),
          get_ident_i_273(),
        ))
      }
      pub(super) fn get_004212() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004213(),
          CoreBinaryOperator::Plus(None),
          get_004145(),
        ))
      }
      pub(super) fn get_004214() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004211() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004212(),
          CoreBinaryOperator::Plus(None),
          get_004214(),
        ))
      }
      pub(super) fn get_004210() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004211()))
      }
      pub(super) fn get_ident_render_float_sci_255() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("render_float_sci", 255u32)
        }))
      }
      pub(super) fn get_004215() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_float_sci_255(),
          vec![
            get_ident_val_269(),
            get_ident_zp_277(),
            get_member_cflags_274_blank(),
            get_member_cflags_274_plus(),
            get_member_cflags_274_alt(),
            get_true(),
            get_member_code_270_caps(),
            get_ident_fpprec_275(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004206() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004207(), get_004210(), get_004215()))
      }
      pub(super) fn get_004218() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003619()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004222() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004221() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004222(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004220() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004221(),
        ))
      }
      pub(super) fn get_004226() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004143(),
          CoreBinaryOperator::Plus(None),
          get_ident_i_273(),
        ))
      }
      pub(super) fn get_004225() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004226(),
          CoreBinaryOperator::Plus(None),
          get_004145(),
        ))
      }
      pub(super) fn get_004227() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004224() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004225(),
          CoreBinaryOperator::Plus(None),
          get_004227(),
        ))
      }
      pub(super) fn get_004223() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004224()))
      }
      pub(super) fn get_004232() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_abs(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004231() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_log(),
          vec![get_004232()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004233() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_log(),
          vec![get_number_10_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004230() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004231(),
          CoreBinaryOperator::Div(None),
          get_004233(),
        ))
      }
      pub(super) fn get_004229() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_004230()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_exponent_279() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("exponent", 279u32)
        }))
      }
      pub(super) fn get_004239() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_number_4_0(),
        ))
      }
      pub(super) fn get_004238() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004239(),
          CoreBinaryOperator::Or(None),
          get_ident_exponent_279(),
        ))
      }
      pub(super) fn get_004236() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_exponent_279(),
          CoreBinaryOperator::LessThan(None),
          get_004238(),
        ))
      }
      pub(super) fn get_004235() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004236(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_fpprec_275(),
        ))
      }
      pub(super) fn get_004241() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_fpprec_275(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004240() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_float_sci_255(),
          vec![
            get_ident_val_269(),
            get_ident_zp_277(),
            get_member_cflags_274_blank(),
            get_member_cflags_274_plus(),
            get_member_cflags_274_alt(),
            get_member_cflags_274_alt(),
            get_member_code_270_caps(),
            get_004241(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004244() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_exponent_279(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004243() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_max(),
          vec![get_number_1_0(), get_004244()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_digits_before_pt_280() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("digits_before_pt", 280u32)
        }))
      }
      pub(super) fn get_004246() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_fpprec_275(),
          CoreBinaryOperator::Minus(None),
          get_ident_digits_before_pt_280(),
        ))
      }
      pub(super) fn get_004245() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_render_float_dec_240(),
          vec![
            get_ident_val_269(),
            get_ident_zp_277(),
            get_member_cflags_274_blank(),
            get_member_cflags_274_plus(),
            get_member_cflags_274_alt(),
            get_member_cflags_274_alt(),
            get_004246(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004242() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digits_before_pt", 280u32) },
            get_004243(),
          )],
          get_004245(),
        ))
      }
      pub(super) fn get_004234() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004235(), get_004240(), get_004242()))
      }
      pub(super) fn get_004228() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("exponent", 279u32) },
            get_004229(),
          )],
          get_004234(),
        ))
      }
      pub(super) fn get_004219() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004220(), get_004223(), get_004228()))
      }
      pub(super) fn get_004249() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_270_ctype(), get_003635()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004252() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004251() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004252(), get_000195()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004253() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_char(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004256() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004255() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004256(), get_000125()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004259() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004258() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004259(), get_number_1_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004262() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("%c expected 1-sized string got: "))
      }
      pub(super) fn get_004263() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004261() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004262(),
          CoreBinaryOperator::Plus(None),
          get_004263(),
        ))
      }
      pub(super) fn get_004260() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004261()))
      }
      pub(super) fn get_004257() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004258(),
          get_ident_val_269(),
          get_004260(),
        ))
      }
      pub(super) fn get_004266() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "%c expected number / string, got: ",
        ))
      }
      pub(super) fn get_004267() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_val_269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004265() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004266(),
          CoreBinaryOperator::Plus(None),
          get_004267(),
        ))
      }
      pub(super) fn get_004264() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004265()))
      }
      pub(super) fn get_004254() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004255(), get_004257(), get_004264()))
      }
      pub(super) fn get_004250() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004251(), get_004253(), get_004254()))
      }
      pub(super) fn get_004270() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Unknown code: "))
      }
      pub(super) fn get_004269() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004270(),
          CoreBinaryOperator::Plus(None),
          get_member_code_270_ctype(),
        ))
      }
      pub(super) fn get_004268() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004269()))
      }
      pub(super) fn get_004248() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004249(), get_004250(), get_004268()))
      }
      pub(super) fn get_004217() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004218(), get_004219(), get_004248()))
      }
      pub(super) fn get_004204() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004205(), get_004206(), get_004217()))
      }
      pub(super) fn get_004191() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004192(), get_004193(), get_004204()))
      }
      pub(super) fn get_004176() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004177(), get_004178(), get_004191()))
      }
      pub(super) fn get_004156() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004157(), get_004158(), get_004176()))
      }
      pub(super) fn get_004133() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004134(), get_004135(), get_004156()))
      }
      pub(super) fn get_004127() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004128(), get_004130(), get_004133()))
      }
      pub(super) fn get_004119() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zp", 277u32) },
            get_004120(),
          )],
          get_004127(),
        ))
      }
      pub(super) fn get_004115() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("iprec", 276u32) },
            get_004116(),
          )],
          get_004119(),
        ))
      }
      pub(super) fn get_004110() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("fpprec", 275u32) },
            get_004111(),
          )],
          get_004115(),
        ))
      }
      pub(super) fn get_004107() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("cflags", 274u32) },
            get_member_code_270_cflags(),
          )],
          get_004110(),
        ))
      }
      pub(super) fn get_004097() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("val", 269u32) },
              get_004098(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("code", 270u32) },
              get_004100(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("fw", 271u32) },
              get_004102(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("prec_or_null", 272u32) },
              get_004104(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 273u32) },
              get_004106(),
            ),
          ],
          get_004107(),
        ))
      }
      pub(super) fn get_004274() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'codes' not bound"))
      }
      pub(super) fn get_004273() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004274()))
      }
      pub(super) fn get_004275() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_004276() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_004277() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_004278() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_i_284() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 284u32)
        }))
      }
      pub(super) fn get_ident_codes_282() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("codes", 282u32)
        }))
      }
      pub(super) fn get_004282() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_codes_282()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004280() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_284(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004282(),
        ))
      }
      pub(super) fn get_ident_j_285() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 285u32)
        }))
      }
      pub(super) fn get_ident_arr_283() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 283u32)
        }))
      }
      pub(super) fn get_004287() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004285() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_285(),
          CoreBinaryOperator::LessThan(None),
          get_004287(),
        ))
      }
      pub(super) fn get_004293() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Too many values to format: "))
      }
      pub(super) fn get_004294() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004292() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004293(),
          CoreBinaryOperator::Plus(None),
          get_004294(),
        ))
      }
      pub(super) fn get_004295() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(", expected "))
      }
      pub(super) fn get_004291() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004292(),
          CoreBinaryOperator::Plus(None),
          get_004295(),
        ))
      }
      pub(super) fn get_004290() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004291(),
          CoreBinaryOperator::Plus(None),
          get_ident_j_285(),
        ))
      }
      pub(super) fn get_004289() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004290()))
      }
      pub(super) fn get_ident_v_286() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 286u32)
        }))
      }
      pub(super) fn get_004284() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004285(),
          get_004289(),
          get_ident_v_286(),
        ))
      }
      pub(super) fn get_004298() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_codes_282(),
          get_ident_i_284(),
        ))
      }
      pub(super) fn get_ident_code_287() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("code", 287u32)
        }))
      }
      pub(super) fn get_004301() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_code_287()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004300() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004301(), get_000125()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_format_codes_arr_281() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("format_codes_arr", 281u32)
        }))
      }
      pub(super) fn get_004305() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_284(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004306() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_286(),
          CoreBinaryOperator::Plus(None),
          get_ident_code_287(),
        ))
      }
      pub(super) fn get_004303() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_codes_arr_281(),
          vec![
            get_ident_codes_282(),
            get_ident_arr_283(),
            get_004305(),
            get_ident_j_285(),
            get_004306(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_member_code_287_fw() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_287(),
          get_003709(),
        ))
      }
      pub(super) fn get_004309() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_287_fw(), get_003390()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004312() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("j"))
      }
      pub(super) fn get_004314() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_285(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004313() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_004314()))
      }
      pub(super) fn get_004318() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004317() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_285(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004318(),
        ))
      }
      pub(super) fn get_004323() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Not enough values to format: "))
      }
      pub(super) fn get_004324() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004322() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004323(),
          CoreBinaryOperator::Plus(None),
          get_004324(),
        ))
      }
      pub(super) fn get_004325() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(", expected at least "))
      }
      pub(super) fn get_004321() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004322(),
          CoreBinaryOperator::Plus(None),
          get_004325(),
        ))
      }
      pub(super) fn get_004320() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004321(),
          CoreBinaryOperator::Plus(None),
          get_ident_j_285(),
        ))
      }
      pub(super) fn get_004319() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004320()))
      }
      pub(super) fn get_004326() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_283(),
          get_ident_j_285(),
        ))
      }
      pub(super) fn get_004316() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004317(), get_004319(), get_004326()))
      }
      pub(super) fn get_004315() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_004316()))
      }
      pub(super) fn get_004311() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_004312(),
              CoreObjectFieldOperator::Default(None),
              get_004313(),
            ),
            CoreObjectField::new(
              get_003709(),
              CoreObjectFieldOperator::Default(None),
              get_004315(),
            ),
          ],
        ))
      }
      pub(super) fn get_004328() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_j_285()))
      }
      pub(super) fn get_004329() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_code_287_fw()))
      }
      pub(super) fn get_004327() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_004312(),
              CoreObjectFieldOperator::Default(None),
              get_004328(),
            ),
            CoreObjectField::new(
              get_003709(),
              CoreObjectFieldOperator::Default(None),
              get_004329(),
            ),
          ],
        ))
      }
      pub(super) fn get_004308() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004309(), get_004311(), get_004327()))
      }
      pub(super) fn get_member_code_287_prec() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_287(),
          get_003712(),
        ))
      }
      pub(super) fn get_004332() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_287_prec(), get_003390()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_tmp_288() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("tmp", 288u32)
        }))
      }
      pub(super) fn get_member_tmp_288_j() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_tmp_288(), get_004312()))
      }
      pub(super) fn get_004336() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_member_tmp_288_j(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004335() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_004336()))
      }
      pub(super) fn get_004342() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004341() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_member_tmp_288_j(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004342(),
        ))
      }
      pub(super) fn get_004347() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004346() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004323(),
          CoreBinaryOperator::Plus(None),
          get_004347(),
        ))
      }
      pub(super) fn get_004345() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004346(),
          CoreBinaryOperator::Plus(None),
          get_004325(),
        ))
      }
      pub(super) fn get_004344() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004345(),
          CoreBinaryOperator::Plus(None),
          get_member_tmp_288_j(),
        ))
      }
      pub(super) fn get_004343() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004344()))
      }
      pub(super) fn get_004348() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_283(),
          get_member_tmp_288_j(),
        ))
      }
      pub(super) fn get_004340() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004341(), get_004343(), get_004348()))
      }
      pub(super) fn get_004339() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_004340()))
      }
      pub(super) fn get_004334() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_004312(),
              CoreObjectFieldOperator::Default(None),
              get_004335(),
            ),
            CoreObjectField::new(
              get_003712(),
              CoreObjectFieldOperator::Default(None),
              get_004339(),
            ),
          ],
        ))
      }
      pub(super) fn get_004350() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_tmp_288_j()))
      }
      pub(super) fn get_004351() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_member_code_287_prec()))
      }
      pub(super) fn get_004349() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_004312(),
              CoreObjectFieldOperator::Default(None),
              get_004350(),
            ),
            CoreObjectField::new(
              get_003712(),
              CoreObjectFieldOperator::Default(None),
              get_004351(),
            ),
          ],
        ))
      }
      pub(super) fn get_004331() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004332(), get_004334(), get_004349()))
      }
      pub(super) fn get_ident_tmp2_289() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("tmp2", 289u32)
        }))
      }
      pub(super) fn get_member_tmp2_289_j() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_tmp2_289(),
          get_004312(),
        ))
      }
      pub(super) fn get_ident_j2_290() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j2", 290u32)
        }))
      }
      pub(super) fn get_004359() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004357() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j2_290(),
          CoreBinaryOperator::LessThan(None),
          get_004359(),
        ))
      }
      pub(super) fn get_004360() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_283(),
          get_ident_j2_290(),
        ))
      }
      pub(super) fn get_004365() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004364() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004323(),
          CoreBinaryOperator::Plus(None),
          get_004365(),
        ))
      }
      pub(super) fn get_004366() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(", expected more than "))
      }
      pub(super) fn get_004363() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004364(),
          CoreBinaryOperator::Plus(None),
          get_004366(),
        ))
      }
      pub(super) fn get_004362() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004363(),
          CoreBinaryOperator::Plus(None),
          get_ident_j2_290(),
        ))
      }
      pub(super) fn get_004361() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004362()))
      }
      pub(super) fn get_004356() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004357(), get_004360(), get_004361()))
      }
      pub(super) fn get_member_code_287_ctype() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_287(),
          get_003715(),
        ))
      }
      pub(super) fn get_004369() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_287_ctype(), get_003651()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_format_code_268() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("format_code", 268u32)
        }))
      }
      pub(super) fn get_ident_val_291() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("val", 291u32)
        }))
      }
      pub(super) fn get_member_tmp_288_fw() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_tmp_288(), get_003709()))
      }
      pub(super) fn get_member_tmp2_289_prec() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_tmp2_289(),
          get_003712(),
        ))
      }
      pub(super) fn get_004371() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_code_268(),
          vec![
            get_ident_val_291(),
            get_ident_code_287(),
            get_member_tmp_288_fw(),
            get_member_tmp2_289_prec(),
            get_ident_j2_290(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004368() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004369(), get_003651(), get_004371()))
      }
      pub(super) fn get_member_code_287_cflags() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_287(),
          get_003706(),
        ))
      }
      pub(super) fn get_004378() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_member_code_287_cflags(),
          get_003345(),
        ))
      }
      pub(super) fn get_ident_pad_right_199() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("pad_right", 199u32)
        }))
      }
      pub(super) fn get_ident_s_292() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("s", 292u32)
        }))
      }
      pub(super) fn get_004380() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_pad_right_199(),
          vec![get_ident_s_292(), get_member_tmp_288_fw(), get_003349()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004383() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_pad_left_195(),
          vec![get_ident_s_292(), get_member_tmp_288_fw(), get_003349()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004377() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004378(), get_004380(), get_004383()))
      }
      pub(super) fn get_004386() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_287_ctype(), get_003651()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004387() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j2_290(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004385() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004386(),
          get_ident_j2_290(),
          get_004387(),
        ))
      }
      pub(super) fn get_004389() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_284(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_j3_294() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j3", 294u32)
        }))
      }
      pub(super) fn get_ident_s_padded_293() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("s_padded", 293u32)
        }))
      }
      pub(super) fn get_004391() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_286(),
          CoreBinaryOperator::Plus(None),
          get_ident_s_padded_293(),
        ))
      }
      pub(super) fn get_004388() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_codes_arr_281(),
          vec![
            get_ident_codes_282(),
            get_ident_arr_283(),
            get_004389(),
            get_ident_j3_294(),
            get_004391(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_004384() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("j3", 294u32) },
            get_004385(),
          )],
          get_004388(),
        ))
      }
      pub(super) fn get_004376() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("s_padded", 293u32) },
            get_004377(),
          )],
          get_004384(),
        ))
      }
      pub(super) fn get_004367() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("s", 292u32) },
            get_004368(),
          )],
          get_004376(),
        ))
      }
      pub(super) fn get_004355() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("val", 291u32) },
            get_004356(),
          )],
          get_004367(),
        ))
      }
      pub(super) fn get_004352() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("j2", 290u32) },
            get_member_tmp2_289_j(),
          )],
          get_004355(),
        ))
      }
      pub(super) fn get_004330() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("tmp2", 289u32) },
            get_004331(),
          )],
          get_004352(),
        ))
      }
      pub(super) fn get_004307() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("tmp", 288u32) },
            get_004308(),
          )],
          get_004330(),
        ))
      }
      pub(super) fn get_004299() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004300(), get_004303(), get_004307()))
      }
      pub(super) fn get_004297() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 287u32) },
            get_004298(),
          )],
          get_004299(),
        ))
      }
      pub(super) fn get_004279() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004280(), get_004284(), get_004297()))
      }
      pub(super) fn get_004272() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("codes", 282u32) },
              get_004273(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 283u32) },
              get_004275(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 284u32) },
              get_004276(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 285u32) },
              get_004277(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 286u32) },
              get_004278(),
            ),
          ],
          get_004279(),
        ))
      }
      pub(super) fn get_004395() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004274()))
      }
      pub(super) fn get_004396() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002745()))
      }
      pub(super) fn get_004397() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_004398() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_i_298() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 298u32)
        }))
      }
      pub(super) fn get_ident_codes_296() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("codes", 296u32)
        }))
      }
      pub(super) fn get_004402() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_codes_296()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004400() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_298(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004402(),
        ))
      }
      pub(super) fn get_ident_v_299() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 299u32)
        }))
      }
      pub(super) fn get_004406() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_codes_296(),
          get_ident_i_298(),
        ))
      }
      pub(super) fn get_ident_code_300() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("code", 300u32)
        }))
      }
      pub(super) fn get_004409() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_code_300()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004408() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_004409(), get_000125()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_format_codes_obj_295() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("format_codes_obj", 295u32)
        }))
      }
      pub(super) fn get_ident_obj_297() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("obj", 297u32)
        }))
      }
      pub(super) fn get_004414() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_298(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004415() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_299(),
          CoreBinaryOperator::Plus(None),
          get_ident_code_300(),
        ))
      }
      pub(super) fn get_004411() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_codes_obj_295(),
          vec![
            get_ident_codes_296(),
            get_ident_obj_297(),
            get_004414(),
            get_004415(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_member_code_300_mkey() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_300(),
          get_003703(),
        ))
      }
      pub(super) fn get_004418() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_300_mkey(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004421() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Mapping keys required."))
      }
      pub(super) fn get_004420() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004421()))
      }
      pub(super) fn get_004417() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004418(),
          get_004420(),
          get_member_code_300_mkey(),
        ))
      }
      pub(super) fn get_member_code_300_fw() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_300(),
          get_003709(),
        ))
      }
      pub(super) fn get_004424() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_300_fw(), get_003390()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004427() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Cannot use * field width with object.",
        ))
      }
      pub(super) fn get_004426() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004427()))
      }
      pub(super) fn get_004423() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004424(),
          get_004426(),
          get_member_code_300_fw(),
        ))
      }
      pub(super) fn get_member_code_300_prec() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_300(),
          get_003712(),
        ))
      }
      pub(super) fn get_004430() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_300_prec(), get_003390()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004433() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Cannot use * precision with object.",
        ))
      }
      pub(super) fn get_004432() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004433()))
      }
      pub(super) fn get_004429() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004430(),
          get_004432(),
          get_member_code_300_prec(),
        ))
      }
      pub(super) fn get_004438() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("objectHasAll"))
      }
      pub(super) fn get_member_std_3_objectHasAll() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_004438()))
      }
      pub(super) fn get_ident_f_301() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("f", 301u32)
        }))
      }
      pub(super) fn get_004436() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectHasAll(),
          vec![get_ident_obj_297(), get_ident_f_301()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004440() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_obj_297(),
          get_ident_f_301(),
        ))
      }
      pub(super) fn get_004443() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("No such field: "))
      }
      pub(super) fn get_004442() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004443(),
          CoreBinaryOperator::Plus(None),
          get_ident_f_301(),
        ))
      }
      pub(super) fn get_004441() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004442()))
      }
      pub(super) fn get_004435() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004436(), get_004440(), get_004441()))
      }
      pub(super) fn get_member_code_300_ctype() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_300(),
          get_003715(),
        ))
      }
      pub(super) fn get_004446() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_member_code_300_ctype(), get_003651()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_val_304() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("val", 304u32)
        }))
      }
      pub(super) fn get_ident_fw_302() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("fw", 302u32)
        }))
      }
      pub(super) fn get_ident_prec_303() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("prec", 303u32)
        }))
      }
      pub(super) fn get_004448() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_code_268(),
          vec![
            get_ident_val_304(),
            get_ident_code_300(),
            get_ident_fw_302(),
            get_ident_prec_303(),
            get_ident_f_301(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004445() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004446(), get_003651(), get_004448()))
      }
      pub(super) fn get_member_code_300_cflags() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_code_300(),
          get_003706(),
        ))
      }
      pub(super) fn get_004454() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_member_code_300_cflags(),
          get_003345(),
        ))
      }
      pub(super) fn get_ident_s_305() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("s", 305u32)
        }))
      }
      pub(super) fn get_004456() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_pad_right_199(),
          vec![get_ident_s_305(), get_ident_fw_302(), get_003349()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004458() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_pad_left_195(),
          vec![get_ident_s_305(), get_ident_fw_302(), get_003349()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004453() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004454(), get_004456(), get_004458()))
      }
      pub(super) fn get_004460() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_298(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_s_padded_306() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("s_padded", 306u32)
        }))
      }
      pub(super) fn get_004461() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_v_299(),
          CoreBinaryOperator::Plus(None),
          get_ident_s_padded_306(),
        ))
      }
      pub(super) fn get_004459() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_codes_obj_295(),
          vec![
            get_ident_codes_296(),
            get_ident_obj_297(),
            get_004460(),
            get_004461(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_004452() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("s_padded", 306u32) },
            get_004453(),
          )],
          get_004459(),
        ))
      }
      pub(super) fn get_004444() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("s", 305u32) },
            get_004445(),
          )],
          get_004452(),
        ))
      }
      pub(super) fn get_004434() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("val", 304u32) },
            get_004435(),
          )],
          get_004444(),
        ))
      }
      pub(super) fn get_004428() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("prec", 303u32) },
            get_004429(),
          )],
          get_004434(),
        ))
      }
      pub(super) fn get_004422() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("fw", 302u32) },
            get_004423(),
          )],
          get_004428(),
        ))
      }
      pub(super) fn get_004416() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("f", 301u32) },
            get_004417(),
          )],
          get_004422(),
        ))
      }
      pub(super) fn get_004407() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004408(), get_004411(), get_004416()))
      }
      pub(super) fn get_004405() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 300u32) },
            get_004406(),
          )],
          get_004407(),
        ))
      }
      pub(super) fn get_004399() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004400(),
          get_ident_v_299(),
          get_004405(),
        ))
      }
      pub(super) fn get_004394() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("codes", 296u32) },
              get_004395(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("obj", 297u32) },
              get_004396(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 298u32) },
              get_004397(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 299u32) },
              get_004398(),
            ),
          ],
          get_004399(),
        ))
      }
      pub(super) fn get_ident_vals_134() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("vals", 134u32)
        }))
      }
      pub(super) fn get_004464() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_vals_134()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_codes_188() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("codes", 188u32)
        }))
      }
      pub(super) fn get_004466() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_codes_arr_281(),
          vec![
            get_ident_codes_188(),
            get_ident_vals_134(),
            get_number_0_0(),
            get_number_0_0(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004469() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_vals_134()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004470() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_codes_obj_295(),
          vec![
            get_ident_codes_188(),
            get_ident_vals_134(),
            get_number_0_0(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004472() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_vals_134()]))
      }
      pub(super) fn get_004471() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_format_codes_arr_281(),
          vec![
            get_ident_codes_188(),
            get_004472(),
            get_number_0_0(),
            get_number_0_0(),
            get_000548(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004468() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004469(), get_004470(), get_004471()))
      }
      pub(super) fn get_004463() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004464(), get_004466(), get_004468()))
      }
      pub(super) fn get_004393() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("format_codes_obj", 295u32) },
            get_004394(),
          )],
          get_004463(),
        ))
      }
      pub(super) fn get_004271() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("format_codes_arr", 281u32) },
            get_004272(),
          )],
          get_004393(),
        ))
      }
      pub(super) fn get_004096() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("format_code", 268u32) },
            get_004097(),
          )],
          get_004271(),
        ))
      }
      pub(super) fn get_004040() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("render_float_sci", 255u32) },
            get_004041(),
          )],
          get_004096(),
        ))
      }
      pub(super) fn get_003973() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("render_float_dec", 240u32) },
            get_003974(),
          )],
          get_004040(),
        ))
      }
      pub(super) fn get_003950() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("strip_trailing_zero", 235u32) },
            get_003951(),
          )],
          get_003973(),
        ))
      }
      pub(super) fn get_003869() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("render_hex", 218u32) },
            get_003870(),
          )],
          get_003950(),
        ))
      }
      pub(super) fn get_003806() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("render_int", 203u32) },
            get_003807(),
          )],
          get_003869(),
        ))
      }
      pub(super) fn get_003794() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("pad_right", 199u32) },
            get_003795(),
          )],
          get_003806(),
        ))
      }
      pub(super) fn get_003781() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("pad_left", 195u32) },
            get_003782(),
          )],
          get_003794(),
        ))
      }
      pub(super) fn get_003760() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("padding", 189u32) },
            get_003761(),
          )],
          get_003781(),
        ))
      }
      pub(super) fn get_003756() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("codes", 188u32) },
            get_003757(),
          )],
          get_003760(),
        ))
      }
      pub(super) fn get_003721() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("parse_codes", 181u32) },
            get_003722(),
          )],
          get_003756(),
        ))
      }
      pub(super) fn get_003661() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("parse_code", 172u32) },
            get_003662(),
          )],
          get_003721(),
        ))
      }
      pub(super) fn get_003535() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("parse_conv_type", 168u32) },
            get_003536(),
          )],
          get_003661(),
        ))
      }
      pub(super) fn get_003512() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("try_parse_length_modifier", 164u32) },
            get_003513(),
          )],
          get_003535(),
        ))
      }
      pub(super) fn get_003491() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("try_parse_precision", 160u32) },
            get_003492(),
          )],
          get_003512(),
        ))
      }
      pub(super) fn get_003378() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("try_parse_field_width", 152u32) },
            get_003379(),
          )],
          get_003491(),
        ))
      }
      pub(super) fn get_003303() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("try_parse_cflags", 144u32) },
            get_003304(),
          )],
          get_003378(),
        ))
      }
      pub(super) fn get_003251() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("try_parse_mapping_key", 135u32) },
            get_003252(),
          )],
          get_003303(),
        ))
      }
      pub(super) fn get_003247() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 133u32) },
              get_003248(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("vals", 134u32) },
              get_003249(),
            ),
          ],
          get_003251(),
        ))
      }
      pub(super) fn get_003184() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_003185(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_003187(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_003229(),
            ),
          ],
          get_003247(),
        ))
      }
      pub(super) fn get_004473() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("foldr"))
      }
      pub(super) fn get_004476() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_004475() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_004476(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_004478() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_004479() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_004483() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004482() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_004483(),
        ))
      }
      pub(super) fn get_004481() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004482(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_004485() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004487() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004489() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004492() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_004493() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_004495() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004498() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004500() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004499() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004500(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004502() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004504() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004503() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004504(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004505() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_004501() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004502(), get_004503(), get_004505()))
      }
      pub(super) fn get_004497() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004498(), get_004499(), get_004501()))
      }
      pub(super) fn get_004509() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004508() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004509(),
        ))
      }
      pub(super) fn get_004507() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004508(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004511() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004510() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_004511(),
        ))
      }
      pub(super) fn get_004514() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_004513() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_004514()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004512() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004513()))
      }
      pub(super) fn get_004506() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004507(), get_004510(), get_004512()))
      }
      pub(super) fn get_004496() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_004497(),
          )],
          get_004506(),
        ))
      }
      pub(super) fn get_004494() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_004495(),
          )],
          get_004496(),
        ))
      }
      pub(super) fn get_004491() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_004492(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_004493(),
            ),
          ],
          get_004494(),
        ))
      }
      pub(super) fn get_004516() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004515() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_004516(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004490() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_004491(),
          )],
          get_004515(),
        ))
      }
      pub(super) fn get_004488() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_004489(),
          )],
          get_004490(),
        ))
      }
      pub(super) fn get_004486() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_004487(),
          )],
          get_004488(),
        ))
      }
      pub(super) fn get_004484() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_004485(),
          )],
          get_004486(),
        ))
      }
      pub(super) fn get_004518() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004517() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004518()))
      }
      pub(super) fn get_004480() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004481(), get_004484(), get_004517()))
      }
      pub(super) fn get_004477() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_004478(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_004479(),
            ),
          ],
          get_004480(),
        ))
      }
      pub(super) fn get_004521() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004522() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004520() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004521(),
          )],
          get_004522(),
        ))
      }
      pub(super) fn get_004524() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004523() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004524(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004526() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004528() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_004530() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004532() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_004534() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_004536() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_004535() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_004536()]))
      }
      pub(super) fn get_004533() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004534(),
          )],
          get_004535(),
        ))
      }
      pub(super) fn get_004531() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_004532(),
          )],
          get_004533(),
        ))
      }
      pub(super) fn get_004529() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_004530(), get_004531()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004527() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_004528(), get_004529()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004525() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_004526(),
          )],
          get_004527(),
        ))
      }
      pub(super) fn get_004519() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_004520(),
          get_004523(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_004525(),
        ))
      }
      pub(super) fn get_004538() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_004539() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_004541() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'init' not bound"))
      }
      pub(super) fn get_004540() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004541()))
      }
      pub(super) fn get_004544() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_004545() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_004546() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002964()))
      }
      pub(super) fn get_004548() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'idx' not bound"))
      }
      pub(super) fn get_004547() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004548()))
      }
      pub(super) fn get_ident_idx_314() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("idx", 314u32)
        }))
      }
      pub(super) fn get_004550() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_idx_314(),
          CoreBinaryOperator::LessThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_running_313() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("running", 313u32)
        }))
      }
      pub(super) fn get_ident_aux_310() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 310u32)
        }))
      }
      pub(super) fn get_ident_func_311() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 311u32)
        }))
      }
      pub(super) fn get_ident_arr_312() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 312u32)
        }))
      }
      pub(super) fn get_004558() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_312(),
          get_ident_idx_314(),
        ))
      }
      pub(super) fn get_004557() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_func_311(),
          vec![get_004558(), get_ident_running_313()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004559() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_idx_314(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004553() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_310(),
          vec![
            get_ident_func_311(),
            get_ident_arr_312(),
            get_004557(),
            get_004559(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_004549() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004550(),
          get_ident_running_313(),
          get_004553(),
        ))
      }
      pub(super) fn get_004543() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 311u32) },
              get_004544(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 312u32) },
              get_004545(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("running", 313u32) },
              get_004546(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("idx", 314u32) },
              get_004547(),
            ),
          ],
          get_004549(),
        ))
      }
      pub(super) fn get_ident_func_307() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 307u32)
        }))
      }
      pub(super) fn get_ident_arr_308() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 308u32)
        }))
      }
      pub(super) fn get_ident_init_309() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("init", 309u32)
        }))
      }
      pub(super) fn get_004565() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_308()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004564() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004565(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004560() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_310(),
          vec![
            get_ident_func_307(),
            get_ident_arr_308(),
            get_ident_init_309(),
            get_004564(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004542() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 310u32) },
            get_004543(),
          )],
          get_004560(),
        ))
      }
      pub(super) fn get_004537() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 307u32) },
              get_004538(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 308u32) },
              get_004539(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("init", 309u32) },
              get_004540(),
            ),
          ],
          get_004542(),
        ))
      }
      pub(super) fn get_004474() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_004475(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_004477(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_004519(),
            ),
          ],
          get_004537(),
        ))
      }
      pub(super) fn get_004568() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_004567() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_004568(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_004570() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_004571() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_004575() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004574() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_004575(),
        ))
      }
      pub(super) fn get_004573() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004574(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_004577() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004579() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004581() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004584() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_004585() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_004587() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004590() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004592() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004591() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004592(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004594() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004596() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004595() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004596(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004597() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_004593() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004594(), get_004595(), get_004597()))
      }
      pub(super) fn get_004589() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004590(), get_004591(), get_004593()))
      }
      pub(super) fn get_004601() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004600() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004601(),
        ))
      }
      pub(super) fn get_004599() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004600(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004603() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004602() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_004603(),
        ))
      }
      pub(super) fn get_004606() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_004605() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_004606()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004604() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004605()))
      }
      pub(super) fn get_004598() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004599(), get_004602(), get_004604()))
      }
      pub(super) fn get_004588() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_004589(),
          )],
          get_004598(),
        ))
      }
      pub(super) fn get_004586() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_004587(),
          )],
          get_004588(),
        ))
      }
      pub(super) fn get_004583() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_004584(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_004585(),
            ),
          ],
          get_004586(),
        ))
      }
      pub(super) fn get_004608() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004607() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_004608(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004582() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_004583(),
          )],
          get_004607(),
        ))
      }
      pub(super) fn get_004580() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_004581(),
          )],
          get_004582(),
        ))
      }
      pub(super) fn get_004578() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_004579(),
          )],
          get_004580(),
        ))
      }
      pub(super) fn get_004576() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_004577(),
          )],
          get_004578(),
        ))
      }
      pub(super) fn get_004610() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004609() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004610()))
      }
      pub(super) fn get_004572() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004573(), get_004576(), get_004609()))
      }
      pub(super) fn get_004569() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_004570(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_004571(),
            ),
          ],
          get_004572(),
        ))
      }
      pub(super) fn get_004613() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004614() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004612() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004613(),
          )],
          get_004614(),
        ))
      }
      pub(super) fn get_004616() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004615() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004616(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004618() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004620() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_004622() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004624() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_004626() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_004628() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_004627() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_004628()]))
      }
      pub(super) fn get_004625() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004626(),
          )],
          get_004627(),
        ))
      }
      pub(super) fn get_004623() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_004624(),
          )],
          get_004625(),
        ))
      }
      pub(super) fn get_004621() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_004622(), get_004623()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004619() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_004620(), get_004621()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004617() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_004618(),
          )],
          get_004619(),
        ))
      }
      pub(super) fn get_004611() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_004612(),
          get_004615(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_004617(),
        ))
      }
      pub(super) fn get_004630() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_004631() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_004632() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004541()))
      }
      pub(super) fn get_004635() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002556()))
      }
      pub(super) fn get_004636() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_004637() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_002964()))
      }
      pub(super) fn get_004638() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004548()))
      }
      pub(super) fn get_ident_idx_322() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("idx", 322u32)
        }))
      }
      pub(super) fn get_ident_arr_320() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 320u32)
        }))
      }
      pub(super) fn get_004642() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_320()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004640() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_idx_322(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004642(),
        ))
      }
      pub(super) fn get_ident_running_321() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("running", 321u32)
        }))
      }
      pub(super) fn get_ident_aux_318() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 318u32)
        }))
      }
      pub(super) fn get_ident_func_319() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 319u32)
        }))
      }
      pub(super) fn get_004649() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_320(),
          get_ident_idx_322(),
        ))
      }
      pub(super) fn get_004648() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_func_319(),
          vec![get_ident_running_321(), get_004649()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004650() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_idx_322(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004645() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_318(),
          vec![
            get_ident_func_319(),
            get_ident_arr_320(),
            get_004648(),
            get_004650(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_004639() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004640(),
          get_ident_running_321(),
          get_004645(),
        ))
      }
      pub(super) fn get_004634() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 319u32) },
              get_004635(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 320u32) },
              get_004636(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("running", 321u32) },
              get_004637(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("idx", 322u32) },
              get_004638(),
            ),
          ],
          get_004639(),
        ))
      }
      pub(super) fn get_ident_func_315() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("func", 315u32)
        }))
      }
      pub(super) fn get_ident_arr_316() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 316u32)
        }))
      }
      pub(super) fn get_ident_init_317() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("init", 317u32)
        }))
      }
      pub(super) fn get_004651() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_318(),
          vec![
            get_ident_func_315(),
            get_ident_arr_316(),
            get_ident_init_317(),
            get_number_0_0(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004633() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 318u32) },
            get_004634(),
          )],
          get_004651(),
        ))
      }
      pub(super) fn get_004629() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("func", 315u32) },
              get_004630(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 316u32) },
              get_004631(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("init", 317u32) },
              get_004632(),
            ),
          ],
          get_004633(),
        ))
      }
      pub(super) fn get_004566() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_004567(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_004569(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_004611(),
            ),
          ],
          get_004629(),
        ))
      }
      pub(super) fn get_004655() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("filterMap"))
      }
      pub(super) fn get_004658() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_004657() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_004658(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_004660() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_004661() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_004665() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004664() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_004665(),
        ))
      }
      pub(super) fn get_004663() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004664(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_004667() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004669() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004671() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004674() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_004675() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_004677() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004680() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004682() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004681() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004682(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004684() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004686() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004685() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004686(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004687() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_004683() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004684(), get_004685(), get_004687()))
      }
      pub(super) fn get_004679() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004680(), get_004681(), get_004683()))
      }
      pub(super) fn get_004691() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004690() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004691(),
        ))
      }
      pub(super) fn get_004689() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004690(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004693() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004692() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_004693(),
        ))
      }
      pub(super) fn get_004696() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_004695() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_004696()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004694() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004695()))
      }
      pub(super) fn get_004688() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004689(), get_004692(), get_004694()))
      }
      pub(super) fn get_004678() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_004679(),
          )],
          get_004688(),
        ))
      }
      pub(super) fn get_004676() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_004677(),
          )],
          get_004678(),
        ))
      }
      pub(super) fn get_004673() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_004674(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_004675(),
            ),
          ],
          get_004676(),
        ))
      }
      pub(super) fn get_004698() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004697() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_004698(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004672() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_004673(),
          )],
          get_004697(),
        ))
      }
      pub(super) fn get_004670() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_004671(),
          )],
          get_004672(),
        ))
      }
      pub(super) fn get_004668() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_004669(),
          )],
          get_004670(),
        ))
      }
      pub(super) fn get_004666() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_004667(),
          )],
          get_004668(),
        ))
      }
      pub(super) fn get_004700() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004699() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004700()))
      }
      pub(super) fn get_004662() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004663(), get_004666(), get_004699()))
      }
      pub(super) fn get_004659() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_004660(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_004661(),
            ),
          ],
          get_004662(),
        ))
      }
      pub(super) fn get_004703() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004704() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004702() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004703(),
          )],
          get_004704(),
        ))
      }
      pub(super) fn get_004706() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004705() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004706(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004708() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004710() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_004712() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004714() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_004716() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_004718() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_004717() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_004718()]))
      }
      pub(super) fn get_004715() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004716(),
          )],
          get_004717(),
        ))
      }
      pub(super) fn get_004713() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_004714(),
          )],
          get_004715(),
        ))
      }
      pub(super) fn get_004711() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_004712(), get_004713()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004709() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_004710(), get_004711()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004707() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_004708(),
          )],
          get_004709(),
        ))
      }
      pub(super) fn get_004701() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_004702(),
          get_004705(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_004707(),
        ))
      }
      pub(super) fn get_004721() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Parameter 'filter_func' not bound",
        ))
      }
      pub(super) fn get_004720() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004721()))
      }
      pub(super) fn get_004723() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'map_func' not bound"))
      }
      pub(super) fn get_004722() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004723()))
      }
      pub(super) fn get_004724() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_filter_func_323() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("filter_func", 323u32)
        }))
      }
      pub(super) fn get_004727() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_filter_func_323()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004726() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004727(),
        ))
      }
      pub(super) fn get_004731() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.filterMap first param must be function, got ",
        ))
      }
      pub(super) fn get_004732() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_filter_func_323()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004730() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004731(),
          CoreBinaryOperator::Plus(None),
          get_004732(),
        ))
      }
      pub(super) fn get_004729() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004730()))
      }
      pub(super) fn get_ident_map_func_324() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("map_func", 324u32)
        }))
      }
      pub(super) fn get_004735() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_map_func_324()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004734() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004735(),
        ))
      }
      pub(super) fn get_004739() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.filterMap second param must be function, got ",
        ))
      }
      pub(super) fn get_004740() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_map_func_324()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004738() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004739(),
          CoreBinaryOperator::Plus(None),
          get_004740(),
        ))
      }
      pub(super) fn get_004737() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004738()))
      }
      pub(super) fn get_ident_arr_325() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 325u32)
        }))
      }
      pub(super) fn get_004743() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_325()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004742() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004743(),
        ))
      }
      pub(super) fn get_004747() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.filterMap third param must be array, got ",
        ))
      }
      pub(super) fn get_004748() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_arr_325()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004746() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004747(),
          CoreBinaryOperator::Plus(None),
          get_004748(),
        ))
      }
      pub(super) fn get_004745() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004746()))
      }
      pub(super) fn get_004750() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_filter(),
          vec![get_ident_filter_func_323(), get_ident_arr_325()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004749() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_map(),
          vec![get_ident_map_func_324(), get_004750()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004741() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004742(), get_004745(), get_004749()))
      }
      pub(super) fn get_004733() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004734(), get_004737(), get_004741()))
      }
      pub(super) fn get_004725() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004726(), get_004729(), get_004733()))
      }
      pub(super) fn get_004719() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("filter_func", 323u32) },
              get_004720(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("map_func", 324u32) },
              get_004722(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 325u32) },
              get_004724(),
            ),
          ],
          get_004725(),
        ))
      }
      pub(super) fn get_004656() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_004657(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_004659(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_004701(),
            ),
          ],
          get_004719(),
        ))
      }
      pub(super) fn get_004751() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("assertEqual"))
      }
      pub(super) fn get_004754() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_004753() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_004754(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_004756() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_004757() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_004761() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004760() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_004761(),
        ))
      }
      pub(super) fn get_004759() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004760(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_004763() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004765() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004767() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004770() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_004771() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_004773() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004776() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004778() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004777() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004778(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004780() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004782() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004781() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004782(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004783() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_004779() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004780(), get_004781(), get_004783()))
      }
      pub(super) fn get_004775() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004776(), get_004777(), get_004779()))
      }
      pub(super) fn get_004787() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004786() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004787(),
        ))
      }
      pub(super) fn get_004785() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004786(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004789() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004788() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_004789(),
        ))
      }
      pub(super) fn get_004792() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_004791() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_004792()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004790() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004791()))
      }
      pub(super) fn get_004784() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004785(), get_004788(), get_004790()))
      }
      pub(super) fn get_004774() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_004775(),
          )],
          get_004784(),
        ))
      }
      pub(super) fn get_004772() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_004773(),
          )],
          get_004774(),
        ))
      }
      pub(super) fn get_004769() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_004770(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_004771(),
            ),
          ],
          get_004772(),
        ))
      }
      pub(super) fn get_004794() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004793() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_004794(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004768() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_004769(),
          )],
          get_004793(),
        ))
      }
      pub(super) fn get_004766() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_004767(),
          )],
          get_004768(),
        ))
      }
      pub(super) fn get_004764() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_004765(),
          )],
          get_004766(),
        ))
      }
      pub(super) fn get_004762() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_004763(),
          )],
          get_004764(),
        ))
      }
      pub(super) fn get_004796() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004795() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004796()))
      }
      pub(super) fn get_004758() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004759(), get_004762(), get_004795()))
      }
      pub(super) fn get_004755() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_004756(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_004757(),
            ),
          ],
          get_004758(),
        ))
      }
      pub(super) fn get_004799() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004800() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004798() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004799(),
          )],
          get_004800(),
        ))
      }
      pub(super) fn get_004802() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004801() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004802(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004804() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004806() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_004808() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004810() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_004812() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_004814() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_004813() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_004814()]))
      }
      pub(super) fn get_004811() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004812(),
          )],
          get_004813(),
        ))
      }
      pub(super) fn get_004809() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_004810(),
          )],
          get_004811(),
        ))
      }
      pub(super) fn get_004807() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_004808(), get_004809()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004805() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_004806(), get_004807()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004803() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_004804(),
          )],
          get_004805(),
        ))
      }
      pub(super) fn get_004797() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_004798(),
          get_004801(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_004803(),
        ))
      }
      pub(super) fn get_004816() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_004817() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_326() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 326u32)
        }))
      }
      pub(super) fn get_ident_b_327() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 327u32)
        }))
      }
      pub(super) fn get_004819() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_a_326(), get_ident_b_327()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004826() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Assertion failed. "))
      }
      pub(super) fn get_004825() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004826(),
          CoreBinaryOperator::Plus(None),
          get_ident_a_326(),
        ))
      }
      pub(super) fn get_004827() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(" != "))
      }
      pub(super) fn get_004824() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004825(),
          CoreBinaryOperator::Plus(None),
          get_004827(),
        ))
      }
      pub(super) fn get_004823() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004824(),
          CoreBinaryOperator::Plus(None),
          get_ident_b_327(),
        ))
      }
      pub(super) fn get_004822() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004823()))
      }
      pub(super) fn get_004818() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004819(), get_true(), get_004822()))
      }
      pub(super) fn get_004815() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 326u32) },
              get_004816(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 327u32) },
              get_004817(),
            ),
          ],
          get_004818(),
        ))
      }
      pub(super) fn get_004752() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_004753(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_004755(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_004797(),
            ),
          ],
          get_004815(),
        ))
      }
      pub(super) fn get_004830() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_004829() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_004830(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_004832() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_004833() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_004837() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004836() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_004837(),
        ))
      }
      pub(super) fn get_004835() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004836(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_004839() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004841() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004843() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004846() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_004847() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_004849() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004852() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004854() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004853() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004854(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004856() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004858() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004857() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004858(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004859() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_004855() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004856(), get_004857(), get_004859()))
      }
      pub(super) fn get_004851() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004852(), get_004853(), get_004855()))
      }
      pub(super) fn get_004863() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004862() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004863(),
        ))
      }
      pub(super) fn get_004861() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004862(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004865() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004864() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_004865(),
        ))
      }
      pub(super) fn get_004868() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_004867() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_004868()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004866() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004867()))
      }
      pub(super) fn get_004860() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004861(), get_004864(), get_004866()))
      }
      pub(super) fn get_004850() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_004851(),
          )],
          get_004860(),
        ))
      }
      pub(super) fn get_004848() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_004849(),
          )],
          get_004850(),
        ))
      }
      pub(super) fn get_004845() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_004846(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_004847(),
            ),
          ],
          get_004848(),
        ))
      }
      pub(super) fn get_004870() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004869() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_004870(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004844() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_004845(),
          )],
          get_004869(),
        ))
      }
      pub(super) fn get_004842() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_004843(),
          )],
          get_004844(),
        ))
      }
      pub(super) fn get_004840() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_004841(),
          )],
          get_004842(),
        ))
      }
      pub(super) fn get_004838() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_004839(),
          )],
          get_004840(),
        ))
      }
      pub(super) fn get_004872() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004871() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004872()))
      }
      pub(super) fn get_004834() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004835(), get_004838(), get_004871()))
      }
      pub(super) fn get_004831() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_004832(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_004833(),
            ),
          ],
          get_004834(),
        ))
      }
      pub(super) fn get_004875() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004876() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004874() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004875(),
          )],
          get_004876(),
        ))
      }
      pub(super) fn get_004878() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004877() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004878(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004880() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004882() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_004884() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004886() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_004888() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_004890() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_004889() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_004890()]))
      }
      pub(super) fn get_004887() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004888(),
          )],
          get_004889(),
        ))
      }
      pub(super) fn get_004885() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_004886(),
          )],
          get_004887(),
        ))
      }
      pub(super) fn get_004883() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_004884(), get_004885()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004881() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_004882(), get_004883()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004879() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_004880(),
          )],
          get_004881(),
        ))
      }
      pub(super) fn get_004873() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_004874(),
          get_004877(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_004879(),
        ))
      }
      pub(super) fn get_004892() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003831()))
      }
      pub(super) fn get_ident_n_328() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n", 328u32)
        }))
      }
      pub(super) fn get_004895() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_n_328()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004894() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004895(),
        ))
      }
      pub(super) fn get_004899() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("std.abs expected number, got "))
      }
      pub(super) fn get_004900() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_n_328()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004898() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004899(),
          CoreBinaryOperator::Plus(None),
          get_004900(),
        ))
      }
      pub(super) fn get_004897() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004898()))
      }
      pub(super) fn get_004902() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n_328(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004903() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_ident_n_328(),
        ))
      }
      pub(super) fn get_004901() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004902(),
          get_ident_n_328(),
          get_004903(),
        ))
      }
      pub(super) fn get_004893() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004894(), get_004897(), get_004901()))
      }
      pub(super) fn get_004891() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("n", 328u32) },
            get_004892(),
          )],
          get_004893(),
        ))
      }
      pub(super) fn get_004828() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_004829(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_004831(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_004873(),
            ),
          ],
          get_004891(),
        ))
      }
      pub(super) fn get_004904() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("sign"))
      }
      pub(super) fn get_004907() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_004906() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_004907(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_004909() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_004910() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_004914() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004913() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_004914(),
        ))
      }
      pub(super) fn get_004912() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004913(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_004916() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004918() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004920() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004923() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_004924() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_004926() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004929() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004931() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_004930() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004931(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004933() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004935() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_004934() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004935(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_004936() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_004932() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004933(), get_004934(), get_004936()))
      }
      pub(super) fn get_004928() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004929(), get_004930(), get_004932()))
      }
      pub(super) fn get_004940() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004939() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_004940(),
        ))
      }
      pub(super) fn get_004938() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004939(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004942() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_004941() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_004942(),
        ))
      }
      pub(super) fn get_004945() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_004944() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_004945()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004943() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004944()))
      }
      pub(super) fn get_004937() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004938(), get_004941(), get_004943()))
      }
      pub(super) fn get_004927() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_004928(),
          )],
          get_004937(),
        ))
      }
      pub(super) fn get_004925() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_004926(),
          )],
          get_004927(),
        ))
      }
      pub(super) fn get_004922() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_004923(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_004924(),
            ),
          ],
          get_004925(),
        ))
      }
      pub(super) fn get_004947() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004946() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_004947(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004921() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_004922(),
          )],
          get_004946(),
        ))
      }
      pub(super) fn get_004919() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_004920(),
          )],
          get_004921(),
        ))
      }
      pub(super) fn get_004917() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_004918(),
          )],
          get_004919(),
        ))
      }
      pub(super) fn get_004915() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_004916(),
          )],
          get_004917(),
        ))
      }
      pub(super) fn get_004949() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004948() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004949()))
      }
      pub(super) fn get_004911() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004912(), get_004915(), get_004948()))
      }
      pub(super) fn get_004908() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_004909(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_004910(),
            ),
          ],
          get_004911(),
        ))
      }
      pub(super) fn get_004952() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004953() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004951() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004952(),
          )],
          get_004953(),
        ))
      }
      pub(super) fn get_004955() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004954() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004955(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_004957() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004959() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_004961() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004963() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_004965() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_004967() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_004966() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_004967()]))
      }
      pub(super) fn get_004964() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_004965(),
          )],
          get_004966(),
        ))
      }
      pub(super) fn get_004962() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_004963(),
          )],
          get_004964(),
        ))
      }
      pub(super) fn get_004960() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_004961(), get_004962()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004958() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_004959(), get_004960()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004956() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_004957(),
          )],
          get_004958(),
        ))
      }
      pub(super) fn get_004950() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_004951(),
          get_004954(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_004956(),
        ))
      }
      pub(super) fn get_004969() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003831()))
      }
      pub(super) fn get_ident_n_329() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n", 329u32)
        }))
      }
      pub(super) fn get_004972() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_n_329()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004971() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_004972(),
        ))
      }
      pub(super) fn get_004976() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("std.sign expected number, got "))
      }
      pub(super) fn get_004977() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_n_329()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004975() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004976(),
          CoreBinaryOperator::Plus(None),
          get_004977(),
        ))
      }
      pub(super) fn get_004974() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_004975()))
      }
      pub(super) fn get_004979() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n_329(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004981() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_n_329(),
          CoreBinaryOperator::LessThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004982() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_004980() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004981(),
          get_004982(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_004978() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_004979(),
          get_number_1_0(),
          get_004980(),
        ))
      }
      pub(super) fn get_004970() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004971(), get_004974(), get_004978()))
      }
      pub(super) fn get_004968() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("n", 329u32) },
            get_004969(),
          )],
          get_004970(),
        ))
      }
      pub(super) fn get_004905() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_004906(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_004908(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_004950(),
            ),
          ],
          get_004968(),
        ))
      }
      pub(super) fn get_004985() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_004984() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_004985(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_004987() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_004988() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_004992() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_004991() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_004992(),
        ))
      }
      pub(super) fn get_004990() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_004991(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_004994() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004996() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004998() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005001() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005002() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005004() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005007() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005009() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005008() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005009(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005011() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005013() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005012() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005013(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005014() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005010() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005011(), get_005012(), get_005014()))
      }
      pub(super) fn get_005006() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005007(), get_005008(), get_005010()))
      }
      pub(super) fn get_005018() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005017() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005018(),
        ))
      }
      pub(super) fn get_005016() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005017(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005020() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005019() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005020(),
        ))
      }
      pub(super) fn get_005023() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005022() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005023()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005021() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005022()))
      }
      pub(super) fn get_005015() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005016(), get_005019(), get_005021()))
      }
      pub(super) fn get_005005() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005006(),
          )],
          get_005015(),
        ))
      }
      pub(super) fn get_005003() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005004(),
          )],
          get_005005(),
        ))
      }
      pub(super) fn get_005000() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005001(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005002(),
            ),
          ],
          get_005003(),
        ))
      }
      pub(super) fn get_005025() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005024() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005025(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_004999() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005000(),
          )],
          get_005024(),
        ))
      }
      pub(super) fn get_004997() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_004998(),
          )],
          get_004999(),
        ))
      }
      pub(super) fn get_004995() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_004996(),
          )],
          get_004997(),
        ))
      }
      pub(super) fn get_004993() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_004994(),
          )],
          get_004995(),
        ))
      }
      pub(super) fn get_005027() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005026() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005027()))
      }
      pub(super) fn get_004989() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_004990(), get_004993(), get_005026()))
      }
      pub(super) fn get_004986() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_004987(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_004988(),
            ),
          ],
          get_004989(),
        ))
      }
      pub(super) fn get_005030() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005031() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005029() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005030(),
          )],
          get_005031(),
        ))
      }
      pub(super) fn get_005033() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005032() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005033(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005035() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005037() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005039() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005041() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005043() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005045() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005044() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005045()]))
      }
      pub(super) fn get_005042() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005043(),
          )],
          get_005044(),
        ))
      }
      pub(super) fn get_005040() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005041(),
          )],
          get_005042(),
        ))
      }
      pub(super) fn get_005038() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005039(), get_005040()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005036() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005037(), get_005038()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005034() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005035(),
          )],
          get_005036(),
        ))
      }
      pub(super) fn get_005028() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005029(),
          get_005032(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005034(),
        ))
      }
      pub(super) fn get_005047() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_005048() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_330() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 330u32)
        }))
      }
      pub(super) fn get_005051() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_a_330()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005050() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_005051(),
        ))
      }
      pub(super) fn get_005055() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.max first param expected number, got ",
        ))
      }
      pub(super) fn get_005056() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_a_330()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005054() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005055(),
          CoreBinaryOperator::Plus(None),
          get_005056(),
        ))
      }
      pub(super) fn get_005053() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005054()))
      }
      pub(super) fn get_ident_b_331() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 331u32)
        }))
      }
      pub(super) fn get_005059() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_b_331()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005058() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_005059(),
        ))
      }
      pub(super) fn get_005063() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "std.max second param expected number, got ",
        ))
      }
      pub(super) fn get_005064() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_b_331()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005062() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005063(),
          CoreBinaryOperator::Plus(None),
          get_005064(),
        ))
      }
      pub(super) fn get_005061() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005062()))
      }
      pub(super) fn get_005066() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_a_330(),
          CoreBinaryOperator::GreaterThan(None),
          get_ident_b_331(),
        ))
      }
      pub(super) fn get_005065() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_005066(),
          get_ident_a_330(),
          get_ident_b_331(),
        ))
      }
      pub(super) fn get_005057() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005058(), get_005061(), get_005065()))
      }
      pub(super) fn get_005049() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005050(), get_005053(), get_005057()))
      }
      pub(super) fn get_005046() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 330u32) },
              get_005047(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 331u32) },
              get_005048(),
            ),
          ],
          get_005049(),
        ))
      }
      pub(super) fn get_004983() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_004984(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_004986(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005028(),
            ),
          ],
          get_005046(),
        ))
      }
      pub(super) fn get_005069() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005068() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005069(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005071() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005072() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005076() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005075() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005076(),
        ))
      }
      pub(super) fn get_005074() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005075(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005078() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005080() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005082() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005085() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005086() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005088() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005091() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005093() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005092() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005093(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005095() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005097() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005096() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005097(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005098() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005094() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005095(), get_005096(), get_005098()))
      }
      pub(super) fn get_005090() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005091(), get_005092(), get_005094()))
      }
      pub(super) fn get_005102() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005101() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005102(),
        ))
      }
      pub(super) fn get_005100() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005101(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005104() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005103() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005104(),
        ))
      }
      pub(super) fn get_005107() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005106() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005107()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005105() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005106()))
      }
      pub(super) fn get_005099() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005100(), get_005103(), get_005105()))
      }
      pub(super) fn get_005089() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005090(),
          )],
          get_005099(),
        ))
      }
      pub(super) fn get_005087() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005088(),
          )],
          get_005089(),
        ))
      }
      pub(super) fn get_005084() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005085(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005086(),
            ),
          ],
          get_005087(),
        ))
      }
      pub(super) fn get_005109() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005108() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005109(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005083() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005084(),
          )],
          get_005108(),
        ))
      }
      pub(super) fn get_005081() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005082(),
          )],
          get_005083(),
        ))
      }
      pub(super) fn get_005079() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005080(),
          )],
          get_005081(),
        ))
      }
      pub(super) fn get_005077() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005078(),
          )],
          get_005079(),
        ))
      }
      pub(super) fn get_005111() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005110() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005111()))
      }
      pub(super) fn get_005073() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005074(), get_005077(), get_005110()))
      }
      pub(super) fn get_005070() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005071(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005072(),
            ),
          ],
          get_005073(),
        ))
      }
      pub(super) fn get_005114() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005115() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005113() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005114(),
          )],
          get_005115(),
        ))
      }
      pub(super) fn get_005117() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005116() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005117(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005119() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005121() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005123() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005125() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005127() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005129() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005128() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005129()]))
      }
      pub(super) fn get_005126() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005127(),
          )],
          get_005128(),
        ))
      }
      pub(super) fn get_005124() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005125(),
          )],
          get_005126(),
        ))
      }
      pub(super) fn get_005122() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005123(), get_005124()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005120() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005121(), get_005122()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005118() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005119(),
          )],
          get_005120(),
        ))
      }
      pub(super) fn get_005112() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005113(),
          get_005116(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005118(),
        ))
      }
      pub(super) fn get_005131() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_005132() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_332() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 332u32)
        }))
      }
      pub(super) fn get_005135() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_a_332()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005134() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_005135(),
        ))
      }
      pub(super) fn get_005139() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_a_332()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005138() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005055(),
          CoreBinaryOperator::Plus(None),
          get_005139(),
        ))
      }
      pub(super) fn get_005137() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005138()))
      }
      pub(super) fn get_ident_b_333() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 333u32)
        }))
      }
      pub(super) fn get_005142() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_b_333()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005141() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_005142(),
        ))
      }
      pub(super) fn get_005146() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_b_333()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005145() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005063(),
          CoreBinaryOperator::Plus(None),
          get_005146(),
        ))
      }
      pub(super) fn get_005144() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005145()))
      }
      pub(super) fn get_005148() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_a_332(),
          CoreBinaryOperator::LessThan(None),
          get_ident_b_333(),
        ))
      }
      pub(super) fn get_005147() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_005148(),
          get_ident_a_332(),
          get_ident_b_333(),
        ))
      }
      pub(super) fn get_005140() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005141(), get_005144(), get_005147()))
      }
      pub(super) fn get_005133() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005134(), get_005137(), get_005140()))
      }
      pub(super) fn get_005130() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 332u32) },
              get_005131(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 333u32) },
              get_005132(),
            ),
          ],
          get_005133(),
        ))
      }
      pub(super) fn get_005067() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005068(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005070(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005112(),
            ),
          ],
          get_005130(),
        ))
      }
      pub(super) fn get_005149() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("clamp"))
      }
      pub(super) fn get_005152() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005151() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005152(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005154() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005155() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005159() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005158() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005159(),
        ))
      }
      pub(super) fn get_005157() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005158(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005161() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005163() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005165() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005168() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005169() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005171() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005174() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005176() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005175() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005176(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005178() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005180() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005179() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005180(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005181() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005177() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005178(), get_005179(), get_005181()))
      }
      pub(super) fn get_005173() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005174(), get_005175(), get_005177()))
      }
      pub(super) fn get_005185() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005184() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005185(),
        ))
      }
      pub(super) fn get_005183() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005184(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005187() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005186() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005187(),
        ))
      }
      pub(super) fn get_005190() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005189() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005190()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005188() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005189()))
      }
      pub(super) fn get_005182() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005183(), get_005186(), get_005188()))
      }
      pub(super) fn get_005172() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005173(),
          )],
          get_005182(),
        ))
      }
      pub(super) fn get_005170() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005171(),
          )],
          get_005172(),
        ))
      }
      pub(super) fn get_005167() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005168(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005169(),
            ),
          ],
          get_005170(),
        ))
      }
      pub(super) fn get_005192() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005191() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005192(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005166() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005167(),
          )],
          get_005191(),
        ))
      }
      pub(super) fn get_005164() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005165(),
          )],
          get_005166(),
        ))
      }
      pub(super) fn get_005162() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005163(),
          )],
          get_005164(),
        ))
      }
      pub(super) fn get_005160() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005161(),
          )],
          get_005162(),
        ))
      }
      pub(super) fn get_005194() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005193() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005194()))
      }
      pub(super) fn get_005156() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005157(), get_005160(), get_005193()))
      }
      pub(super) fn get_005153() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005154(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005155(),
            ),
          ],
          get_005156(),
        ))
      }
      pub(super) fn get_005197() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005198() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005196() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005197(),
          )],
          get_005198(),
        ))
      }
      pub(super) fn get_005200() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005199() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005200(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005202() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005204() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005206() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005208() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005210() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005212() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005211() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005212()]))
      }
      pub(super) fn get_005209() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005210(),
          )],
          get_005211(),
        ))
      }
      pub(super) fn get_005207() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005208(),
          )],
          get_005209(),
        ))
      }
      pub(super) fn get_005205() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005206(), get_005207()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005203() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005204(), get_005205()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005201() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005202(),
          )],
          get_005203(),
        ))
      }
      pub(super) fn get_005195() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005196(),
          get_005199(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005201(),
        ))
      }
      pub(super) fn get_005214() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005216() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'minVal' not bound"))
      }
      pub(super) fn get_005215() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005216()))
      }
      pub(super) fn get_005218() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'maxVal' not bound"))
      }
      pub(super) fn get_005217() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005218()))
      }
      pub(super) fn get_ident_x_334() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 334u32)
        }))
      }
      pub(super) fn get_ident_minVal_335() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("minVal", 335u32)
        }))
      }
      pub(super) fn get_005220() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_x_334(),
          CoreBinaryOperator::LessThan(None),
          get_ident_minVal_335(),
        ))
      }
      pub(super) fn get_ident_maxVal_336() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("maxVal", 336u32)
        }))
      }
      pub(super) fn get_005224() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_x_334(),
          CoreBinaryOperator::GreaterThan(None),
          get_ident_maxVal_336(),
        ))
      }
      pub(super) fn get_005223() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_005224(),
          get_ident_maxVal_336(),
          get_ident_x_334(),
        ))
      }
      pub(super) fn get_005219() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_005220(),
          get_ident_minVal_335(),
          get_005223(),
        ))
      }
      pub(super) fn get_005213() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("x", 334u32) },
              get_005214(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("minVal", 335u32) },
              get_005215(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("maxVal", 336u32) },
              get_005217(),
            ),
          ],
          get_005219(),
        ))
      }
      pub(super) fn get_005150() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005151(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005153(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005195(),
            ),
          ],
          get_005213(),
        ))
      }
      pub(super) fn get_005228() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005227() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005228(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005230() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005231() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005235() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005234() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005235(),
        ))
      }
      pub(super) fn get_005233() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005234(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005237() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005239() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005241() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005244() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005245() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005247() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005250() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005252() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005251() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005252(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005254() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005256() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005255() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005256(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005257() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005253() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005254(), get_005255(), get_005257()))
      }
      pub(super) fn get_005249() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005250(), get_005251(), get_005253()))
      }
      pub(super) fn get_005261() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005260() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005261(),
        ))
      }
      pub(super) fn get_005259() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005260(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005263() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005262() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005263(),
        ))
      }
      pub(super) fn get_005266() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005265() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005266()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005264() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005265()))
      }
      pub(super) fn get_005258() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005259(), get_005262(), get_005264()))
      }
      pub(super) fn get_005248() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005249(),
          )],
          get_005258(),
        ))
      }
      pub(super) fn get_005246() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005247(),
          )],
          get_005248(),
        ))
      }
      pub(super) fn get_005243() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005244(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005245(),
            ),
          ],
          get_005246(),
        ))
      }
      pub(super) fn get_005268() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005267() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005268(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005242() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005243(),
          )],
          get_005267(),
        ))
      }
      pub(super) fn get_005240() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005241(),
          )],
          get_005242(),
        ))
      }
      pub(super) fn get_005238() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005239(),
          )],
          get_005240(),
        ))
      }
      pub(super) fn get_005236() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005237(),
          )],
          get_005238(),
        ))
      }
      pub(super) fn get_005270() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005269() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005270()))
      }
      pub(super) fn get_005232() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005233(), get_005236(), get_005269()))
      }
      pub(super) fn get_005229() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005230(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005231(),
            ),
          ],
          get_005232(),
        ))
      }
      pub(super) fn get_005273() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005274() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005272() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005273(),
          )],
          get_005274(),
        ))
      }
      pub(super) fn get_005276() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005275() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005276(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005278() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005280() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005282() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005284() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005286() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005288() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005287() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005288()]))
      }
      pub(super) fn get_005285() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005286(),
          )],
          get_005287(),
        ))
      }
      pub(super) fn get_005283() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005284(),
          )],
          get_005285(),
        ))
      }
      pub(super) fn get_005281() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005282(), get_005283()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005279() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005280(), get_005281()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005277() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005278(),
          )],
          get_005279(),
        ))
      }
      pub(super) fn get_005271() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005272(),
          get_005275(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005277(),
        ))
      }
      pub(super) fn get_005291() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'arrs' not bound"))
      }
      pub(super) fn get_005290() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005291()))
      }
      pub(super) fn get_005294() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_005295() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_338() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 338u32)
        }))
      }
      pub(super) fn get_ident_b_339() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 339u32)
        }))
      }
      pub(super) fn get_005296() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_a_338(),
          CoreBinaryOperator::Plus(None),
          get_ident_b_339(),
        ))
      }
      pub(super) fn get_005293() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 338u32) },
              get_005294(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 339u32) },
              get_005295(),
            ),
          ],
          get_005296(),
        ))
      }
      pub(super) fn get_ident_arrs_337() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arrs", 337u32)
        }))
      }
      pub(super) fn get_005300() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005292() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_005293(), get_ident_arrs_337(), get_005300()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005289() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("arrs", 337u32) },
            get_005290(),
          )],
          get_005292(),
        ))
      }
      pub(super) fn get_005226() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005227(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005229(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005271(),
            ),
          ],
          get_005289(),
        ))
      }
      pub(super) fn get_005301() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestIni"))
      }
      pub(super) fn get_005304() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005303() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005304(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005306() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005307() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005311() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005310() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005311(),
        ))
      }
      pub(super) fn get_005309() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005310(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005313() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005315() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005317() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005320() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005321() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005323() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005326() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005328() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005327() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005328(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005330() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005332() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005331() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005332(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005333() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005329() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005330(), get_005331(), get_005333()))
      }
      pub(super) fn get_005325() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005326(), get_005327(), get_005329()))
      }
      pub(super) fn get_005337() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005336() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005337(),
        ))
      }
      pub(super) fn get_005335() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005336(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005339() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005338() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005339(),
        ))
      }
      pub(super) fn get_005342() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005341() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005342()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005340() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005341()))
      }
      pub(super) fn get_005334() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005335(), get_005338(), get_005340()))
      }
      pub(super) fn get_005324() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005325(),
          )],
          get_005334(),
        ))
      }
      pub(super) fn get_005322() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005323(),
          )],
          get_005324(),
        ))
      }
      pub(super) fn get_005319() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005320(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005321(),
            ),
          ],
          get_005322(),
        ))
      }
      pub(super) fn get_005344() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005343() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005344(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005318() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005319(),
          )],
          get_005343(),
        ))
      }
      pub(super) fn get_005316() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005317(),
          )],
          get_005318(),
        ))
      }
      pub(super) fn get_005314() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005315(),
          )],
          get_005316(),
        ))
      }
      pub(super) fn get_005312() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005313(),
          )],
          get_005314(),
        ))
      }
      pub(super) fn get_005346() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005345() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005346()))
      }
      pub(super) fn get_005308() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005309(), get_005312(), get_005345()))
      }
      pub(super) fn get_005305() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005306(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005307(),
            ),
          ],
          get_005308(),
        ))
      }
      pub(super) fn get_005349() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005350() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005348() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005349(),
          )],
          get_005350(),
        ))
      }
      pub(super) fn get_005352() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005351() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005352(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005354() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005356() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005358() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005360() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005362() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005364() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005363() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005364()]))
      }
      pub(super) fn get_005361() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005362(),
          )],
          get_005363(),
        ))
      }
      pub(super) fn get_005359() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005360(),
          )],
          get_005361(),
        ))
      }
      pub(super) fn get_005357() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005358(), get_005359()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005355() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005356(), get_005357()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005353() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005354(),
          )],
          get_005355(),
        ))
      }
      pub(super) fn get_005347() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005348(),
          get_005351(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005353(),
        ))
      }
      pub(super) fn get_005367() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'ini' not bound"))
      }
      pub(super) fn get_005366() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005367()))
      }
      pub(super) fn get_005371() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'body' not bound"))
      }
      pub(super) fn get_005370() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005371()))
      }
      pub(super) fn get_005373() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_body_342() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("body", 342u32)
        }))
      }
      pub(super) fn get_005375() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_body_342()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005378() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_348() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 348u32)
        }))
      }
      pub(super) fn get_005380() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_348()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005383() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_349() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 349u32)
        }))
      }
      pub(super) fn get_005385() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_348(),
          get_ident_genid_i_349(),
        ))
      }
      pub(super) fn get_ident_k_343() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 343u32)
        }))
      }
      pub(super) fn get_005389() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_body_342(),
          get_ident_k_343(),
        ))
      }
      pub(super) fn get_ident_value_or_values_344() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value_or_values", 344u32)
        }))
      }
      pub(super) fn get_005392() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_value_or_values_344()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005396() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_346() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 346u32)
        }))
      }
      pub(super) fn get_005398() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_346()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005401() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_347() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 347u32)
        }))
      }
      pub(super) fn get_005403() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_346(),
          get_ident_genid_i_347(),
        ))
      }
      pub(super) fn get_005407() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("%s = %s"))
      }
      pub(super) fn get_ident_value_345() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 345u32)
        }))
      }
      pub(super) fn get_005408() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_k_343(),
          get_ident_value_345(),
        ]))
      }
      pub(super) fn get_005406() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005407(), get_005408()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005405() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005406()]))
      }
      pub(super) fn get_005402() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("value", 345u32) },
            get_005403(),
          )],
          get_005405(),
        ))
      }
      pub(super) fn get_005400() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 347u32) },
            get_005401(),
          )],
          get_005402(),
        ))
      }
      pub(super) fn get_005397() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005398(), get_005400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005395() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005396(), get_005397()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005394() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 346u32) },
            get_ident_value_or_values_344(),
          )],
          get_005395(),
        ))
      }
      pub(super) fn get_005412() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_k_343(),
          get_ident_value_or_values_344(),
        ]))
      }
      pub(super) fn get_005411() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005407(), get_005412()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005410() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005411()]))
      }
      pub(super) fn get_005391() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005392(), get_005394(), get_005410()))
      }
      pub(super) fn get_005388() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("value_or_values", 344u32) },
            get_005389(),
          )],
          get_005391(),
        ))
      }
      pub(super) fn get_005387() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005388()]))
      }
      pub(super) fn get_005384() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 343u32) },
            get_005385(),
          )],
          get_005387(),
        ))
      }
      pub(super) fn get_005382() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 349u32) },
            get_005383(),
          )],
          get_005384(),
        ))
      }
      pub(super) fn get_005379() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005380(), get_005382()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005377() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005378(), get_005379()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005374() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 348u32) },
            get_005375(),
          )],
          get_005377(),
        ))
      }
      pub(super) fn get_005372() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005373(), get_005374()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005369() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("body", 342u32) },
            get_005370(),
          )],
          get_005372(),
        ))
      }
      pub(super) fn get_005416() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'sname' not bound"))
      }
      pub(super) fn get_005415() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005416()))
      }
      pub(super) fn get_005418() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'sbody' not bound"))
      }
      pub(super) fn get_005417() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005418()))
      }
      pub(super) fn get_005422() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("[%s]"))
      }
      pub(super) fn get_ident_sname_353() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("sname", 353u32)
        }))
      }
      pub(super) fn get_005423() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_sname_353()]))
      }
      pub(super) fn get_005421() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005422(), get_005423()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005420() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005421()]))
      }
      pub(super) fn get_ident_body_lines_341() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("body_lines", 341u32)
        }))
      }
      pub(super) fn get_ident_sbody_354() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("sbody", 354u32)
        }))
      }
      pub(super) fn get_005425() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_body_lines_341(),
          vec![get_ident_sbody_354()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005419() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005420(),
          CoreBinaryOperator::Plus(None),
          get_005425(),
        ))
      }
      pub(super) fn get_005414() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("sname", 353u32) },
              get_005415(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("sbody", 354u32) },
              get_005417(),
            ),
          ],
          get_005419(),
        ))
      }
      pub(super) fn get_005431() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("objectHas"))
      }
      pub(super) fn get_member_std_3_objectHas() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_005431()))
      }
      pub(super) fn get_ident_ini_340() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ini", 340u32)
        }))
      }
      pub(super) fn get_005433() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("main"))
      }
      pub(super) fn get_005429() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectHas(),
          vec![get_ident_ini_340(), get_005433()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_ini_340_main() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_ini_340(), get_005433()))
      }
      pub(super) fn get_005434() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_body_lines_341(),
          vec![get_member_ini_340_main()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005436() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005428() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005429(), get_005434(), get_005436()))
      }
      pub(super) fn get_005440() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("sections"))
      }
      pub(super) fn get_member_ini_340_sections() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_ini_340(), get_005440()))
      }
      pub(super) fn get_005438() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_member_ini_340_sections()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005442() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_356() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 356u32)
        }))
      }
      pub(super) fn get_005444() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_356()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005447() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_357() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 357u32)
        }))
      }
      pub(super) fn get_005449() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_356(),
          get_ident_genid_i_357(),
        ))
      }
      pub(super) fn get_ident_section_lines_350() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("section_lines", 350u32)
        }))
      }
      pub(super) fn get_ident_k_355() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 355u32)
        }))
      }
      pub(super) fn get_005455() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_member_ini_340_sections(),
          get_ident_k_355(),
        ))
      }
      pub(super) fn get_005452() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_section_lines_350(),
          vec![get_ident_k_355(), get_005455()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005451() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005452()]))
      }
      pub(super) fn get_005448() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 355u32) },
            get_005449(),
          )],
          get_005451(),
        ))
      }
      pub(super) fn get_005446() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 357u32) },
            get_005447(),
          )],
          get_005448(),
        ))
      }
      pub(super) fn get_005443() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005444(), get_005446()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005441() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005442(), get_005443()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005437() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 356u32) },
            get_005438(),
          )],
          get_005441(),
        ))
      }
      pub(super) fn get_ident_main_body_351() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("main_body", 351u32)
        }))
      }
      pub(super) fn get_ident_all_sections_352() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("all_sections", 352u32)
        }))
      }
      pub(super) fn get_005460() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_flattenArrays(),
          vec![get_ident_all_sections_352()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005458() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_main_body_351(),
          CoreBinaryOperator::Plus(None),
          get_005460(),
        ))
      }
      pub(super) fn get_005462() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000548()]))
      }
      pub(super) fn get_005457() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005458(),
          CoreBinaryOperator::Plus(None),
          get_005462(),
        ))
      }
      pub(super) fn get_005456() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_003089(), get_005457()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005413() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("section_lines", 350u32) },
              get_005414(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("main_body", 351u32) },
              get_005428(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("all_sections", 352u32) },
              get_005437(),
            ),
          ],
          get_005456(),
        ))
      }
      pub(super) fn get_005368() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("body_lines", 341u32) },
            get_005369(),
          )],
          get_005413(),
        ))
      }
      pub(super) fn get_005365() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("ini", 340u32) },
            get_005366(),
          )],
          get_005368(),
        ))
      }
      pub(super) fn get_005302() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005303(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005305(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005347(),
            ),
          ],
          get_005365(),
        ))
      }
      pub(super) fn get_005463() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("escapeStringJson"))
      }
      pub(super) fn get_005466() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005465() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005466(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005468() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005469() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005473() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005472() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005473(),
        ))
      }
      pub(super) fn get_005471() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005472(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005475() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005477() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005479() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005482() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005483() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005485() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005488() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005490() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005489() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005490(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005492() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005494() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005493() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005494(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005495() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005491() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005492(), get_005493(), get_005495()))
      }
      pub(super) fn get_005487() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005488(), get_005489(), get_005491()))
      }
      pub(super) fn get_005499() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005498() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005499(),
        ))
      }
      pub(super) fn get_005497() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005498(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005501() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005500() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005501(),
        ))
      }
      pub(super) fn get_005504() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005503() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005504()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005502() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005503()))
      }
      pub(super) fn get_005496() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005497(), get_005500(), get_005502()))
      }
      pub(super) fn get_005486() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005487(),
          )],
          get_005496(),
        ))
      }
      pub(super) fn get_005484() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005485(),
          )],
          get_005486(),
        ))
      }
      pub(super) fn get_005481() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005482(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005483(),
            ),
          ],
          get_005484(),
        ))
      }
      pub(super) fn get_005506() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005505() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005506(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005480() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005481(),
          )],
          get_005505(),
        ))
      }
      pub(super) fn get_005478() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005479(),
          )],
          get_005480(),
        ))
      }
      pub(super) fn get_005476() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005477(),
          )],
          get_005478(),
        ))
      }
      pub(super) fn get_005474() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005475(),
          )],
          get_005476(),
        ))
      }
      pub(super) fn get_005508() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005507() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005508()))
      }
      pub(super) fn get_005470() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005471(), get_005474(), get_005507()))
      }
      pub(super) fn get_005467() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005468(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005469(),
            ),
          ],
          get_005470(),
        ))
      }
      pub(super) fn get_005511() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005512() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005510() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005511(),
          )],
          get_005512(),
        ))
      }
      pub(super) fn get_005514() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005513() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005514(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005516() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005518() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005520() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005522() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005524() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005526() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005525() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005526()]))
      }
      pub(super) fn get_005523() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005524(),
          )],
          get_005525(),
        ))
      }
      pub(super) fn get_005521() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005522(),
          )],
          get_005523(),
        ))
      }
      pub(super) fn get_005519() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005520(), get_005521()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005517() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005518(), get_005519()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005515() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005516(),
          )],
          get_005517(),
        ))
      }
      pub(super) fn get_005509() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005510(),
          get_005513(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005515(),
        ))
      }
      pub(super) fn get_005529() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'str_' not bound"))
      }
      pub(super) fn get_005528() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005529()))
      }
      pub(super) fn get_ident_str__358() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str_", 358u32)
        }))
      }
      pub(super) fn get_005531() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_toString(),
          vec![get_ident_str__358()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005536() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'ch' not bound"))
      }
      pub(super) fn get_005535() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005536()))
      }
      pub(super) fn get_ident_ch_361() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ch", 361u32)
        }))
      }
      pub(super) fn get_005540() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\""))
      }
      pub(super) fn get_005538() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_361(), get_005540()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005541() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\\""))
      }
      pub(super) fn get_005544() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\"))
      }
      pub(super) fn get_005543() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_361(), get_005544()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005545() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\\\"))
      }
      pub(super) fn get_005548() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\u{8}"))
      }
      pub(super) fn get_005547() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_361(), get_005548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005549() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\b"))
      }
      pub(super) fn get_005552() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\u{c}"))
      }
      pub(super) fn get_005551() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_361(), get_005552()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005553() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\f"))
      }
      pub(super) fn get_005555() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_361(), get_003089()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005556() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\n"))
      }
      pub(super) fn get_005559() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\r"))
      }
      pub(super) fn get_005558() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_361(), get_005559()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005560() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\r"))
      }
      pub(super) fn get_005563() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\t"))
      }
      pub(super) fn get_005562() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_361(), get_005563()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005564() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\t"))
      }
      pub(super) fn get_005566() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_ch_361()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_cp_362() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cp", 362u32)
        }))
      }
      pub(super) fn get_number_127_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(127f64))
      }
      pub(super) fn get_005573() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_127_0(),
          CoreBinaryOperator::And(None),
          get_ident_cp_362(),
        ))
      }
      pub(super) fn get_005572() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cp_362(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005573(),
        ))
      }
      pub(super) fn get_number_159_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(159f64))
      }
      pub(super) fn get_005571() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005572(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_159_0(),
        ))
      }
      pub(super) fn get_005570() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_32_0(),
          CoreBinaryOperator::Or(None),
          get_005571(),
        ))
      }
      pub(super) fn get_005568() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cp_362(),
          CoreBinaryOperator::LessThan(None),
          get_005570(),
        ))
      }
      pub(super) fn get_005577() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\\u%04x"))
      }
      pub(super) fn get_005578() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_cp_362()]))
      }
      pub(super) fn get_005576() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005577(), get_005578()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005567() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_005568(),
          get_005576(),
          get_ident_ch_361(),
        ))
      }
      pub(super) fn get_005565() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("cp", 362u32) },
            get_005566(),
          )],
          get_005567(),
        ))
      }
      pub(super) fn get_005561() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005562(), get_005564(), get_005565()))
      }
      pub(super) fn get_005557() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005558(), get_005560(), get_005561()))
      }
      pub(super) fn get_005554() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005555(), get_005556(), get_005557()))
      }
      pub(super) fn get_005550() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005551(), get_005553(), get_005554()))
      }
      pub(super) fn get_005546() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005547(), get_005549(), get_005550()))
      }
      pub(super) fn get_005542() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005543(), get_005545(), get_005546()))
      }
      pub(super) fn get_005537() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005538(), get_005541(), get_005542()))
      }
      pub(super) fn get_005534() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("ch", 361u32) },
            get_005535(),
          )],
          get_005537(),
        ))
      }
      pub(super) fn get_005580() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\"%s\""))
      }
      pub(super) fn get_ident_str_359() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 359u32)
        }))
      }
      pub(super) fn get_005583() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_359()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005586() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_364() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 364u32)
        }))
      }
      pub(super) fn get_005588() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_364()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005591() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_365() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 365u32)
        }))
      }
      pub(super) fn get_005593() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_364(),
          get_ident_genid_i_365(),
        ))
      }
      pub(super) fn get_ident_trans_360() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("trans", 360u32)
        }))
      }
      pub(super) fn get_ident_ch_363() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ch", 363u32)
        }))
      }
      pub(super) fn get_005596() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_trans_360(),
          vec![get_ident_ch_363()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005595() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005596()]))
      }
      pub(super) fn get_005592() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("ch", 363u32) },
            get_005593(),
          )],
          get_005595(),
        ))
      }
      pub(super) fn get_005590() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 365u32) },
            get_005591(),
          )],
          get_005592(),
        ))
      }
      pub(super) fn get_005587() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005588(), get_005590()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005585() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005586(), get_005587()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005582() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 364u32) },
            get_005583(),
          )],
          get_005585(),
        ))
      }
      pub(super) fn get_005581() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_005582()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005579() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005580(), get_005581()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005533() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("trans", 360u32) },
            get_005534(),
          )],
          get_005579(),
        ))
      }
      pub(super) fn get_005530() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str", 359u32) },
            get_005531(),
          )],
          get_005533(),
        ))
      }
      pub(super) fn get_005527() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str_", 358u32) },
            get_005528(),
          )],
          get_005530(),
        ))
      }
      pub(super) fn get_005464() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005465(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005467(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005509(),
            ),
          ],
          get_005527(),
        ))
      }
      pub(super) fn get_005599() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("escapeStringPython"))
      }
      pub(super) fn get_005602() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005601() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005602(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005604() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005605() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005609() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005608() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005609(),
        ))
      }
      pub(super) fn get_005607() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005608(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005611() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005613() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005615() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005618() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005619() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005621() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005624() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005626() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005625() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005626(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005628() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005630() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005629() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005630(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005631() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005627() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005628(), get_005629(), get_005631()))
      }
      pub(super) fn get_005623() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005624(), get_005625(), get_005627()))
      }
      pub(super) fn get_005635() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005634() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005635(),
        ))
      }
      pub(super) fn get_005633() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005634(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005637() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005636() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005637(),
        ))
      }
      pub(super) fn get_005640() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005639() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005640()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005638() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005639()))
      }
      pub(super) fn get_005632() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005633(), get_005636(), get_005638()))
      }
      pub(super) fn get_005622() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005623(),
          )],
          get_005632(),
        ))
      }
      pub(super) fn get_005620() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005621(),
          )],
          get_005622(),
        ))
      }
      pub(super) fn get_005617() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005618(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005619(),
            ),
          ],
          get_005620(),
        ))
      }
      pub(super) fn get_005642() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005641() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005642(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005616() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005617(),
          )],
          get_005641(),
        ))
      }
      pub(super) fn get_005614() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005615(),
          )],
          get_005616(),
        ))
      }
      pub(super) fn get_005612() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005613(),
          )],
          get_005614(),
        ))
      }
      pub(super) fn get_005610() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005611(),
          )],
          get_005612(),
        ))
      }
      pub(super) fn get_005644() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005643() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005644()))
      }
      pub(super) fn get_005606() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005607(), get_005610(), get_005643()))
      }
      pub(super) fn get_005603() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005604(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005605(),
            ),
          ],
          get_005606(),
        ))
      }
      pub(super) fn get_005647() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005648() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005646() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005647(),
          )],
          get_005648(),
        ))
      }
      pub(super) fn get_005650() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005649() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005650(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005652() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005654() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005656() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005658() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005660() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005662() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005661() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005662()]))
      }
      pub(super) fn get_005659() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005660(),
          )],
          get_005661(),
        ))
      }
      pub(super) fn get_005657() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005658(),
          )],
          get_005659(),
        ))
      }
      pub(super) fn get_005655() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005656(), get_005657()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005653() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005654(), get_005655()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005651() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005652(),
          )],
          get_005653(),
        ))
      }
      pub(super) fn get_005645() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005646(),
          get_005649(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005651(),
        ))
      }
      pub(super) fn get_005664() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_member_std_3_escapeStringJson() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_005463()))
      }
      pub(super) fn get_ident_str_366() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 366u32)
        }))
      }
      pub(super) fn get_005665() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_escapeStringJson(),
          vec![get_ident_str_366()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005663() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 366u32) },
            get_005664(),
          )],
          get_005665(),
        ))
      }
      pub(super) fn get_005600() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005601(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005603(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005645(),
            ),
          ],
          get_005663(),
        ))
      }
      pub(super) fn get_005668() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("escapeStringBash"))
      }
      pub(super) fn get_005671() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005670() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005671(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005673() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005674() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005678() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005677() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005678(),
        ))
      }
      pub(super) fn get_005676() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005677(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005680() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005682() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005684() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005687() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005688() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005690() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005693() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005695() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005694() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005695(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005697() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005699() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005698() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005699(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005700() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005696() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005697(), get_005698(), get_005700()))
      }
      pub(super) fn get_005692() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005693(), get_005694(), get_005696()))
      }
      pub(super) fn get_005704() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005703() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005704(),
        ))
      }
      pub(super) fn get_005702() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005703(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005706() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005705() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005706(),
        ))
      }
      pub(super) fn get_005709() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005708() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005709()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005707() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005708()))
      }
      pub(super) fn get_005701() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005702(), get_005705(), get_005707()))
      }
      pub(super) fn get_005691() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005692(),
          )],
          get_005701(),
        ))
      }
      pub(super) fn get_005689() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005690(),
          )],
          get_005691(),
        ))
      }
      pub(super) fn get_005686() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005687(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005688(),
            ),
          ],
          get_005689(),
        ))
      }
      pub(super) fn get_005711() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005710() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005711(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005685() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005686(),
          )],
          get_005710(),
        ))
      }
      pub(super) fn get_005683() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005684(),
          )],
          get_005685(),
        ))
      }
      pub(super) fn get_005681() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005682(),
          )],
          get_005683(),
        ))
      }
      pub(super) fn get_005679() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005680(),
          )],
          get_005681(),
        ))
      }
      pub(super) fn get_005713() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005712() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005713()))
      }
      pub(super) fn get_005675() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005676(), get_005679(), get_005712()))
      }
      pub(super) fn get_005672() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005673(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005674(),
            ),
          ],
          get_005675(),
        ))
      }
      pub(super) fn get_005716() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005717() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005715() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005716(),
          )],
          get_005717(),
        ))
      }
      pub(super) fn get_005719() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005718() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005719(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005721() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005723() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005725() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005727() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005729() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005731() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005730() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005731()]))
      }
      pub(super) fn get_005728() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005729(),
          )],
          get_005730(),
        ))
      }
      pub(super) fn get_005726() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005727(),
          )],
          get_005728(),
        ))
      }
      pub(super) fn get_005724() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005725(), get_005726()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005722() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005723(), get_005724()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005720() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005721(),
          )],
          get_005722(),
        ))
      }
      pub(super) fn get_005714() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005715(),
          get_005718(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005720(),
        ))
      }
      pub(super) fn get_005733() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005529()))
      }
      pub(super) fn get_ident_str__367() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str_", 367u32)
        }))
      }
      pub(super) fn get_005735() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_toString(),
          vec![get_ident_str__367()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005739() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005536()))
      }
      pub(super) fn get_ident_ch_370() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ch", 370u32)
        }))
      }
      pub(super) fn get_005743() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("'"))
      }
      pub(super) fn get_005741() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_370(), get_005743()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005744() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("'\"'\"'"))
      }
      pub(super) fn get_005740() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_005741(),
          get_005744(),
          get_ident_ch_370(),
        ))
      }
      pub(super) fn get_005738() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("ch", 370u32) },
            get_005739(),
          )],
          get_005740(),
        ))
      }
      pub(super) fn get_005746() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("'%s'"))
      }
      pub(super) fn get_ident_str_368() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 368u32)
        }))
      }
      pub(super) fn get_005749() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_368()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005752() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_372() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 372u32)
        }))
      }
      pub(super) fn get_005754() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_372()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005757() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_373() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 373u32)
        }))
      }
      pub(super) fn get_005759() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_372(),
          get_ident_genid_i_373(),
        ))
      }
      pub(super) fn get_ident_trans_369() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("trans", 369u32)
        }))
      }
      pub(super) fn get_ident_ch_371() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ch", 371u32)
        }))
      }
      pub(super) fn get_005762() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_trans_369(),
          vec![get_ident_ch_371()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005761() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005762()]))
      }
      pub(super) fn get_005758() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("ch", 371u32) },
            get_005759(),
          )],
          get_005761(),
        ))
      }
      pub(super) fn get_005756() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 373u32) },
            get_005757(),
          )],
          get_005758(),
        ))
      }
      pub(super) fn get_005753() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005754(), get_005756()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005751() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005752(), get_005753()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005748() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 372u32) },
            get_005749(),
          )],
          get_005751(),
        ))
      }
      pub(super) fn get_005747() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_005748()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005745() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005746(), get_005747()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005737() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("trans", 369u32) },
            get_005738(),
          )],
          get_005745(),
        ))
      }
      pub(super) fn get_005734() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str", 368u32) },
            get_005735(),
          )],
          get_005737(),
        ))
      }
      pub(super) fn get_005732() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str_", 367u32) },
            get_005733(),
          )],
          get_005734(),
        ))
      }
      pub(super) fn get_005669() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005670(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005672(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005714(),
            ),
          ],
          get_005732(),
        ))
      }
      pub(super) fn get_005765() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("escapeStringDollars"))
      }
      pub(super) fn get_005768() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005767() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005768(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005770() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005771() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005775() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005774() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005775(),
        ))
      }
      pub(super) fn get_005773() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005774(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005777() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005779() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005781() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005784() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005785() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005787() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005790() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005792() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005791() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005792(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005794() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005796() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005795() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005796(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005797() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005793() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005794(), get_005795(), get_005797()))
      }
      pub(super) fn get_005789() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005790(), get_005791(), get_005793()))
      }
      pub(super) fn get_005801() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005800() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005801(),
        ))
      }
      pub(super) fn get_005799() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005800(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005803() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005802() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005803(),
        ))
      }
      pub(super) fn get_005806() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005805() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005806()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005804() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005805()))
      }
      pub(super) fn get_005798() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005799(), get_005802(), get_005804()))
      }
      pub(super) fn get_005788() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005789(),
          )],
          get_005798(),
        ))
      }
      pub(super) fn get_005786() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005787(),
          )],
          get_005788(),
        ))
      }
      pub(super) fn get_005783() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005784(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005785(),
            ),
          ],
          get_005786(),
        ))
      }
      pub(super) fn get_005808() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005807() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005808(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005782() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005783(),
          )],
          get_005807(),
        ))
      }
      pub(super) fn get_005780() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005781(),
          )],
          get_005782(),
        ))
      }
      pub(super) fn get_005778() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005779(),
          )],
          get_005780(),
        ))
      }
      pub(super) fn get_005776() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005777(),
          )],
          get_005778(),
        ))
      }
      pub(super) fn get_005810() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005809() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005810()))
      }
      pub(super) fn get_005772() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005773(), get_005776(), get_005809()))
      }
      pub(super) fn get_005769() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005770(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005771(),
            ),
          ],
          get_005772(),
        ))
      }
      pub(super) fn get_005813() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005814() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005812() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005813(),
          )],
          get_005814(),
        ))
      }
      pub(super) fn get_005816() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005815() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005816(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005818() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005820() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005822() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005824() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005826() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005828() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005827() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005828()]))
      }
      pub(super) fn get_005825() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005826(),
          )],
          get_005827(),
        ))
      }
      pub(super) fn get_005823() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005824(),
          )],
          get_005825(),
        ))
      }
      pub(super) fn get_005821() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005822(), get_005823()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005819() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005820(), get_005821()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005817() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005818(),
          )],
          get_005819(),
        ))
      }
      pub(super) fn get_005811() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005812(),
          get_005815(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005817(),
        ))
      }
      pub(super) fn get_005830() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005529()))
      }
      pub(super) fn get_ident_str__374() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str_", 374u32)
        }))
      }
      pub(super) fn get_005832() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_toString(),
          vec![get_ident_str__374()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005836() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005536()))
      }
      pub(super) fn get_ident_ch_377() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ch", 377u32)
        }))
      }
      pub(super) fn get_005840() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("$"))
      }
      pub(super) fn get_005838() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ch_377(), get_005840()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005841() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("$$"))
      }
      pub(super) fn get_005837() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_005838(),
          get_005841(),
          get_ident_ch_377(),
        ))
      }
      pub(super) fn get_005835() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("ch", 377u32) },
            get_005836(),
          )],
          get_005837(),
        ))
      }
      pub(super) fn get_005844() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_005845() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_378() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 378u32)
        }))
      }
      pub(super) fn get_ident_trans_376() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("trans", 376u32)
        }))
      }
      pub(super) fn get_ident_b_379() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 379u32)
        }))
      }
      pub(super) fn get_005848() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_trans_376(),
          vec![get_ident_b_379()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005846() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_a_378(),
          CoreBinaryOperator::Plus(None),
          get_005848(),
        ))
      }
      pub(super) fn get_005843() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 378u32) },
              get_005844(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 379u32) },
              get_005845(),
            ),
          ],
          get_005846(),
        ))
      }
      pub(super) fn get_ident_str_375() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 375u32)
        }))
      }
      pub(super) fn get_005851() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_375()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005842() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_005843(), get_005851(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005834() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("trans", 376u32) },
            get_005835(),
          )],
          get_005842(),
        ))
      }
      pub(super) fn get_005831() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str", 375u32) },
            get_005832(),
          )],
          get_005834(),
        ))
      }
      pub(super) fn get_005829() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str_", 374u32) },
            get_005830(),
          )],
          get_005831(),
        ))
      }
      pub(super) fn get_005766() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005767(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005769(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005811(),
            ),
          ],
          get_005829(),
        ))
      }
      pub(super) fn get_005853() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestJson"))
      }
      pub(super) fn get_005856() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005855() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005856(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005858() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005859() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005863() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005862() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005863(),
        ))
      }
      pub(super) fn get_005861() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005862(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005865() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005867() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005869() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005872() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005873() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005875() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005878() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005880() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005879() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005880(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005882() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005884() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005883() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005884(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005885() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005881() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005882(), get_005883(), get_005885()))
      }
      pub(super) fn get_005877() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005878(), get_005879(), get_005881()))
      }
      pub(super) fn get_005889() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005888() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005889(),
        ))
      }
      pub(super) fn get_005887() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005888(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005891() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005890() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005891(),
        ))
      }
      pub(super) fn get_005894() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005893() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005894()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005892() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005893()))
      }
      pub(super) fn get_005886() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005887(), get_005890(), get_005892()))
      }
      pub(super) fn get_005876() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005877(),
          )],
          get_005886(),
        ))
      }
      pub(super) fn get_005874() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005875(),
          )],
          get_005876(),
        ))
      }
      pub(super) fn get_005871() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005872(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005873(),
            ),
          ],
          get_005874(),
        ))
      }
      pub(super) fn get_005896() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005895() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005896(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005870() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005871(),
          )],
          get_005895(),
        ))
      }
      pub(super) fn get_005868() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005869(),
          )],
          get_005870(),
        ))
      }
      pub(super) fn get_005866() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005867(),
          )],
          get_005868(),
        ))
      }
      pub(super) fn get_005864() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005865(),
          )],
          get_005866(),
        ))
      }
      pub(super) fn get_005898() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005897() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005898()))
      }
      pub(super) fn get_005860() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005861(), get_005864(), get_005897()))
      }
      pub(super) fn get_005857() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005858(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005859(),
            ),
          ],
          get_005860(),
        ))
      }
      pub(super) fn get_005901() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005902() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005900() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005901(),
          )],
          get_005902(),
        ))
      }
      pub(super) fn get_005904() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005903() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005904(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005906() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005908() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005910() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005912() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005914() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005916() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005915() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005916()]))
      }
      pub(super) fn get_005913() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005914(),
          )],
          get_005915(),
        ))
      }
      pub(super) fn get_005911() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005912(),
          )],
          get_005913(),
        ))
      }
      pub(super) fn get_005909() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005910(), get_005911()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005907() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005908(), get_005909()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005905() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005906(),
          )],
          get_005907(),
        ))
      }
      pub(super) fn get_005899() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005900(),
          get_005903(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005905(),
        ))
      }
      pub(super) fn get_005919() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'value' not bound"))
      }
      pub(super) fn get_005918() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_005922() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestJsonEx"))
      }
      pub(super) fn get_member_std_3_manifestJsonEx() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_005922()))
      }
      pub(super) fn get_ident_value_380() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 380u32)
        }))
      }
      pub(super) fn get_005924() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("    "))
      }
      pub(super) fn get_005920() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_manifestJsonEx(),
          vec![get_ident_value_380(), get_005924()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005917() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("value", 380u32) },
            get_005918(),
          )],
          get_005920(),
        ))
      }
      pub(super) fn get_005854() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005855(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005857(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005899(),
            ),
          ],
          get_005917(),
        ))
      }
      pub(super) fn get_005927() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_005926() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_005927(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_005929() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_005930() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_005934() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005933() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_005934(),
        ))
      }
      pub(super) fn get_005932() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005933(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_005936() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005938() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005940() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005943() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_005944() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_005946() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005949() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005951() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_005950() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005951(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005953() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005955() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_005954() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005955(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_005956() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_005952() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005953(), get_005954(), get_005956()))
      }
      pub(super) fn get_005948() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005949(), get_005950(), get_005952()))
      }
      pub(super) fn get_005960() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005959() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_005960(),
        ))
      }
      pub(super) fn get_005958() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_005959(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_005962() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_005961() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_005962(),
        ))
      }
      pub(super) fn get_005965() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_005964() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_005965()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005963() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005964()))
      }
      pub(super) fn get_005957() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005958(), get_005961(), get_005963()))
      }
      pub(super) fn get_005947() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_005948(),
          )],
          get_005957(),
        ))
      }
      pub(super) fn get_005945() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_005946(),
          )],
          get_005947(),
        ))
      }
      pub(super) fn get_005942() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_005943(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_005944(),
            ),
          ],
          get_005945(),
        ))
      }
      pub(super) fn get_005967() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005966() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_005967(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005941() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_005942(),
          )],
          get_005966(),
        ))
      }
      pub(super) fn get_005939() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_005940(),
          )],
          get_005941(),
        ))
      }
      pub(super) fn get_005937() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_005938(),
          )],
          get_005939(),
        ))
      }
      pub(super) fn get_005935() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_005936(),
          )],
          get_005937(),
        ))
      }
      pub(super) fn get_005969() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005968() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005969()))
      }
      pub(super) fn get_005931() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_005932(), get_005935(), get_005968()))
      }
      pub(super) fn get_005928() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_005929(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_005930(),
            ),
          ],
          get_005931(),
        ))
      }
      pub(super) fn get_005972() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005973() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005971() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005972(),
          )],
          get_005973(),
        ))
      }
      pub(super) fn get_005975() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_005974() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005975(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_005977() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005979() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_005981() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005983() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_005985() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_005987() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_005986() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_005987()]))
      }
      pub(super) fn get_005984() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_005985(),
          )],
          get_005986(),
        ))
      }
      pub(super) fn get_005982() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_005983(),
          )],
          get_005984(),
        ))
      }
      pub(super) fn get_005980() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_005981(), get_005982()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005978() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_005979(), get_005980()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005976() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_005977(),
          )],
          get_005978(),
        ))
      }
      pub(super) fn get_005970() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_005971(),
          get_005974(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_005976(),
        ))
      }
      pub(super) fn get_005989() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_005991() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'indent' not bound"))
      }
      pub(super) fn get_005990() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005991()))
      }
      pub(super) fn get_005994() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_005996() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'path' not bound"))
      }
      pub(super) fn get_005995() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005996()))
      }
      pub(super) fn get_005998() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'cindent' not bound"))
      }
      pub(super) fn get_005997() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005998()))
      }
      pub(super) fn get_ident_v_384() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 384u32)
        }))
      }
      pub(super) fn get_006000() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_384(), get_true()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006002() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("true"))
      }
      pub(super) fn get_006004() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_384(), get_false()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006005() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("false"))
      }
      pub(super) fn get_006007() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_384(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006008() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("null"))
      }
      pub(super) fn get_006010() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006011() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000548(),
          CoreBinaryOperator::Plus(None),
          get_ident_v_384(),
        ))
      }
      pub(super) fn get_006013() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006014() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_escapeStringJson(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006016() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006019() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Tried to manifest function at "))
      }
      pub(super) fn get_ident_path_385() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("path", 385u32)
        }))
      }
      pub(super) fn get_006018() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006019(),
          CoreBinaryOperator::Plus(None),
          get_ident_path_385(),
        ))
      }
      pub(super) fn get_006017() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006018()))
      }
      pub(super) fn get_006022() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006026() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006025() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006026(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006024() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_006025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_cindent_386() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cindent", 386u32)
        }))
      }
      pub(super) fn get_ident_indent_382() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("indent", 382u32)
        }))
      }
      pub(super) fn get_006028() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cindent_386(),
          CoreBinaryOperator::Plus(None),
          get_ident_indent_382(),
        ))
      }
      pub(super) fn get_006035() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("[\n"))
      }
      pub(super) fn get_006034() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006035()]))
      }
      pub(super) fn get_006038() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(",\n"))
      }
      pub(super) fn get_006037() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006038()]))
      }
      pub(super) fn get_ident_range_387() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("range", 387u32)
        }))
      }
      pub(super) fn get_006042() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_391() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 391u32)
        }))
      }
      pub(super) fn get_006044() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_391()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006047() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_392() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 392u32)
        }))
      }
      pub(super) fn get_006049() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_391(),
          get_ident_genid_i_392(),
        ))
      }
      pub(super) fn get_ident_new_indent_388() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("new_indent", 388u32)
        }))
      }
      pub(super) fn get_ident_aux_383() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 383u32)
        }))
      }
      pub(super) fn get_ident_i_390() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 390u32)
        }))
      }
      pub(super) fn get_006057() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_384(),
          get_ident_i_390(),
        ))
      }
      pub(super) fn get_006060() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_390()]))
      }
      pub(super) fn get_006059() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_path_385(),
          CoreBinaryOperator::Plus(None),
          get_006060(),
        ))
      }
      pub(super) fn get_006055() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_383(),
          vec![get_006057(), get_006059(), get_ident_new_indent_388()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006053() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_new_indent_388(),
          CoreBinaryOperator::Plus(None),
          get_006055(),
        ))
      }
      pub(super) fn get_006052() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006053()]))
      }
      pub(super) fn get_006051() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006052()]))
      }
      pub(super) fn get_006048() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 390u32) },
            get_006049(),
          )],
          get_006051(),
        ))
      }
      pub(super) fn get_006046() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 392u32) },
            get_006047(),
          )],
          get_006048(),
        ))
      }
      pub(super) fn get_006043() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006044(), get_006046()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006041() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006042(), get_006043()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006039() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 391u32) },
            get_ident_range_387(),
          )],
          get_006041(),
        ))
      }
      pub(super) fn get_006036() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006037(), get_006039()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006033() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006034(),
          CoreBinaryOperator::Plus(None),
          get_006036(),
        ))
      }
      pub(super) fn get_006063() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_ident_cindent_386(),
        ))
      }
      pub(super) fn get_006064() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("]"))
      }
      pub(super) fn get_006062() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006063(),
          CoreBinaryOperator::Plus(None),
          get_006064(),
        ))
      }
      pub(super) fn get_006061() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006062()]))
      }
      pub(super) fn get_006032() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006033(),
          CoreBinaryOperator::Plus(None),
          get_006061(),
        ))
      }
      pub(super) fn get_ident_lines_389() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("lines", 389u32)
        }))
      }
      pub(super) fn get_006065() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_ident_lines_389()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006031() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lines", 389u32) },
            get_006032(),
          )],
          get_006065(),
        ))
      }
      pub(super) fn get_006027() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("new_indent", 388u32) },
            get_006028(),
          )],
          get_006031(),
        ))
      }
      pub(super) fn get_006023() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("range", 387u32) },
            get_006024(),
          )],
          get_006027(),
        ))
      }
      pub(super) fn get_006068() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006073() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("{\n"))
      }
      pub(super) fn get_006072() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006073()]))
      }
      pub(super) fn get_006075() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006038()]))
      }
      pub(super) fn get_006077() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_v_384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006079() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_395() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 395u32)
        }))
      }
      pub(super) fn get_006081() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_395()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006084() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_396() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 396u32)
        }))
      }
      pub(super) fn get_006086() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_395(),
          get_ident_genid_i_396(),
        ))
      }
      pub(super) fn get_006093() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cindent_386(),
          CoreBinaryOperator::Plus(None),
          get_ident_indent_382(),
        ))
      }
      pub(super) fn get_ident_k_394() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 394u32)
        }))
      }
      pub(super) fn get_006094() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_escapeStringJson(),
          vec![get_ident_k_394()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006092() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006093(),
          CoreBinaryOperator::Plus(None),
          get_006094(),
        ))
      }
      pub(super) fn get_006096() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(": "))
      }
      pub(super) fn get_006091() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006092(),
          CoreBinaryOperator::Plus(None),
          get_006096(),
        ))
      }
      pub(super) fn get_006098() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_384(),
          get_ident_k_394(),
        ))
      }
      pub(super) fn get_006100() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_k_394()]))
      }
      pub(super) fn get_006099() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_path_385(),
          CoreBinaryOperator::Plus(None),
          get_006100(),
        ))
      }
      pub(super) fn get_006101() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cindent_386(),
          CoreBinaryOperator::Plus(None),
          get_ident_indent_382(),
        ))
      }
      pub(super) fn get_006097() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_383(),
          vec![get_006098(), get_006099(), get_006101()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006090() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006091(),
          CoreBinaryOperator::Plus(None),
          get_006097(),
        ))
      }
      pub(super) fn get_006089() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006090()]))
      }
      pub(super) fn get_006088() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006089()]))
      }
      pub(super) fn get_006085() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 394u32) },
            get_006086(),
          )],
          get_006088(),
        ))
      }
      pub(super) fn get_006083() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 396u32) },
            get_006084(),
          )],
          get_006085(),
        ))
      }
      pub(super) fn get_006080() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006081(), get_006083()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006078() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006079(), get_006080()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006076() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 395u32) },
            get_006077(),
          )],
          get_006078(),
        ))
      }
      pub(super) fn get_006074() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006075(), get_006076()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006071() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006072(),
          CoreBinaryOperator::Plus(None),
          get_006074(),
        ))
      }
      pub(super) fn get_006104() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_ident_cindent_386(),
        ))
      }
      pub(super) fn get_006105() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("}"))
      }
      pub(super) fn get_006103() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006104(),
          CoreBinaryOperator::Plus(None),
          get_006105(),
        ))
      }
      pub(super) fn get_006102() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006103()]))
      }
      pub(super) fn get_006070() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006071(),
          CoreBinaryOperator::Plus(None),
          get_006102(),
        ))
      }
      pub(super) fn get_ident_lines_393() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("lines", 393u32)
        }))
      }
      pub(super) fn get_006106() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_ident_lines_393()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006069() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lines", 393u32) },
            get_006070(),
          )],
          get_006106(),
        ))
      }
      pub(super) fn get_006067() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006068(), get_006069(), get_null()))
      }
      pub(super) fn get_006021() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006022(), get_006023(), get_006067()))
      }
      pub(super) fn get_006015() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006016(), get_006017(), get_006021()))
      }
      pub(super) fn get_006012() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006013(), get_006014(), get_006015()))
      }
      pub(super) fn get_006009() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006010(), get_006011(), get_006012()))
      }
      pub(super) fn get_006006() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006007(), get_006008(), get_006009()))
      }
      pub(super) fn get_006003() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006004(), get_006005(), get_006006()))
      }
      pub(super) fn get_005999() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006000(), get_006002(), get_006003()))
      }
      pub(super) fn get_005993() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 384u32) },
              get_005994(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("path", 385u32) },
              get_005995(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("cindent", 386u32) },
              get_005997(),
            ),
          ],
          get_005999(),
        ))
      }
      pub(super) fn get_ident_value_381() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 381u32)
        }))
      }
      pub(super) fn get_006110() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006108() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_383(),
          vec![get_ident_value_381(), get_006110(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_005992() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 383u32) },
            get_005993(),
          )],
          get_006108(),
        ))
      }
      pub(super) fn get_005988() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("value", 381u32) },
              get_005989(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("indent", 382u32) },
              get_005990(),
            ),
          ],
          get_005992(),
        ))
      }
      pub(super) fn get_005925() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_005926(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_005928(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_005970(),
            ),
          ],
          get_005988(),
        ))
      }
      pub(super) fn get_006111() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestYamlDoc"))
      }
      pub(super) fn get_006114() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_006113() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_006114(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_006116() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_006117() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_006121() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006120() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_006121(),
        ))
      }
      pub(super) fn get_006119() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006120(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_006123() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006125() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006127() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006130() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_006131() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_006133() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006136() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006138() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006137() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006138(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006140() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006142() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006141() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006142(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006143() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_006139() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006140(), get_006141(), get_006143()))
      }
      pub(super) fn get_006135() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006136(), get_006137(), get_006139()))
      }
      pub(super) fn get_006147() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006146() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006147(),
        ))
      }
      pub(super) fn get_006145() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006146(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006149() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006148() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_006149(),
        ))
      }
      pub(super) fn get_006152() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_006151() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_006152()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006150() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006151()))
      }
      pub(super) fn get_006144() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006145(), get_006148(), get_006150()))
      }
      pub(super) fn get_006134() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_006135(),
          )],
          get_006144(),
        ))
      }
      pub(super) fn get_006132() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_006133(),
          )],
          get_006134(),
        ))
      }
      pub(super) fn get_006129() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_006130(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_006131(),
            ),
          ],
          get_006132(),
        ))
      }
      pub(super) fn get_006154() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006153() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_006154(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006128() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_006129(),
          )],
          get_006153(),
        ))
      }
      pub(super) fn get_006126() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_006127(),
          )],
          get_006128(),
        ))
      }
      pub(super) fn get_006124() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_006125(),
          )],
          get_006126(),
        ))
      }
      pub(super) fn get_006122() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_006123(),
          )],
          get_006124(),
        ))
      }
      pub(super) fn get_006156() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006155() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006156()))
      }
      pub(super) fn get_006118() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006119(), get_006122(), get_006155()))
      }
      pub(super) fn get_006115() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_006116(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_006117(),
            ),
          ],
          get_006118(),
        ))
      }
      pub(super) fn get_006159() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006160() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006158() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006159(),
          )],
          get_006160(),
        ))
      }
      pub(super) fn get_006162() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006161() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006162(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006164() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006166() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006168() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006170() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_006172() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_006174() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_006173() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006174()]))
      }
      pub(super) fn get_006171() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006172(),
          )],
          get_006173(),
        ))
      }
      pub(super) fn get_006169() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_006170(),
          )],
          get_006171(),
        ))
      }
      pub(super) fn get_006167() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006168(), get_006169()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006165() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006166(), get_006167()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006163() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_006164(),
          )],
          get_006165(),
        ))
      }
      pub(super) fn get_006157() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_006158(),
          get_006161(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_006163(),
        ))
      }
      pub(super) fn get_006176() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_006179() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_006180() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005996()))
      }
      pub(super) fn get_006181() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005998()))
      }
      pub(super) fn get_ident_v_400() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 400u32)
        }))
      }
      pub(super) fn get_006183() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_400(), get_true()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006186() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_400(), get_false()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006188() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_400(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006190() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006191() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_000548(),
          CoreBinaryOperator::Plus(None),
          get_ident_v_400(),
        ))
      }
      pub(super) fn get_006193() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006195() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_len_403() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("len", 403u32)
        }))
      }
      pub(super) fn get_006197() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_len_403(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006199() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\"\""))
      }
      pub(super) fn get_006203() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_len_403(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006202() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_v_400(), get_006203()))
      }
      pub(super) fn get_006201() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_006202(), get_003089()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006205() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_split(),
          vec![get_ident_v_400(), get_003089()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_cindent_402() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("cindent", 402u32)
        }))
      }
      pub(super) fn get_006208() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_ident_cindent_402(),
        ))
      }
      pub(super) fn get_006210() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("  "))
      }
      pub(super) fn get_006207() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006208(),
          CoreBinaryOperator::Plus(None),
          get_006210(),
        ))
      }
      pub(super) fn get_006213() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("|"))
      }
      pub(super) fn get_006212() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006213()]))
      }
      pub(super) fn get_ident_split_404() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("split", 404u32)
        }))
      }
      pub(super) fn get_006217() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_split_404()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006216() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006217(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006214() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![
            get_ident_split_404(),
            get_number_0_0(),
            get_006216(),
            get_null(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006211() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006212(),
          CoreBinaryOperator::Plus(None),
          get_006214(),
        ))
      }
      pub(super) fn get_006206() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006207(), get_006211()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006204() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("split", 404u32) },
            get_006205(),
          )],
          get_006206(),
        ))
      }
      pub(super) fn get_006218() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_escapeStringJson(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006200() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006201(), get_006204(), get_006218()))
      }
      pub(super) fn get_006196() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006197(), get_006199(), get_006200()))
      }
      pub(super) fn get_006194() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("len", 403u32) },
            get_006195(),
          )],
          get_006196(),
        ))
      }
      pub(super) fn get_006220() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_path_401() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("path", 401u32)
        }))
      }
      pub(super) fn get_006222() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006019(),
          CoreBinaryOperator::Plus(None),
          get_ident_path_401(),
        ))
      }
      pub(super) fn get_006221() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006222()))
      }
      pub(super) fn get_006225() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006228() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006227() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_006228(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006229() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("[]"))
      }
      pub(super) fn get_006232() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_ident_value_406() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 406u32)
        }))
      }
      pub(super) fn get_006236() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_value_406()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006238() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_value_406()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006235() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006236(),
          CoreBinaryOperator::And(None),
          get_006238(),
        ))
      }
      pub(super) fn get_006234() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006235(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006240() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("new_indent"))
      }
      pub(super) fn get_006242() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cindent_402(),
          CoreBinaryOperator::Plus(None),
          get_006210(),
        ))
      }
      pub(super) fn get_006241() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_006242()))
      }
      pub(super) fn get_006243() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("space"))
      }
      pub(super) fn get_006246() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_self(), get_006240()))
      }
      pub(super) fn get_006245() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_006246(),
        ))
      }
      pub(super) fn get_006244() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_006245()))
      }
      pub(super) fn get_006239() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_006240(),
              CoreObjectFieldOperator::Default(None),
              get_006241(),
            ),
            CoreObjectField::new(
              get_006243(),
              CoreObjectFieldOperator::Default(None),
              get_006244(),
            ),
          ],
        ))
      }
      pub(super) fn get_006250() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_value_406()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006251() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_value_406()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006249() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006250(),
          CoreBinaryOperator::And(None),
          get_006251(),
        ))
      }
      pub(super) fn get_006248() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006249(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006254() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cindent_402(),
          CoreBinaryOperator::Plus(None),
          get_006210(),
        ))
      }
      pub(super) fn get_006253() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_006254()))
      }
      pub(super) fn get_006255() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003349()))
      }
      pub(super) fn get_006252() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_006240(),
              CoreObjectFieldOperator::Default(None),
              get_006253(),
            ),
            CoreObjectField::new(
              get_006243(),
              CoreObjectFieldOperator::Default(None),
              get_006255(),
            ),
          ],
        ))
      }
      pub(super) fn get_006257() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_cindent_402()))
      }
      pub(super) fn get_006258() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003349()))
      }
      pub(super) fn get_006256() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_006240(),
              CoreObjectFieldOperator::Default(None),
              get_006257(),
            ),
            CoreObjectField::new(
              get_006243(),
              CoreObjectFieldOperator::Default(None),
              get_006258(),
            ),
          ],
        ))
      }
      pub(super) fn get_006247() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006248(), get_006252(), get_006256()))
      }
      pub(super) fn get_006233() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006234(), get_006239(), get_006247()))
      }
      pub(super) fn get_006231() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("value", 406u32) },
            get_006232(),
          )],
          get_006233(),
        ))
      }
      pub(super) fn get_006262() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006261() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006262(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006260() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_006261()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_range_407() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("range", 407u32)
        }))
      }
      pub(super) fn get_006267() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_411() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 411u32)
        }))
      }
      pub(super) fn get_006269() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_411()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006272() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_412() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 412u32)
        }))
      }
      pub(super) fn get_006274() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_411(),
          get_ident_genid_i_412(),
        ))
      }
      pub(super) fn get_ident_params_405() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("params", 405u32)
        }))
      }
      pub(super) fn get_ident_i_409() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 409u32)
        }))
      }
      pub(super) fn get_006280() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_400(),
          get_ident_i_409(),
        ))
      }
      pub(super) fn get_006278() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_params_405(),
          vec![get_006280()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006277() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006278()]))
      }
      pub(super) fn get_006283() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_413() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 413u32)
        }))
      }
      pub(super) fn get_006285() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_413()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006288() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_414() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 414u32)
        }))
      }
      pub(super) fn get_006290() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_413(),
          get_ident_genid_i_414(),
        ))
      }
      pub(super) fn get_ident_param_410() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("param", 410u32)
        }))
      }
      pub(super) fn get_member_param_410_space() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_param_410(),
          get_006243(),
        ))
      }
      pub(super) fn get_006294() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_001206(),
          CoreBinaryOperator::Plus(None),
          get_member_param_410_space(),
        ))
      }
      pub(super) fn get_ident_aux_399() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 399u32)
        }))
      }
      pub(super) fn get_006299() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_400(),
          get_ident_i_409(),
        ))
      }
      pub(super) fn get_006301() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_409()]))
      }
      pub(super) fn get_006300() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_path_401(),
          CoreBinaryOperator::Plus(None),
          get_006301(),
        ))
      }
      pub(super) fn get_member_param_410_new_indent() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_param_410(),
          get_006240(),
        ))
      }
      pub(super) fn get_006297() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_399(),
          vec![
            get_006299(),
            get_006300(),
            get_member_param_410_new_indent(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006293() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006294(),
          CoreBinaryOperator::Plus(None),
          get_006297(),
        ))
      }
      pub(super) fn get_006292() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006293()]))
      }
      pub(super) fn get_006289() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("param", 410u32) },
            get_006290(),
          )],
          get_006292(),
        ))
      }
      pub(super) fn get_006287() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 414u32) },
            get_006288(),
          )],
          get_006289(),
        ))
      }
      pub(super) fn get_006284() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006285(), get_006287()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006282() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006283(), get_006284()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006276() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 413u32) },
            get_006277(),
          )],
          get_006282(),
        ))
      }
      pub(super) fn get_006273() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 409u32) },
            get_006274(),
          )],
          get_006276(),
        ))
      }
      pub(super) fn get_006271() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 412u32) },
            get_006272(),
          )],
          get_006273(),
        ))
      }
      pub(super) fn get_006268() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006269(), get_006271()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006266() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006267(), get_006268()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006264() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 411u32) },
            get_ident_range_407(),
          )],
          get_006266(),
        ))
      }
      pub(super) fn get_006304() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_ident_cindent_402(),
        ))
      }
      pub(super) fn get_ident_parts_408() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("parts", 408u32)
        }))
      }
      pub(super) fn get_006303() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006304(), get_ident_parts_408()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006263() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("parts", 408u32) },
            get_006264(),
          )],
          get_006303(),
        ))
      }
      pub(super) fn get_006259() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("range", 407u32) },
            get_006260(),
          )],
          get_006263(),
        ))
      }
      pub(super) fn get_006230() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("params", 405u32) },
            get_006231(),
          )],
          get_006259(),
        ))
      }
      pub(super) fn get_006226() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006227(), get_006229(), get_006230()))
      }
      pub(super) fn get_006307() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006310() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006309() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_006310(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006311() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("{}"))
      }
      pub(super) fn get_006314() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_ident_value_416() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 416u32)
        }))
      }
      pub(super) fn get_006318() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_value_416()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006320() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_value_416()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006317() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006318(),
          CoreBinaryOperator::And(None),
          get_006320(),
        ))
      }
      pub(super) fn get_006316() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006317(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_indent_array_in_object_398() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("indent_array_in_object", 398u32)
        }))
      }
      pub(super) fn get_006325() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cindent_402(),
          CoreBinaryOperator::Plus(None),
          get_006210(),
        ))
      }
      pub(super) fn get_006323() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_indent_array_in_object_398(),
          get_006325(),
          get_ident_cindent_402(),
        ))
      }
      pub(super) fn get_006322() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_006323()))
      }
      pub(super) fn get_006328() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_self(), get_006240()))
      }
      pub(super) fn get_006327() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_006328(),
        ))
      }
      pub(super) fn get_006326() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_006327()))
      }
      pub(super) fn get_006321() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_006240(),
              CoreObjectFieldOperator::Default(None),
              get_006322(),
            ),
            CoreObjectField::new(
              get_006243(),
              CoreObjectFieldOperator::Default(None),
              get_006326(),
            ),
          ],
        ))
      }
      pub(super) fn get_006332() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_value_416()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006333() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_value_416()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006331() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006332(),
          CoreBinaryOperator::And(None),
          get_006333(),
        ))
      }
      pub(super) fn get_006330() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006331(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006336() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_cindent_402(),
          CoreBinaryOperator::Plus(None),
          get_006210(),
        ))
      }
      pub(super) fn get_006335() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_006336()))
      }
      pub(super) fn get_006339() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_self(), get_006240()))
      }
      pub(super) fn get_006338() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_006339(),
        ))
      }
      pub(super) fn get_006337() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_006338()))
      }
      pub(super) fn get_006334() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_006240(),
              CoreObjectFieldOperator::Default(None),
              get_006335(),
            ),
            CoreObjectField::new(
              get_006243(),
              CoreObjectFieldOperator::Default(None),
              get_006337(),
            ),
          ],
        ))
      }
      pub(super) fn get_006341() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_ident_cindent_402()))
      }
      pub(super) fn get_006342() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(vec![], get_003349()))
      }
      pub(super) fn get_006340() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_006240(),
              CoreObjectFieldOperator::Default(None),
              get_006341(),
            ),
            CoreObjectField::new(
              get_006243(),
              CoreObjectFieldOperator::Default(None),
              get_006342(),
            ),
          ],
        ))
      }
      pub(super) fn get_006329() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006330(), get_006334(), get_006340()))
      }
      pub(super) fn get_006315() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006316(), get_006321(), get_006329()))
      }
      pub(super) fn get_006313() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("value", 416u32) },
            get_006314(),
          )],
          get_006315(),
        ))
      }
      pub(super) fn get_006345() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_v_400()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006347() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_420() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 420u32)
        }))
      }
      pub(super) fn get_006349() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_420()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006352() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_421() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 421u32)
        }))
      }
      pub(super) fn get_006354() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_420(),
          get_ident_genid_i_421(),
        ))
      }
      pub(super) fn get_ident_params_415() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("params", 415u32)
        }))
      }
      pub(super) fn get_ident_k_418() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 418u32)
        }))
      }
      pub(super) fn get_006360() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_400(),
          get_ident_k_418(),
        ))
      }
      pub(super) fn get_006358() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_params_415(),
          vec![get_006360()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006357() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006358()]))
      }
      pub(super) fn get_006363() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_422() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 422u32)
        }))
      }
      pub(super) fn get_006365() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_422()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006368() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_423() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 423u32)
        }))
      }
      pub(super) fn get_006370() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_422(),
          get_ident_genid_i_423(),
        ))
      }
      pub(super) fn get_006376() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_escapeStringJson(),
          vec![get_ident_k_418()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006377() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(":"))
      }
      pub(super) fn get_006375() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006376(),
          CoreBinaryOperator::Plus(None),
          get_006377(),
        ))
      }
      pub(super) fn get_ident_param_419() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("param", 419u32)
        }))
      }
      pub(super) fn get_member_param_419_space() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_param_419(),
          get_006243(),
        ))
      }
      pub(super) fn get_006374() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006375(),
          CoreBinaryOperator::Plus(None),
          get_member_param_419_space(),
        ))
      }
      pub(super) fn get_006381() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_400(),
          get_ident_k_418(),
        ))
      }
      pub(super) fn get_006383() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_k_418()]))
      }
      pub(super) fn get_006382() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_path_401(),
          CoreBinaryOperator::Plus(None),
          get_006383(),
        ))
      }
      pub(super) fn get_member_param_419_new_indent() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_param_419(),
          get_006240(),
        ))
      }
      pub(super) fn get_006380() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_399(),
          vec![
            get_006381(),
            get_006382(),
            get_member_param_419_new_indent(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006373() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006374(),
          CoreBinaryOperator::Plus(None),
          get_006380(),
        ))
      }
      pub(super) fn get_006372() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006373()]))
      }
      pub(super) fn get_006369() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("param", 419u32) },
            get_006370(),
          )],
          get_006372(),
        ))
      }
      pub(super) fn get_006367() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 423u32) },
            get_006368(),
          )],
          get_006369(),
        ))
      }
      pub(super) fn get_006364() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006365(), get_006367()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006362() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006363(), get_006364()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006356() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 422u32) },
            get_006357(),
          )],
          get_006362(),
        ))
      }
      pub(super) fn get_006353() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 418u32) },
            get_006354(),
          )],
          get_006356(),
        ))
      }
      pub(super) fn get_006351() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 421u32) },
            get_006352(),
          )],
          get_006353(),
        ))
      }
      pub(super) fn get_006348() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006349(), get_006351()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006346() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006347(), get_006348()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006344() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 420u32) },
            get_006345(),
          )],
          get_006346(),
        ))
      }
      pub(super) fn get_006386() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_003089(),
          CoreBinaryOperator::Plus(None),
          get_ident_cindent_402(),
        ))
      }
      pub(super) fn get_ident_lines_417() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("lines", 417u32)
        }))
      }
      pub(super) fn get_006385() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006386(), get_ident_lines_417()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006343() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lines", 417u32) },
            get_006344(),
          )],
          get_006385(),
        ))
      }
      pub(super) fn get_006312() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("params", 415u32) },
            get_006313(),
          )],
          get_006343(),
        ))
      }
      pub(super) fn get_006308() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006309(), get_006311(), get_006312()))
      }
      pub(super) fn get_006306() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006307(), get_006308(), get_null()))
      }
      pub(super) fn get_006224() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006225(), get_006226(), get_006306()))
      }
      pub(super) fn get_006219() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006220(), get_006221(), get_006224()))
      }
      pub(super) fn get_006192() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006193(), get_006194(), get_006219()))
      }
      pub(super) fn get_006189() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006190(), get_006191(), get_006192()))
      }
      pub(super) fn get_006187() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006188(), get_006008(), get_006189()))
      }
      pub(super) fn get_006185() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006186(), get_006005(), get_006187()))
      }
      pub(super) fn get_006182() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006183(), get_006002(), get_006185()))
      }
      pub(super) fn get_006178() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("v", 400u32) },
              get_006179(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("path", 401u32) },
              get_006180(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("cindent", 402u32) },
              get_006181(),
            ),
          ],
          get_006182(),
        ))
      }
      pub(super) fn get_ident_value_397() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 397u32)
        }))
      }
      pub(super) fn get_006390() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006388() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_399(),
          vec![get_ident_value_397(), get_006390(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006177() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 399u32) },
            get_006178(),
          )],
          get_006388(),
        ))
      }
      pub(super) fn get_006175() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("value", 397u32) },
              get_006176(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("indent_array_in_object", 398u32) },
              get_false(),
            ),
          ],
          get_006177(),
        ))
      }
      pub(super) fn get_006112() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_006113(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_006115(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_006157(),
            ),
          ],
          get_006175(),
        ))
      }
      pub(super) fn get_006391() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestYamlStream"))
      }
      pub(super) fn get_006394() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_006393() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_006394(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_006396() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_006397() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_006401() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006400() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_006401(),
        ))
      }
      pub(super) fn get_006399() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006400(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_006403() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006405() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006407() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006410() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_006411() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_006413() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006416() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006418() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006417() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006418(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006420() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006422() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006421() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006422(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006423() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_006419() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006420(), get_006421(), get_006423()))
      }
      pub(super) fn get_006415() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006416(), get_006417(), get_006419()))
      }
      pub(super) fn get_006427() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006426() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006427(),
        ))
      }
      pub(super) fn get_006425() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006426(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006429() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006428() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_006429(),
        ))
      }
      pub(super) fn get_006432() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_006431() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_006432()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006430() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006431()))
      }
      pub(super) fn get_006424() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006425(), get_006428(), get_006430()))
      }
      pub(super) fn get_006414() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_006415(),
          )],
          get_006424(),
        ))
      }
      pub(super) fn get_006412() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_006413(),
          )],
          get_006414(),
        ))
      }
      pub(super) fn get_006409() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_006410(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_006411(),
            ),
          ],
          get_006412(),
        ))
      }
      pub(super) fn get_006434() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006433() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_006434(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006408() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_006409(),
          )],
          get_006433(),
        ))
      }
      pub(super) fn get_006406() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_006407(),
          )],
          get_006408(),
        ))
      }
      pub(super) fn get_006404() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_006405(),
          )],
          get_006406(),
        ))
      }
      pub(super) fn get_006402() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_006403(),
          )],
          get_006404(),
        ))
      }
      pub(super) fn get_006436() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006435() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006436()))
      }
      pub(super) fn get_006398() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006399(), get_006402(), get_006435()))
      }
      pub(super) fn get_006395() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_006396(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_006397(),
            ),
          ],
          get_006398(),
        ))
      }
      pub(super) fn get_006439() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006440() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006438() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006439(),
          )],
          get_006440(),
        ))
      }
      pub(super) fn get_006442() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006441() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006442(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006444() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006446() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006448() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006450() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_006452() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_006454() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_006453() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006454()]))
      }
      pub(super) fn get_006451() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006452(),
          )],
          get_006453(),
        ))
      }
      pub(super) fn get_006449() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_006450(),
          )],
          get_006451(),
        ))
      }
      pub(super) fn get_006447() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006448(), get_006449()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006445() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006446(), get_006447()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006443() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_006444(),
          )],
          get_006445(),
        ))
      }
      pub(super) fn get_006437() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_006438(),
          get_006441(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_006443(),
        ))
      }
      pub(super) fn get_006456() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_ident_value_424() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 424u32)
        }))
      }
      pub(super) fn get_006459() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_value_424()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006458() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_006459(),
        ))
      }
      pub(super) fn get_006463() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "manifestYamlStream only takes arrays, got ",
        ))
      }
      pub(super) fn get_006464() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_value_424()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006462() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006463(),
          CoreBinaryOperator::Plus(None),
          get_006464(),
        ))
      }
      pub(super) fn get_006461() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006462()))
      }
      pub(super) fn get_006467() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("---\n"))
      }
      pub(super) fn get_006469() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\n---\n"))
      }
      pub(super) fn get_006472() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_428() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 428u32)
        }))
      }
      pub(super) fn get_006474() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_428()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006477() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_429() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 429u32)
        }))
      }
      pub(super) fn get_006479() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_428(),
          get_ident_genid_i_429(),
        ))
      }
      pub(super) fn get_member_std_3_manifestYamlDoc() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_006111()))
      }
      pub(super) fn get_ident_e_427() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("e", 427u32)
        }))
      }
      pub(super) fn get_ident_indent_array_in_object_425() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("indent_array_in_object", 425u32)
        }))
      }
      pub(super) fn get_006482() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_manifestYamlDoc(),
          vec![get_ident_e_427(), get_ident_indent_array_in_object_425()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006481() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006482()]))
      }
      pub(super) fn get_006478() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("e", 427u32) },
            get_006479(),
          )],
          get_006481(),
        ))
      }
      pub(super) fn get_006476() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 429u32) },
            get_006477(),
          )],
          get_006478(),
        ))
      }
      pub(super) fn get_006473() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006474(), get_006476()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006471() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006472(), get_006473()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006470() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 428u32) },
            get_ident_value_424(),
          )],
          get_006471(),
        ))
      }
      pub(super) fn get_006468() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006469(), get_006470()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006466() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006467(),
          CoreBinaryOperator::Plus(None),
          get_006468(),
        ))
      }
      pub(super) fn get_ident_c_document_end_426() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c_document_end", 426u32)
        }))
      }
      pub(super) fn get_006488() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("\n...\n"))
      }
      pub(super) fn get_006486() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_c_document_end_426(),
          get_006488(),
          get_003089(),
        ))
      }
      pub(super) fn get_006465() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006466(),
          CoreBinaryOperator::Plus(None),
          get_006486(),
        ))
      }
      pub(super) fn get_006457() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006458(), get_006461(), get_006465()))
      }
      pub(super) fn get_006455() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("value", 424u32) },
              get_006456(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("indent_array_in_object", 425u32) },
              get_false(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("c_document_end", 426u32) },
              get_true(),
            ),
          ],
          get_006457(),
        ))
      }
      pub(super) fn get_006392() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_006393(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_006395(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_006437(),
            ),
          ],
          get_006455(),
        ))
      }
      pub(super) fn get_006489() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestPython"))
      }
      pub(super) fn get_006492() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_006491() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_006492(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_006494() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_006495() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_006499() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006498() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_006499(),
        ))
      }
      pub(super) fn get_006497() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006498(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_006501() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006503() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006505() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006508() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_006509() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_006511() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006514() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006516() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006515() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006516(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006518() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006520() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006519() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006520(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006521() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_006517() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006518(), get_006519(), get_006521()))
      }
      pub(super) fn get_006513() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006514(), get_006515(), get_006517()))
      }
      pub(super) fn get_006525() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006524() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006525(),
        ))
      }
      pub(super) fn get_006523() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006524(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006527() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006526() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_006527(),
        ))
      }
      pub(super) fn get_006530() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_006529() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_006530()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006528() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006529()))
      }
      pub(super) fn get_006522() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006523(), get_006526(), get_006528()))
      }
      pub(super) fn get_006512() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_006513(),
          )],
          get_006522(),
        ))
      }
      pub(super) fn get_006510() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_006511(),
          )],
          get_006512(),
        ))
      }
      pub(super) fn get_006507() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_006508(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_006509(),
            ),
          ],
          get_006510(),
        ))
      }
      pub(super) fn get_006532() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006531() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_006532(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006506() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_006507(),
          )],
          get_006531(),
        ))
      }
      pub(super) fn get_006504() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_006505(),
          )],
          get_006506(),
        ))
      }
      pub(super) fn get_006502() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_006503(),
          )],
          get_006504(),
        ))
      }
      pub(super) fn get_006500() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_006501(),
          )],
          get_006502(),
        ))
      }
      pub(super) fn get_006534() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006533() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006534()))
      }
      pub(super) fn get_006496() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006497(), get_006500(), get_006533()))
      }
      pub(super) fn get_006493() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_006494(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_006495(),
            ),
          ],
          get_006496(),
        ))
      }
      pub(super) fn get_006537() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006538() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006536() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006537(),
          )],
          get_006538(),
        ))
      }
      pub(super) fn get_006540() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006539() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006540(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006542() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006544() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006546() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006548() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_006550() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_006552() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_006551() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006552()]))
      }
      pub(super) fn get_006549() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006550(),
          )],
          get_006551(),
        ))
      }
      pub(super) fn get_006547() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_006548(),
          )],
          get_006549(),
        ))
      }
      pub(super) fn get_006545() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006546(), get_006547()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006543() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006544(), get_006545()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006541() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_006542(),
          )],
          get_006543(),
        ))
      }
      pub(super) fn get_006535() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_006536(),
          get_006539(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_006541(),
        ))
      }
      pub(super) fn get_006554() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_430() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 430u32)
        }))
      }
      pub(super) fn get_006556() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006560() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006562() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_433() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 433u32)
        }))
      }
      pub(super) fn get_006564() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_433()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006567() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_434() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 434u32)
        }))
      }
      pub(super) fn get_006569() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_433(),
          get_ident_genid_i_434(),
        ))
      }
      pub(super) fn get_006573() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("%s: %s"))
      }
      pub(super) fn get_member_std_3_escapeStringPython() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_005599()))
      }
      pub(super) fn get_ident_k_432() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 432u32)
        }))
      }
      pub(super) fn get_006575() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_escapeStringPython(),
          vec![get_ident_k_432()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_std_3_manifestPython() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_006489()))
      }
      pub(super) fn get_006580() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_430(),
          get_ident_k_432(),
        ))
      }
      pub(super) fn get_006578() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_manifestPython(),
          vec![get_006580()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006574() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006575(), get_006578()]))
      }
      pub(super) fn get_006572() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_006573(), get_006574()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006571() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006572()]))
      }
      pub(super) fn get_006568() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 432u32) },
            get_006569(),
          )],
          get_006571(),
        ))
      }
      pub(super) fn get_006566() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 434u32) },
            get_006567(),
          )],
          get_006568(),
        ))
      }
      pub(super) fn get_006563() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006564(), get_006566()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006561() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006562(), get_006563()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006559() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 433u32) },
            get_006560(),
          )],
          get_006561(),
        ))
      }
      pub(super) fn get_006582() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("{%s}"))
      }
      pub(super) fn get_006585() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(", "))
      }
      pub(super) fn get_ident_fields_431() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("fields", 431u32)
        }))
      }
      pub(super) fn get_006584() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006585(), get_ident_fields_431()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006583() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006584()]))
      }
      pub(super) fn get_006581() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_006582(), get_006583()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006558() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("fields", 431u32) },
            get_006559(),
          )],
          get_006581(),
        ))
      }
      pub(super) fn get_006588() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006594() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_436() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 436u32)
        }))
      }
      pub(super) fn get_006596() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_436()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006599() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_437() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 437u32)
        }))
      }
      pub(super) fn get_006601() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_436(),
          get_ident_genid_i_437(),
        ))
      }
      pub(super) fn get_ident_v2_435() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v2", 435u32)
        }))
      }
      pub(super) fn get_006604() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_manifestPython(),
          vec![get_ident_v2_435()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006603() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006604()]))
      }
      pub(super) fn get_006600() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("v2", 435u32) },
            get_006601(),
          )],
          get_006603(),
        ))
      }
      pub(super) fn get_006598() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 437u32) },
            get_006599(),
          )],
          get_006600(),
        ))
      }
      pub(super) fn get_006595() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006596(), get_006598()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006593() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006594(), get_006595()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006592() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 436u32) },
            get_ident_v_430(),
          )],
          get_006593(),
        ))
      }
      pub(super) fn get_006591() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006585(), get_006592()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006590() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006591()]))
      }
      pub(super) fn get_006589() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005422(), get_006590()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006607() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006609() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("%s"))
      }
      pub(super) fn get_006611() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_escapeStringPython(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006610() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006611()]))
      }
      pub(super) fn get_006608() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_006609(), get_006610()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006613() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isFunction(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006615() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("cannot manifest function"))
      }
      pub(super) fn get_006614() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006615()))
      }
      pub(super) fn get_006617() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isNumber(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006618() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_toString(),
          vec![get_ident_v_430()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006620() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_430(), get_true()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006621() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("True"))
      }
      pub(super) fn get_006623() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_430(), get_false()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006624() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("False"))
      }
      pub(super) fn get_006626() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_v_430(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006627() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("None"))
      }
      pub(super) fn get_006625() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006626(), get_006627(), get_null()))
      }
      pub(super) fn get_006622() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006623(), get_006624(), get_006625()))
      }
      pub(super) fn get_006619() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006620(), get_006621(), get_006622()))
      }
      pub(super) fn get_006616() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006617(), get_006618(), get_006619()))
      }
      pub(super) fn get_006612() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006613(), get_006614(), get_006616()))
      }
      pub(super) fn get_006606() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006607(), get_006608(), get_006612()))
      }
      pub(super) fn get_006587() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006588(), get_006589(), get_006606()))
      }
      pub(super) fn get_006555() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006556(), get_006558(), get_006587()))
      }
      pub(super) fn get_006553() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 430u32) },
            get_006554(),
          )],
          get_006555(),
        ))
      }
      pub(super) fn get_006490() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_006491(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_006493(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_006535(),
            ),
          ],
          get_006553(),
        ))
      }
      pub(super) fn get_006628() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestPythonVars"))
      }
      pub(super) fn get_006631() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_006630() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_006631(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_006633() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_006634() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_006638() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006637() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_006638(),
        ))
      }
      pub(super) fn get_006636() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006637(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_006640() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006642() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006644() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006647() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_006648() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_006650() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006653() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006655() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006654() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006655(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006657() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006659() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006658() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006659(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006660() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_006656() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006657(), get_006658(), get_006660()))
      }
      pub(super) fn get_006652() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006653(), get_006654(), get_006656()))
      }
      pub(super) fn get_006664() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006663() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006664(),
        ))
      }
      pub(super) fn get_006662() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006663(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006666() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006665() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_006666(),
        ))
      }
      pub(super) fn get_006669() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_006668() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_006669()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006667() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006668()))
      }
      pub(super) fn get_006661() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006662(), get_006665(), get_006667()))
      }
      pub(super) fn get_006651() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_006652(),
          )],
          get_006661(),
        ))
      }
      pub(super) fn get_006649() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_006650(),
          )],
          get_006651(),
        ))
      }
      pub(super) fn get_006646() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_006647(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_006648(),
            ),
          ],
          get_006649(),
        ))
      }
      pub(super) fn get_006671() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006670() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_006671(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006645() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_006646(),
          )],
          get_006670(),
        ))
      }
      pub(super) fn get_006643() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_006644(),
          )],
          get_006645(),
        ))
      }
      pub(super) fn get_006641() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_006642(),
          )],
          get_006643(),
        ))
      }
      pub(super) fn get_006639() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_006640(),
          )],
          get_006641(),
        ))
      }
      pub(super) fn get_006673() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006672() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006673()))
      }
      pub(super) fn get_006635() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006636(), get_006639(), get_006672()))
      }
      pub(super) fn get_006632() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_006633(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_006634(),
            ),
          ],
          get_006635(),
        ))
      }
      pub(super) fn get_006676() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006677() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006675() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006676(),
          )],
          get_006677(),
        ))
      }
      pub(super) fn get_006679() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006678() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006679(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006681() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006683() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006685() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006687() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_006689() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_006691() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_006690() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006691()]))
      }
      pub(super) fn get_006688() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006689(),
          )],
          get_006690(),
        ))
      }
      pub(super) fn get_006686() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_006687(),
          )],
          get_006688(),
        ))
      }
      pub(super) fn get_006684() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006685(), get_006686()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006682() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006683(), get_006684()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006680() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_006681(),
          )],
          get_006682(),
        ))
      }
      pub(super) fn get_006674() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_006675(),
          get_006678(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_006680(),
        ))
      }
      pub(super) fn get_006694() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'conf' not bound"))
      }
      pub(super) fn get_006693() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006694()))
      }
      pub(super) fn get_ident_conf_438() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("conf", 438u32)
        }))
      }
      pub(super) fn get_006697() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_conf_438()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006700() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_441() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 441u32)
        }))
      }
      pub(super) fn get_006702() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_441()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006705() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_442() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 442u32)
        }))
      }
      pub(super) fn get_006707() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_441(),
          get_ident_genid_i_442(),
        ))
      }
      pub(super) fn get_ident_k_440() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 440u32)
        }))
      }
      pub(super) fn get_006714() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_conf_438(),
          get_ident_k_440(),
        ))
      }
      pub(super) fn get_006713() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_manifestPython(),
          vec![get_006714()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006711() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_k_440(), get_006713()]))
      }
      pub(super) fn get_006710() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_005407(), get_006711()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006709() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006710()]))
      }
      pub(super) fn get_006706() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 440u32) },
            get_006707(),
          )],
          get_006709(),
        ))
      }
      pub(super) fn get_006704() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 442u32) },
            get_006705(),
          )],
          get_006706(),
        ))
      }
      pub(super) fn get_006701() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006702(), get_006704()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006699() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006700(), get_006701()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006696() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 441u32) },
            get_006697(),
          )],
          get_006699(),
        ))
      }
      pub(super) fn get_ident_vars_439() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("vars", 439u32)
        }))
      }
      pub(super) fn get_006718() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_000548()]))
      }
      pub(super) fn get_006716() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_vars_439(),
          CoreBinaryOperator::Plus(None),
          get_006718(),
        ))
      }
      pub(super) fn get_006715() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_003089(), get_006716()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006695() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("vars", 439u32) },
            get_006696(),
          )],
          get_006715(),
        ))
      }
      pub(super) fn get_006692() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("conf", 438u32) },
            get_006693(),
          )],
          get_006695(),
        ))
      }
      pub(super) fn get_006629() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_006630(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_006632(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_006674(),
            ),
          ],
          get_006692(),
        ))
      }
      pub(super) fn get_006719() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("manifestXmlJsonml"))
      }
      pub(super) fn get_006722() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_006721() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_006722(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_006724() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_006725() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_006729() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006728() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_006729(),
        ))
      }
      pub(super) fn get_006727() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006728(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_006731() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006733() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006735() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006738() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_006739() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_006741() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006744() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006746() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006745() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006746(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006748() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006750() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006749() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006750(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006751() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_006747() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006748(), get_006749(), get_006751()))
      }
      pub(super) fn get_006743() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006744(), get_006745(), get_006747()))
      }
      pub(super) fn get_006755() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006754() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006755(),
        ))
      }
      pub(super) fn get_006753() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006754(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006757() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006756() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_006757(),
        ))
      }
      pub(super) fn get_006760() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_006759() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_006760()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006758() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006759()))
      }
      pub(super) fn get_006752() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006753(), get_006756(), get_006758()))
      }
      pub(super) fn get_006742() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_006743(),
          )],
          get_006752(),
        ))
      }
      pub(super) fn get_006740() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_006741(),
          )],
          get_006742(),
        ))
      }
      pub(super) fn get_006737() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_006738(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_006739(),
            ),
          ],
          get_006740(),
        ))
      }
      pub(super) fn get_006762() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006761() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_006762(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006736() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_006737(),
          )],
          get_006761(),
        ))
      }
      pub(super) fn get_006734() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_006735(),
          )],
          get_006736(),
        ))
      }
      pub(super) fn get_006732() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_006733(),
          )],
          get_006734(),
        ))
      }
      pub(super) fn get_006730() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_006731(),
          )],
          get_006732(),
        ))
      }
      pub(super) fn get_006764() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006763() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006764()))
      }
      pub(super) fn get_006726() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006727(), get_006730(), get_006763()))
      }
      pub(super) fn get_006723() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_006724(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_006725(),
            ),
          ],
          get_006726(),
        ))
      }
      pub(super) fn get_006767() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006768() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006766() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006767(),
          )],
          get_006768(),
        ))
      }
      pub(super) fn get_006770() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006769() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006770(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006772() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006774() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006776() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006778() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_006780() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_006782() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_006781() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006782()]))
      }
      pub(super) fn get_006779() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006780(),
          )],
          get_006781(),
        ))
      }
      pub(super) fn get_006777() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_006778(),
          )],
          get_006779(),
        ))
      }
      pub(super) fn get_006775() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006776(), get_006777()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006773() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006774(), get_006775()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006771() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_006772(),
          )],
          get_006773(),
        ))
      }
      pub(super) fn get_006765() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_006766(),
          get_006769(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_006771(),
        ))
      }
      pub(super) fn get_006784() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_ident_value_443() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 443u32)
        }))
      }
      pub(super) fn get_006787() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_value_443()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006786() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_006787(),
        ))
      }
      pub(super) fn get_006791() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Expected a JSONML value (an array), got %s",
        ))
      }
      pub(super) fn get_006792() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_value_443()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006790() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_006791(), get_006792()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006789() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006790()))
      }
      pub(super) fn get_006795() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000117()))
      }
      pub(super) fn get_ident_v_445() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("v", 445u32)
        }))
      }
      pub(super) fn get_006797() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_v_445()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006800() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_445(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006803() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_v_445()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006806() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_445(),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006805() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_006806()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006804() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_1_0(),
          CoreBinaryOperator::And(None),
          get_006805(),
        ))
      }
      pub(super) fn get_006802() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006803(),
          CoreBinaryOperator::GreaterThan(None),
          get_006804(),
        ))
      }
      pub(super) fn get_ident_has_attrs_447() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("has_attrs", 447u32)
        }))
      }
      pub(super) fn get_006810() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_v_445(),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006811() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(vec![], vec![]))
      }
      pub(super) fn get_006808() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_has_attrs_447(),
          get_006810(),
          get_006811(),
        ))
      }
      pub(super) fn get_006814() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_v_445(), get_number_2_0(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006815() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_v_445(), get_number_1_0(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006813() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_ident_has_attrs_447(),
          get_006814(),
          get_006815(),
        ))
      }
      pub(super) fn get_ident_attrs_448() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("attrs", 448u32)
        }))
      }
      pub(super) fn get_006819() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_attrs_448()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006822() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_452() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 452u32)
        }))
      }
      pub(super) fn get_006824() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_452()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006827() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_453() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 453u32)
        }))
      }
      pub(super) fn get_006829() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_452(),
          get_ident_genid_i_453(),
        ))
      }
      pub(super) fn get_006833() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(" %s=\"%s\""))
      }
      pub(super) fn get_ident_k_451() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 451u32)
        }))
      }
      pub(super) fn get_006836() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_attrs_448(),
          get_ident_k_451(),
        ))
      }
      pub(super) fn get_006834() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_k_451(), get_006836()]))
      }
      pub(super) fn get_006832() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_006833(), get_006834()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006831() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006832()]))
      }
      pub(super) fn get_006828() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 451u32) },
            get_006829(),
          )],
          get_006831(),
        ))
      }
      pub(super) fn get_006826() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 453u32) },
            get_006827(),
          )],
          get_006828(),
        ))
      }
      pub(super) fn get_006823() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006824(), get_006826()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006821() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006822(), get_006823()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006818() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 452u32) },
            get_006819(),
          )],
          get_006821(),
        ))
      }
      pub(super) fn get_006817() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_006818()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006839() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("<"))
      }
      pub(super) fn get_ident_tag_446() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("tag", 446u32)
        }))
      }
      pub(super) fn get_ident_attrs_str_450() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("attrs_str", 450u32)
        }))
      }
      pub(super) fn get_006842() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(">"))
      }
      pub(super) fn get_ident_children_449() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("children", 449u32)
        }))
      }
      pub(super) fn get_006846() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_455() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 455u32)
        }))
      }
      pub(super) fn get_006848() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_455()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006851() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_456() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 456u32)
        }))
      }
      pub(super) fn get_006853() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_455(),
          get_ident_genid_i_456(),
        ))
      }
      pub(super) fn get_ident_aux_444() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 444u32)
        }))
      }
      pub(super) fn get_ident_x_454() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 454u32)
        }))
      }
      pub(super) fn get_006856() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_444(),
          vec![get_ident_x_454()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006855() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006856()]))
      }
      pub(super) fn get_006852() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("x", 454u32) },
            get_006853(),
          )],
          get_006855(),
        ))
      }
      pub(super) fn get_006850() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 456u32) },
            get_006851(),
          )],
          get_006852(),
        ))
      }
      pub(super) fn get_006847() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006848(), get_006850()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006845() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006846(), get_006847()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006843() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 455u32) },
            get_ident_children_449(),
          )],
          get_006845(),
        ))
      }
      pub(super) fn get_006859() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("</"))
      }
      pub(super) fn get_006838() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_006839(),
          get_ident_tag_446(),
          get_ident_attrs_str_450(),
          get_006842(),
          get_006843(),
          get_006859(),
          get_ident_tag_446(),
          get_006842(),
        ]))
      }
      pub(super) fn get_006837() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_deepJoin(),
          vec![get_006838()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006816() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("attrs_str", 450u32) },
            get_006817(),
          )],
          get_006837(),
        ))
      }
      pub(super) fn get_006812() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("children", 449u32) },
            get_006813(),
          )],
          get_006816(),
        ))
      }
      pub(super) fn get_006807() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("attrs", 448u32) },
            get_006808(),
          )],
          get_006812(),
        ))
      }
      pub(super) fn get_006801() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("has_attrs", 447u32) },
            get_006802(),
          )],
          get_006807(),
        ))
      }
      pub(super) fn get_006799() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("tag", 446u32) },
            get_006800(),
          )],
          get_006801(),
        ))
      }
      pub(super) fn get_006796() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_006797(),
          get_ident_v_445(),
          get_006799(),
        ))
      }
      pub(super) fn get_006794() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("v", 445u32) },
            get_006795(),
          )],
          get_006796(),
        ))
      }
      pub(super) fn get_006860() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_444(),
          vec![get_ident_value_443()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006793() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 444u32) },
            get_006794(),
          )],
          get_006860(),
        ))
      }
      pub(super) fn get_006785() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006786(), get_006789(), get_006793()))
      }
      pub(super) fn get_006783() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("value", 443u32) },
            get_006784(),
          )],
          get_006785(),
        ))
      }
      pub(super) fn get_006720() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_006721(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_006723(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_006765(),
            ),
          ],
          get_006783(),
        ))
      }
      pub(super) fn get_006861() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("base64"))
      }
      pub(super) fn get_006864() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_006863() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_006864(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_006866() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_006867() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_006871() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006870() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_006871(),
        ))
      }
      pub(super) fn get_006869() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006870(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_006873() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006875() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006877() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006880() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_006881() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_006883() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006886() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006888() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_006887() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006888(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006890() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006892() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_006891() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006892(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_006893() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_006889() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006890(), get_006891(), get_006893()))
      }
      pub(super) fn get_006885() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006886(), get_006887(), get_006889()))
      }
      pub(super) fn get_006897() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006896() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006897(),
        ))
      }
      pub(super) fn get_006895() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006896(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_006899() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_006898() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_006899(),
        ))
      }
      pub(super) fn get_006902() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_006901() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_006902()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006900() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006901()))
      }
      pub(super) fn get_006894() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006895(), get_006898(), get_006900()))
      }
      pub(super) fn get_006884() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_006885(),
          )],
          get_006894(),
        ))
      }
      pub(super) fn get_006882() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_006883(),
          )],
          get_006884(),
        ))
      }
      pub(super) fn get_006879() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_006880(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_006881(),
            ),
          ],
          get_006882(),
        ))
      }
      pub(super) fn get_006904() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006903() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_006904(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006878() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_006879(),
          )],
          get_006903(),
        ))
      }
      pub(super) fn get_006876() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_006877(),
          )],
          get_006878(),
        ))
      }
      pub(super) fn get_006874() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_006875(),
          )],
          get_006876(),
        ))
      }
      pub(super) fn get_006872() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_006873(),
          )],
          get_006874(),
        ))
      }
      pub(super) fn get_006906() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006905() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006906()))
      }
      pub(super) fn get_006868() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006869(), get_006872(), get_006905()))
      }
      pub(super) fn get_006865() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_006866(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_006867(),
            ),
          ],
          get_006868(),
        ))
      }
      pub(super) fn get_006909() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006910() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006908() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006909(),
          )],
          get_006910(),
        ))
      }
      pub(super) fn get_006912() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_006911() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006912(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_006914() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006916() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_006918() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006920() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_006922() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_006924() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_006923() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_006924()]))
      }
      pub(super) fn get_006921() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_006922(),
          )],
          get_006923(),
        ))
      }
      pub(super) fn get_006919() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_006920(),
          )],
          get_006921(),
        ))
      }
      pub(super) fn get_006917() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_006918(), get_006919()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006915() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_006916(), get_006917()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006913() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_006914(),
          )],
          get_006915(),
        ))
      }
      pub(super) fn get_006907() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_006908(),
          get_006911(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_006913(),
        ))
      }
      pub(super) fn get_006927() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'input' not bound"))
      }
      pub(super) fn get_006926() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006927()))
      }
      pub(super) fn get_ident_input_457() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("input", 457u32)
        }))
      }
      pub(super) fn get_006930() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_input_457()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006934() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001447()))
      }
      pub(super) fn get_ident_c_459() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("c", 459u32)
        }))
      }
      pub(super) fn get_006935() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_c_459()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006933() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("c", 459u32) },
            get_006934(),
          )],
          get_006935(),
        ))
      }
      pub(super) fn get_006932() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_map(),
          vec![get_006933(), get_ident_input_457()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006929() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_006930(),
          get_006932(),
          get_ident_input_457(),
        ))
      }
      pub(super) fn get_006939() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_006940() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_006942() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'r' not bound"))
      }
      pub(super) fn get_006941() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006942()))
      }
      pub(super) fn get_ident_i_462() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 462u32)
        }))
      }
      pub(super) fn get_ident_arr_461() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 461u32)
        }))
      }
      pub(super) fn get_006946() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_461()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006944() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006946(),
        ))
      }
      pub(super) fn get_ident_r_463() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("r", 463u32)
        }))
      }
      pub(super) fn get_006952() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_461()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006951() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_1_0(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006952(),
        ))
      }
      pub(super) fn get_006950() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_006951(),
        ))
      }
      pub(super) fn get_006959() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_461(),
          get_ident_i_462(),
        ))
      }
      pub(super) fn get_number_252_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(252f64))
      }
      pub(super) fn get_006958() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006959(),
          CoreBinaryOperator::BitAnd(None),
          get_number_252_0(),
        ))
      }
      pub(super) fn get_006957() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006958(),
          CoreBinaryOperator::ShiftR(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_006956() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_006957(),
        ))
      }
      pub(super) fn get_006964() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_461(),
          get_ident_i_462(),
        ))
      }
      pub(super) fn get_006963() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006964(),
          CoreBinaryOperator::BitAnd(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_006962() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006963(),
          CoreBinaryOperator::ShiftL(None),
          get_number_4_0(),
        ))
      }
      pub(super) fn get_006961() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_006962(),
        ))
      }
      pub(super) fn get_006955() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006956(),
          CoreBinaryOperator::Plus(None),
          get_006961(),
        ))
      }
      pub(super) fn get_006965() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("=="))
      }
      pub(super) fn get_006954() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006955(),
          CoreBinaryOperator::Plus(None),
          get_006965(),
        ))
      }
      pub(super) fn get_ident_aux_460() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 460u32)
        }))
      }
      pub(super) fn get_006968() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_ident_str_464() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 464u32)
        }))
      }
      pub(super) fn get_006969() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_r_463(),
          CoreBinaryOperator::Plus(None),
          get_ident_str_464(),
        ))
      }
      pub(super) fn get_006966() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_460(),
          vec![get_ident_arr_461(), get_006968(), get_006969()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_006953() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str", 464u32) },
            get_006954(),
          )],
          get_006966(),
        ))
      }
      pub(super) fn get_006974() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_461()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_006973() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_2_0(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_006974(),
        ))
      }
      pub(super) fn get_006972() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_006973(),
        ))
      }
      pub(super) fn get_006982() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_461(),
          get_ident_i_462(),
        ))
      }
      pub(super) fn get_006981() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006982(),
          CoreBinaryOperator::BitAnd(None),
          get_number_252_0(),
        ))
      }
      pub(super) fn get_006980() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006981(),
          CoreBinaryOperator::ShiftR(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_006979() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_006980(),
        ))
      }
      pub(super) fn get_006987() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_461(),
          get_ident_i_462(),
        ))
      }
      pub(super) fn get_006986() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006987(),
          CoreBinaryOperator::BitAnd(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_006991() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006990() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_461(), get_006991()))
      }
      pub(super) fn get_number_240_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(240f64))
      }
      pub(super) fn get_006989() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006990(),
          CoreBinaryOperator::BitAnd(None),
          get_number_240_0(),
        ))
      }
      pub(super) fn get_006988() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_4_0(),
          CoreBinaryOperator::BitOr(None),
          get_006989(),
        ))
      }
      pub(super) fn get_006985() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006986(),
          CoreBinaryOperator::ShiftL(None),
          get_006988(),
        ))
      }
      pub(super) fn get_006984() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006985(),
          CoreBinaryOperator::ShiftR(None),
          get_number_4_0(),
        ))
      }
      pub(super) fn get_006983() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_006984(),
        ))
      }
      pub(super) fn get_006978() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006979(),
          CoreBinaryOperator::Plus(None),
          get_006983(),
        ))
      }
      pub(super) fn get_006997() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_006996() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_461(), get_006997()))
      }
      pub(super) fn get_number_15_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(15f64))
      }
      pub(super) fn get_006995() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006996(),
          CoreBinaryOperator::BitAnd(None),
          get_number_15_0(),
        ))
      }
      pub(super) fn get_006994() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006995(),
          CoreBinaryOperator::ShiftL(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_006993() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_006994(),
        ))
      }
      pub(super) fn get_006977() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006978(),
          CoreBinaryOperator::Plus(None),
          get_006993(),
        ))
      }
      pub(super) fn get_006999() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("="))
      }
      pub(super) fn get_006976() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_006977(),
          CoreBinaryOperator::Plus(None),
          get_006999(),
        ))
      }
      pub(super) fn get_007001() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_ident_str_465() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 465u32)
        }))
      }
      pub(super) fn get_007002() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_r_463(),
          CoreBinaryOperator::Plus(None),
          get_ident_str_465(),
        ))
      }
      pub(super) fn get_007000() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_460(),
          vec![get_ident_arr_461(), get_007001(), get_007002()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_006975() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str", 465u32) },
            get_006976(),
          )],
          get_007000(),
        ))
      }
      pub(super) fn get_007011() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_461(),
          get_ident_i_462(),
        ))
      }
      pub(super) fn get_007010() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007011(),
          CoreBinaryOperator::BitAnd(None),
          get_number_252_0(),
        ))
      }
      pub(super) fn get_007009() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007010(),
          CoreBinaryOperator::ShiftR(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007008() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_007009(),
        ))
      }
      pub(super) fn get_007016() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_461(),
          get_ident_i_462(),
        ))
      }
      pub(super) fn get_007015() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007016(),
          CoreBinaryOperator::BitAnd(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_007020() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007019() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_461(), get_007020()))
      }
      pub(super) fn get_007018() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007019(),
          CoreBinaryOperator::BitAnd(None),
          get_number_240_0(),
        ))
      }
      pub(super) fn get_007017() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_4_0(),
          CoreBinaryOperator::BitOr(None),
          get_007018(),
        ))
      }
      pub(super) fn get_007014() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007015(),
          CoreBinaryOperator::ShiftL(None),
          get_007017(),
        ))
      }
      pub(super) fn get_007013() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007014(),
          CoreBinaryOperator::ShiftR(None),
          get_number_4_0(),
        ))
      }
      pub(super) fn get_007012() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_007013(),
        ))
      }
      pub(super) fn get_007007() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007008(),
          CoreBinaryOperator::Plus(None),
          get_007012(),
        ))
      }
      pub(super) fn get_007026() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007025() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_461(), get_007026()))
      }
      pub(super) fn get_007024() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007025(),
          CoreBinaryOperator::BitAnd(None),
          get_number_15_0(),
        ))
      }
      pub(super) fn get_007030() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007029() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_461(), get_007030()))
      }
      pub(super) fn get_number_192_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(192f64))
      }
      pub(super) fn get_007028() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007029(),
          CoreBinaryOperator::BitAnd(None),
          get_number_192_0(),
        ))
      }
      pub(super) fn get_007027() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_2_0(),
          CoreBinaryOperator::BitOr(None),
          get_007028(),
        ))
      }
      pub(super) fn get_007023() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007024(),
          CoreBinaryOperator::ShiftL(None),
          get_007027(),
        ))
      }
      pub(super) fn get_007022() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007023(),
          CoreBinaryOperator::ShiftR(None),
          get_number_6_0(),
        ))
      }
      pub(super) fn get_007021() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_007022(),
        ))
      }
      pub(super) fn get_007006() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007007(),
          CoreBinaryOperator::Plus(None),
          get_007021(),
        ))
      }
      pub(super) fn get_007035() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007034() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_461(), get_007035()))
      }
      pub(super) fn get_007033() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007034(),
          CoreBinaryOperator::BitAnd(None),
          get_number_63_0(),
        ))
      }
      pub(super) fn get_007032() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_007033(),
        ))
      }
      pub(super) fn get_007005() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007006(),
          CoreBinaryOperator::Plus(None),
          get_007032(),
        ))
      }
      pub(super) fn get_007037() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_462(),
          CoreBinaryOperator::Plus(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_ident_str_466() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 466u32)
        }))
      }
      pub(super) fn get_007038() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_r_463(),
          CoreBinaryOperator::Plus(None),
          get_ident_str_466(),
        ))
      }
      pub(super) fn get_007036() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_460(),
          vec![get_ident_arr_461(), get_007037(), get_007038()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007004() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str", 466u32) },
            get_007005(),
          )],
          get_007036(),
        ))
      }
      pub(super) fn get_006971() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006972(), get_006975(), get_007004()))
      }
      pub(super) fn get_006949() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_006950(), get_006953(), get_006971()))
      }
      pub(super) fn get_006943() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_006944(),
          get_ident_r_463(),
          get_006949(),
        ))
      }
      pub(super) fn get_006938() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 461u32) },
              get_006939(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 462u32) },
              get_006940(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("r", 463u32) },
              get_006941(),
            ),
          ],
          get_006943(),
        ))
      }
      pub(super) fn get_007043() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006942()))
      }
      pub(super) fn get_007044() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_ident_r_468() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("r", 468u32)
        }))
      }
      pub(super) fn get_ident_a_469() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 469u32)
        }))
      }
      pub(super) fn get_number_256_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(256f64))
      }
      pub(super) fn get_007047() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_a_469(),
          CoreBinaryOperator::LessThan(None),
          get_number_256_0(),
        ))
      }
      pub(super) fn get_007045() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_r_468(),
          CoreBinaryOperator::And(None),
          get_007047(),
        ))
      }
      pub(super) fn get_007042() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("r", 468u32) },
              get_007043(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 469u32) },
              get_007044(),
            ),
          ],
          get_007045(),
        ))
      }
      pub(super) fn get_ident_bytes_458() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("bytes", 458u32)
        }))
      }
      pub(super) fn get_007041() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_007042(), get_ident_bytes_458(), get_true()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_sanity_467() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("sanity", 467u32)
        }))
      }
      pub(super) fn get_007052() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_ident_sanity_467(),
        ))
      }
      pub(super) fn get_007055() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Can only base64 encode strings / arrays of single bytes.",
        ))
      }
      pub(super) fn get_007054() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007055()))
      }
      pub(super) fn get_007056() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_460(),
          vec![get_ident_bytes_458(), get_number_0_0(), get_000548()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007051() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007052(), get_007054(), get_007056()))
      }
      pub(super) fn get_007040() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("sanity", 467u32) },
            get_007041(),
          )],
          get_007051(),
        ))
      }
      pub(super) fn get_006937() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 460u32) },
            get_006938(),
          )],
          get_007040(),
        ))
      }
      pub(super) fn get_006928() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("bytes", 458u32) },
            get_006929(),
          )],
          get_006937(),
        ))
      }
      pub(super) fn get_006925() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("input", 457u32) },
            get_006926(),
          )],
          get_006928(),
        ))
      }
      pub(super) fn get_006862() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_006863(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_006865(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_006907(),
            ),
          ],
          get_006925(),
        ))
      }
      pub(super) fn get_007057() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("base64DecodeBytes"))
      }
      pub(super) fn get_007060() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007059() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007060(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007062() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007063() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007067() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007066() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007067(),
        ))
      }
      pub(super) fn get_007065() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007066(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007069() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007071() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007073() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007076() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007077() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007079() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007082() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007084() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007083() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007084(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007086() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007088() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007087() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007088(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007089() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007085() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007086(), get_007087(), get_007089()))
      }
      pub(super) fn get_007081() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007082(), get_007083(), get_007085()))
      }
      pub(super) fn get_007093() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007092() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007093(),
        ))
      }
      pub(super) fn get_007091() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007092(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007095() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007094() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007095(),
        ))
      }
      pub(super) fn get_007098() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007097() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007098()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007096() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007097()))
      }
      pub(super) fn get_007090() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007091(), get_007094(), get_007096()))
      }
      pub(super) fn get_007080() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007081(),
          )],
          get_007090(),
        ))
      }
      pub(super) fn get_007078() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007079(),
          )],
          get_007080(),
        ))
      }
      pub(super) fn get_007075() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007076(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007077(),
            ),
          ],
          get_007078(),
        ))
      }
      pub(super) fn get_007100() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007099() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007100(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007074() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007075(),
          )],
          get_007099(),
        ))
      }
      pub(super) fn get_007072() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007073(),
          )],
          get_007074(),
        ))
      }
      pub(super) fn get_007070() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007071(),
          )],
          get_007072(),
        ))
      }
      pub(super) fn get_007068() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007069(),
          )],
          get_007070(),
        ))
      }
      pub(super) fn get_007102() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007101() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007102()))
      }
      pub(super) fn get_007064() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007065(), get_007068(), get_007101()))
      }
      pub(super) fn get_007061() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007062(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007063(),
            ),
          ],
          get_007064(),
        ))
      }
      pub(super) fn get_007105() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007106() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007104() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007105(),
          )],
          get_007106(),
        ))
      }
      pub(super) fn get_007108() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007107() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007108(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007110() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007112() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007114() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007116() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007118() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007120() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007119() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007120()]))
      }
      pub(super) fn get_007117() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007118(),
          )],
          get_007119(),
        ))
      }
      pub(super) fn get_007115() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007116(),
          )],
          get_007117(),
        ))
      }
      pub(super) fn get_007113() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007114(), get_007115()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007111() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007112(), get_007113()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007109() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007110(),
          )],
          get_007111(),
        ))
      }
      pub(super) fn get_007103() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007104(),
          get_007107(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007109(),
        ))
      }
      pub(super) fn get_007122() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_ident_str_470() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 470u32)
        }))
      }
      pub(super) fn get_007125() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_470()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007128() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_number_4_0(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007127() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_007128(),
        ))
      }
      pub(super) fn get_007124() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_007125(), get_007127()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007131() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "Not a base64 encoded string \"%s\"",
        ))
      }
      pub(super) fn get_007130() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_007131(), get_ident_str_470()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007129() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007130()))
      }
      pub(super) fn get_007134() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007135() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_007136() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006942()))
      }
      pub(super) fn get_ident_i_473() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 473u32)
        }))
      }
      pub(super) fn get_ident_str_472() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 472u32)
        }))
      }
      pub(super) fn get_007140() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_472()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007138() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007140(),
        ))
      }
      pub(super) fn get_ident_r_474() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("r", 474u32)
        }))
      }
      pub(super) fn get_ident_base64_inv_7() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("base64_inv", 7u32)
        }))
      }
      pub(super) fn get_007148() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_str_472(),
          get_ident_i_473(),
        ))
      }
      pub(super) fn get_007146() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_inv_7(),
          get_007148(),
        ))
      }
      pub(super) fn get_007153() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007152() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_472(), get_007153()))
      }
      pub(super) fn get_007151() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_inv_7(),
          get_007152(),
        ))
      }
      pub(super) fn get_007150() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007151(),
          CoreBinaryOperator::ShiftR(None),
          get_number_4_0(),
        ))
      }
      pub(super) fn get_007149() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_2_0(),
          CoreBinaryOperator::BitOr(None),
          get_007150(),
        ))
      }
      pub(super) fn get_007145() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007146(),
          CoreBinaryOperator::ShiftL(None),
          get_007149(),
        ))
      }
      pub(super) fn get_007144() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007145()]))
      }
      pub(super) fn get_007158() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007157() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_472(), get_007158()))
      }
      pub(super) fn get_007156() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_007157(), get_006999()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007159() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007165() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007164() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_472(), get_007165()))
      }
      pub(super) fn get_007163() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_inv_7(),
          get_007164(),
        ))
      }
      pub(super) fn get_007162() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007163(),
          CoreBinaryOperator::BitAnd(None),
          get_number_15_0(),
        ))
      }
      pub(super) fn get_007170() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007169() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_472(), get_007170()))
      }
      pub(super) fn get_007168() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_inv_7(),
          get_007169(),
        ))
      }
      pub(super) fn get_007167() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007168(),
          CoreBinaryOperator::ShiftR(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007166() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_4_0(),
          CoreBinaryOperator::BitOr(None),
          get_007167(),
        ))
      }
      pub(super) fn get_007161() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007162(),
          CoreBinaryOperator::ShiftL(None),
          get_007166(),
        ))
      }
      pub(super) fn get_007160() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007161()]))
      }
      pub(super) fn get_007155() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007156(), get_007159(), get_007160()))
      }
      pub(super) fn get_007175() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_007174() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_472(), get_007175()))
      }
      pub(super) fn get_007173() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_007174(), get_006999()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007176() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007182() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007181() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_472(), get_007182()))
      }
      pub(super) fn get_007180() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_inv_7(),
          get_007181(),
        ))
      }
      pub(super) fn get_007179() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007180(),
          CoreBinaryOperator::BitAnd(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_007186() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_3_0(),
        ))
      }
      pub(super) fn get_007185() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_str_472(), get_007186()))
      }
      pub(super) fn get_007184() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_inv_7(),
          get_007185(),
        ))
      }
      pub(super) fn get_007183() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_6_0(),
          CoreBinaryOperator::BitOr(None),
          get_007184(),
        ))
      }
      pub(super) fn get_007178() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007179(),
          CoreBinaryOperator::ShiftL(None),
          get_007183(),
        ))
      }
      pub(super) fn get_007177() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007178()]))
      }
      pub(super) fn get_007172() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007173(), get_007176(), get_007177()))
      }
      pub(super) fn get_ident_aux_471() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 471u32)
        }))
      }
      pub(super) fn get_007189() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_473(),
          CoreBinaryOperator::Plus(None),
          get_number_4_0(),
        ))
      }
      pub(super) fn get_ident_n1_475() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n1", 475u32)
        }))
      }
      pub(super) fn get_007192() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_r_474(),
          CoreBinaryOperator::Plus(None),
          get_ident_n1_475(),
        ))
      }
      pub(super) fn get_ident_n2_476() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n2", 476u32)
        }))
      }
      pub(super) fn get_007191() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007192(),
          CoreBinaryOperator::Plus(None),
          get_ident_n2_476(),
        ))
      }
      pub(super) fn get_ident_n3_477() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("n3", 477u32)
        }))
      }
      pub(super) fn get_007190() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007191(),
          CoreBinaryOperator::Plus(None),
          get_ident_n3_477(),
        ))
      }
      pub(super) fn get_007187() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_471(),
          vec![get_ident_str_472(), get_007189(), get_007190()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007171() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("n3", 477u32) },
            get_007172(),
          )],
          get_007187(),
        ))
      }
      pub(super) fn get_007154() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("n2", 476u32) },
            get_007155(),
          )],
          get_007171(),
        ))
      }
      pub(super) fn get_007143() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("n1", 475u32) },
            get_007144(),
          )],
          get_007154(),
        ))
      }
      pub(super) fn get_007137() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_007138(),
          get_ident_r_474(),
          get_007143(),
        ))
      }
      pub(super) fn get_007133() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 472u32) },
              get_007134(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 473u32) },
              get_007135(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("r", 474u32) },
              get_007136(),
            ),
          ],
          get_007137(),
        ))
      }
      pub(super) fn get_007197() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007196() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_471(),
          vec![get_ident_str_470(), get_number_0_0(), get_007197()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007132() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 471u32) },
            get_007133(),
          )],
          get_007196(),
        ))
      }
      pub(super) fn get_007123() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007124(), get_007129(), get_007132()))
      }
      pub(super) fn get_007121() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 470u32) },
            get_007122(),
          )],
          get_007123(),
        ))
      }
      pub(super) fn get_007058() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007059(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007061(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007103(),
            ),
          ],
          get_007121(),
        ))
      }
      pub(super) fn get_007198() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("base64Decode"))
      }
      pub(super) fn get_007201() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007200() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007201(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007203() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007204() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007208() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007207() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007208(),
        ))
      }
      pub(super) fn get_007206() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007207(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007210() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007212() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007214() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007217() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007218() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007220() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007223() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007225() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007224() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007225(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007227() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007229() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007228() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007229(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007230() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007226() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007227(), get_007228(), get_007230()))
      }
      pub(super) fn get_007222() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007223(), get_007224(), get_007226()))
      }
      pub(super) fn get_007234() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007233() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007234(),
        ))
      }
      pub(super) fn get_007232() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007233(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007236() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007235() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007236(),
        ))
      }
      pub(super) fn get_007239() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007238() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007239()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007237() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007238()))
      }
      pub(super) fn get_007231() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007232(), get_007235(), get_007237()))
      }
      pub(super) fn get_007221() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007222(),
          )],
          get_007231(),
        ))
      }
      pub(super) fn get_007219() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007220(),
          )],
          get_007221(),
        ))
      }
      pub(super) fn get_007216() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007217(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007218(),
            ),
          ],
          get_007219(),
        ))
      }
      pub(super) fn get_007241() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007240() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007241(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007215() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007216(),
          )],
          get_007240(),
        ))
      }
      pub(super) fn get_007213() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007214(),
          )],
          get_007215(),
        ))
      }
      pub(super) fn get_007211() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007212(),
          )],
          get_007213(),
        ))
      }
      pub(super) fn get_007209() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007210(),
          )],
          get_007211(),
        ))
      }
      pub(super) fn get_007243() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007242() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007243()))
      }
      pub(super) fn get_007205() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007206(), get_007209(), get_007242()))
      }
      pub(super) fn get_007202() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007203(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007204(),
            ),
          ],
          get_007205(),
        ))
      }
      pub(super) fn get_007246() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007247() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007245() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007246(),
          )],
          get_007247(),
        ))
      }
      pub(super) fn get_007249() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007248() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007249(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007251() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007253() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007255() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007257() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007259() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007261() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007260() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007261()]))
      }
      pub(super) fn get_007258() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007259(),
          )],
          get_007260(),
        ))
      }
      pub(super) fn get_007256() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007257(),
          )],
          get_007258(),
        ))
      }
      pub(super) fn get_007254() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007255(), get_007256()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007252() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007253(), get_007254()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007250() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007251(),
          )],
          get_007252(),
        ))
      }
      pub(super) fn get_007244() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007245(),
          get_007248(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007250(),
        ))
      }
      pub(super) fn get_007263() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_member_std_3_base64DecodeBytes() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_007057()))
      }
      pub(super) fn get_ident_str_478() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 478u32)
        }))
      }
      pub(super) fn get_007265() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_base64DecodeBytes(),
          vec![get_ident_str_478()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007271() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_b_480() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 480u32)
        }))
      }
      pub(super) fn get_007272() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_char(),
          vec![get_ident_b_480()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007270() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("b", 480u32) },
            get_007271(),
          )],
          get_007272(),
        ))
      }
      pub(super) fn get_ident_bytes_479() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("bytes", 479u32)
        }))
      }
      pub(super) fn get_007269() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_map(),
          vec![get_007270(), get_ident_bytes_479()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007268() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_000548(), get_007269()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007264() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("bytes", 479u32) },
            get_007265(),
          )],
          get_007268(),
        ))
      }
      pub(super) fn get_007262() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("str", 478u32) },
            get_007263(),
          )],
          get_007264(),
        ))
      }
      pub(super) fn get_007199() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007200(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007202(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007244(),
            ),
          ],
          get_007262(),
        ))
      }
      pub(super) fn get_007275() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("reverse"))
      }
      pub(super) fn get_007278() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007277() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007278(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007280() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007281() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007285() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007284() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007285(),
        ))
      }
      pub(super) fn get_007283() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007284(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007287() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007289() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007291() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007294() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007295() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007297() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007300() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007302() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007301() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007302(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007304() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007306() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007305() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007306(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007307() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007303() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007304(), get_007305(), get_007307()))
      }
      pub(super) fn get_007299() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007300(), get_007301(), get_007303()))
      }
      pub(super) fn get_007311() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007310() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007311(),
        ))
      }
      pub(super) fn get_007309() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007310(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007313() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007312() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007313(),
        ))
      }
      pub(super) fn get_007316() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007315() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007316()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007314() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007315()))
      }
      pub(super) fn get_007308() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007309(), get_007312(), get_007314()))
      }
      pub(super) fn get_007298() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007299(),
          )],
          get_007308(),
        ))
      }
      pub(super) fn get_007296() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007297(),
          )],
          get_007298(),
        ))
      }
      pub(super) fn get_007293() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007294(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007295(),
            ),
          ],
          get_007296(),
        ))
      }
      pub(super) fn get_007318() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007317() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007318(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007292() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007293(),
          )],
          get_007317(),
        ))
      }
      pub(super) fn get_007290() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007291(),
          )],
          get_007292(),
        ))
      }
      pub(super) fn get_007288() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007289(),
          )],
          get_007290(),
        ))
      }
      pub(super) fn get_007286() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007287(),
          )],
          get_007288(),
        ))
      }
      pub(super) fn get_007320() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007319() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007320()))
      }
      pub(super) fn get_007282() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007283(), get_007286(), get_007319()))
      }
      pub(super) fn get_007279() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007280(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007281(),
            ),
          ],
          get_007282(),
        ))
      }
      pub(super) fn get_007323() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007324() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007322() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007323(),
          )],
          get_007324(),
        ))
      }
      pub(super) fn get_007326() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007325() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007326(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007328() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007330() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007332() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007334() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007336() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007338() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007337() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007338()]))
      }
      pub(super) fn get_007335() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007336(),
          )],
          get_007337(),
        ))
      }
      pub(super) fn get_007333() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007334(),
          )],
          get_007335(),
        ))
      }
      pub(super) fn get_007331() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007332(), get_007333()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007329() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007330(), get_007331()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007327() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007328(),
          )],
          get_007329(),
        ))
      }
      pub(super) fn get_007321() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007322(),
          get_007325(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007327(),
        ))
      }
      pub(super) fn get_007340() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_arr_481() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 481u32)
        }))
      }
      pub(super) fn get_007342() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_481()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_l_482() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("l", 482u32)
        }))
      }
      pub(super) fn get_007347() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_483() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 483u32)
        }))
      }
      pub(super) fn get_007350() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_l_482(),
          CoreBinaryOperator::Minus(None),
          get_ident_i_483(),
        ))
      }
      pub(super) fn get_007349() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007350(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007348() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_481(), get_007349()))
      }
      pub(super) fn get_007346() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 483u32) },
            get_007347(),
          )],
          get_007348(),
        ))
      }
      pub(super) fn get_007344() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_ident_l_482(), get_007346()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007341() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("l", 482u32) },
            get_007342(),
          )],
          get_007344(),
        ))
      }
      pub(super) fn get_007339() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("arr", 481u32) },
            get_007340(),
          )],
          get_007341(),
        ))
      }
      pub(super) fn get_007276() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007277(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007279(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007321(),
            ),
          ],
          get_007339(),
        ))
      }
      pub(super) fn get_007352() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("sort"))
      }
      pub(super) fn get_007355() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007354() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007355(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007357() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007358() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007362() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007361() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007362(),
        ))
      }
      pub(super) fn get_007360() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007361(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007364() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007366() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007368() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007371() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007372() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007374() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007377() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007379() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007378() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007379(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007381() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007383() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007382() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007383(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007384() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007380() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007381(), get_007382(), get_007384()))
      }
      pub(super) fn get_007376() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007377(), get_007378(), get_007380()))
      }
      pub(super) fn get_007388() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007387() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007388(),
        ))
      }
      pub(super) fn get_007386() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007387(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007390() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007389() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007390(),
        ))
      }
      pub(super) fn get_007393() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007392() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007393()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007391() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007392()))
      }
      pub(super) fn get_007385() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007386(), get_007389(), get_007391()))
      }
      pub(super) fn get_007375() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007376(),
          )],
          get_007385(),
        ))
      }
      pub(super) fn get_007373() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007374(),
          )],
          get_007375(),
        ))
      }
      pub(super) fn get_007370() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007371(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007372(),
            ),
          ],
          get_007373(),
        ))
      }
      pub(super) fn get_007395() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007394() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007395(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007369() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007370(),
          )],
          get_007394(),
        ))
      }
      pub(super) fn get_007367() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007368(),
          )],
          get_007369(),
        ))
      }
      pub(super) fn get_007365() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007366(),
          )],
          get_007367(),
        ))
      }
      pub(super) fn get_007363() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007364(),
          )],
          get_007365(),
        ))
      }
      pub(super) fn get_007397() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007396() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007397()))
      }
      pub(super) fn get_007359() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007360(), get_007363(), get_007396()))
      }
      pub(super) fn get_007356() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007357(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007358(),
            ),
          ],
          get_007359(),
        ))
      }
      pub(super) fn get_007400() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007401() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007399() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007400(),
          )],
          get_007401(),
        ))
      }
      pub(super) fn get_007403() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007402() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007403(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007405() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007407() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007409() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007411() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007413() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007415() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007414() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007415()]))
      }
      pub(super) fn get_007412() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007413(),
          )],
          get_007414(),
        ))
      }
      pub(super) fn get_007410() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007411(),
          )],
          get_007412(),
        ))
      }
      pub(super) fn get_007408() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007409(), get_007410()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007406() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007407(), get_007408()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007404() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007405(),
          )],
          get_007406(),
        ))
      }
      pub(super) fn get_007398() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007399(),
          get_007402(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007404(),
        ))
      }
      pub(super) fn get_007417() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_id_4() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("id", 4u32)
        }))
      }
      pub(super) fn get_007421() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_arr_487() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 487u32)
        }))
      }
      pub(super) fn get_007423() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_487()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007427() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_487()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007426() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007427(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_ident_keyF_488() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 488u32)
        }))
      }
      pub(super) fn get_ident_pos_490() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("pos", 490u32)
        }))
      }
      pub(super) fn get_007432() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_487(),
          get_ident_pos_490(),
        ))
      }
      pub(super) fn get_007430() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_488(),
          vec![get_007432()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_l_489() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("l", 489u32)
        }))
      }
      pub(super) fn get_007436() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_l_489(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007439() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_493() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 493u32)
        }))
      }
      pub(super) fn get_007441() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_493(),
          CoreBinaryOperator::LessThan(None),
          get_ident_pos_490(),
        ))
      }
      pub(super) fn get_007443() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_487(),
          get_ident_i_493(),
        ))
      }
      pub(super) fn get_007445() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_493(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007444() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_arr_487(), get_007445()))
      }
      pub(super) fn get_007440() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007441(), get_007443(), get_007444()))
      }
      pub(super) fn get_007438() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 493u32) },
            get_007439(),
          )],
          get_007440(),
        ))
      }
      pub(super) fn get_007435() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007436(), get_007438()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007449() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_ident_x_495() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 495u32)
        }))
      }
      pub(super) fn get_007451() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_488(),
          vec![get_ident_x_495()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_pivot_491() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("pivot", 491u32)
        }))
      }
      pub(super) fn get_007450() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007451(),
          CoreBinaryOperator::LessThan(None),
          get_ident_pivot_491(),
        ))
      }
      pub(super) fn get_007448() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 495u32) },
            get_007449(),
          )],
          get_007450(),
        ))
      }
      pub(super) fn get_ident_rest_492() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("rest", 492u32)
        }))
      }
      pub(super) fn get_007447() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_filter(),
          vec![get_007448(), get_ident_rest_492()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007458() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_ident_x_497() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 497u32)
        }))
      }
      pub(super) fn get_007460() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_488(),
          vec![get_ident_x_497()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007459() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007460(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_pivot_491(),
        ))
      }
      pub(super) fn get_007457() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 497u32) },
            get_007458(),
          )],
          get_007459(),
        ))
      }
      pub(super) fn get_007456() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_filter(),
          vec![get_007457(), get_ident_rest_492()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_quickSort_486() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("quickSort", 486u32)
        }))
      }
      pub(super) fn get_ident_left_494() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("left", 494u32)
        }))
      }
      pub(super) fn get_007464() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_quickSort_486(),
          vec![get_ident_left_494(), get_ident_keyF_488()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007468() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_487(),
          get_ident_pos_490(),
        ))
      }
      pub(super) fn get_007467() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007468()]))
      }
      pub(super) fn get_007463() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007464(),
          CoreBinaryOperator::Plus(None),
          get_007467(),
        ))
      }
      pub(super) fn get_ident_right_496() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("right", 496u32)
        }))
      }
      pub(super) fn get_007469() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_quickSort_486(),
          vec![get_ident_right_496(), get_ident_keyF_488()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007462() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007463(),
          CoreBinaryOperator::Plus(None),
          get_007469(),
        ))
      }
      pub(super) fn get_007455() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("right", 496u32) },
            get_007456(),
          )],
          get_007462(),
        ))
      }
      pub(super) fn get_007446() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("left", 494u32) },
            get_007447(),
          )],
          get_007455(),
        ))
      }
      pub(super) fn get_007434() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("rest", 492u32) },
            get_007435(),
          )],
          get_007446(),
        ))
      }
      pub(super) fn get_007429() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("pivot", 491u32) },
            get_007430(),
          )],
          get_007434(),
        ))
      }
      pub(super) fn get_007428() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("pos", 490u32) },
            get_number_0_0(),
          )],
          get_007429(),
        ))
      }
      pub(super) fn get_007425() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_007426(),
          get_ident_arr_487(),
          get_007428(),
        ))
      }
      pub(super) fn get_007422() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("l", 489u32) },
            get_007423(),
          )],
          get_007425(),
        ))
      }
      pub(super) fn get_007420() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 487u32) },
              get_007421(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 488u32) },
              get_ident_id_4(),
            ),
          ],
          get_007422(),
        ))
      }
      pub(super) fn get_007473() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_007474() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_499() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 499u32)
        }))
      }
      pub(super) fn get_007476() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_499()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_b_500() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 500u32)
        }))
      }
      pub(super) fn get_007478() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_500()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007482() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_007483() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_007485() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'prefix' not bound"))
      }
      pub(super) fn get_007484() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007485()))
      }
      pub(super) fn get_ident_i_504() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 504u32)
        }))
      }
      pub(super) fn get_ident_la_501() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("la", 501u32)
        }))
      }
      pub(super) fn get_007487() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_i_504(), get_ident_la_501()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_prefix_506() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("prefix", 506u32)
        }))
      }
      pub(super) fn get_ident_j_505() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 505u32)
        }))
      }
      pub(super) fn get_007492() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_b_500(), get_ident_j_505(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007490() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_prefix_506(),
          CoreBinaryOperator::Plus(None),
          get_007492(),
        ))
      }
      pub(super) fn get_ident_lb_502() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("lb", 502u32)
        }))
      }
      pub(super) fn get_007495() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_j_505(), get_ident_lb_502()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007498() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_a_499(), get_ident_i_504(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007497() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_prefix_506(),
          CoreBinaryOperator::Plus(None),
          get_007498(),
        ))
      }
      pub(super) fn get_ident_keyF_485() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 485u32)
        }))
      }
      pub(super) fn get_007503() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_499(),
          get_ident_i_504(),
        ))
      }
      pub(super) fn get_007501() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_485(),
          vec![get_007503()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007505() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_500(),
          get_ident_j_505(),
        ))
      }
      pub(super) fn get_007504() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_485(),
          vec![get_007505()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007500() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007501(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_007504(),
        ))
      }
      pub(super) fn get_ident_aux_503() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 503u32)
        }))
      }
      pub(super) fn get_007508() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_504(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007511() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_499(),
          get_ident_i_504(),
        ))
      }
      pub(super) fn get_007510() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007511()]))
      }
      pub(super) fn get_007509() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_prefix_506(),
          CoreBinaryOperator::Plus(None),
          get_007510(),
        ))
      }
      pub(super) fn get_007506() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_503(),
          vec![get_007508(), get_ident_j_505(), get_007509()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007513() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_505(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007516() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_500(),
          get_ident_j_505(),
        ))
      }
      pub(super) fn get_007515() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007516()]))
      }
      pub(super) fn get_007514() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_prefix_506(),
          CoreBinaryOperator::Plus(None),
          get_007515(),
        ))
      }
      pub(super) fn get_007512() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_503(),
          vec![get_ident_i_504(), get_007513(), get_007514()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007499() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007500(), get_007506(), get_007512()))
      }
      pub(super) fn get_007494() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007495(), get_007497(), get_007499()))
      }
      pub(super) fn get_007486() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007487(), get_007490(), get_007494()))
      }
      pub(super) fn get_007481() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 504u32) },
              get_007482(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 505u32) },
              get_007483(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("prefix", 506u32) },
              get_007484(),
            ),
          ],
          get_007486(),
        ))
      }
      pub(super) fn get_007518() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007517() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_503(),
          vec![get_number_0_0(), get_number_0_0(), get_007518()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007480() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 503u32) },
            get_007481(),
          )],
          get_007517(),
        ))
      }
      pub(super) fn get_007475() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("la", 501u32) },
              get_007476(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("lb", 502u32) },
              get_007478(),
            ),
          ],
          get_007480(),
        ))
      }
      pub(super) fn get_007472() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 499u32) },
              get_007473(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 500u32) },
              get_007474(),
            ),
          ],
          get_007475(),
        ))
      }
      pub(super) fn get_ident_arr_484() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 484u32)
        }))
      }
      pub(super) fn get_007520() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_484()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007524() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_484()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_number_30_0() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_number(30f64))
      }
      pub(super) fn get_007523() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007524(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_30_0(),
        ))
      }
      pub(super) fn get_007526() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_quickSort_486(),
          vec![get_ident_arr_484()],
          vec![CoreNamedArg::new("keyF", get_ident_keyF_485())],
          false,
        ))
      }
      pub(super) fn get_ident_l_507() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("l", 507u32)
        }))
      }
      pub(super) fn get_007529() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_l_507(),
          CoreBinaryOperator::Div(None),
          get_number_2_0(),
        ))
      }
      pub(super) fn get_007528() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_floor(),
          vec![get_007529()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_mid_508() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("mid", 508u32)
        }))
      }
      pub(super) fn get_007532() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![
            get_ident_arr_484(),
            get_null(),
            get_ident_mid_508(),
            get_null(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007534() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![
            get_ident_arr_484(),
            get_ident_mid_508(),
            get_null(),
            get_null(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_merge_498() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("merge", 498u32)
        }))
      }
      pub(super) fn get_member_std_3_sort() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_007352()))
      }
      pub(super) fn get_ident_left_509() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("left", 509u32)
        }))
      }
      pub(super) fn get_007537() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_sort(),
          vec![get_ident_left_509()],
          vec![CoreNamedArg::new("keyF", get_ident_keyF_485())],
          false,
        ))
      }
      pub(super) fn get_ident_right_510() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("right", 510u32)
        }))
      }
      pub(super) fn get_007540() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_sort(),
          vec![get_ident_right_510()],
          vec![CoreNamedArg::new("keyF", get_ident_keyF_485())],
          false,
        ))
      }
      pub(super) fn get_007535() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_merge_498(),
          vec![get_007537(), get_007540()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007531() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("left", 509u32) },
              get_007532(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("right", 510u32) },
              get_007534(),
            ),
          ],
          get_007535(),
        ))
      }
      pub(super) fn get_007527() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("mid", 508u32) },
            get_007528(),
          )],
          get_007531(),
        ))
      }
      pub(super) fn get_007522() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007523(), get_007526(), get_007527()))
      }
      pub(super) fn get_007519() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("l", 507u32) },
            get_007520(),
          )],
          get_007522(),
        ))
      }
      pub(super) fn get_007471() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("merge", 498u32) },
            get_007472(),
          )],
          get_007519(),
        ))
      }
      pub(super) fn get_007419() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("quickSort", 486u32) },
            get_007420(),
          )],
          get_007471(),
        ))
      }
      pub(super) fn get_007416() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 484u32) },
              get_007417(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 485u32) },
              get_ident_id_4(),
            ),
          ],
          get_007419(),
        ))
      }
      pub(super) fn get_007353() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007354(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007356(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007398(),
            ),
          ],
          get_007416(),
        ))
      }
      pub(super) fn get_007542() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("uniq"))
      }
      pub(super) fn get_007545() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007544() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007545(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007547() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007548() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007552() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007551() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007552(),
        ))
      }
      pub(super) fn get_007550() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007551(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007554() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007556() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007558() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007561() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007562() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007564() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007567() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007569() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007568() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007569(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007571() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007573() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007572() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007573(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007574() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007570() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007571(), get_007572(), get_007574()))
      }
      pub(super) fn get_007566() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007567(), get_007568(), get_007570()))
      }
      pub(super) fn get_007578() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007577() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007578(),
        ))
      }
      pub(super) fn get_007576() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007577(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007580() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007579() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007580(),
        ))
      }
      pub(super) fn get_007583() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007582() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007583()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007581() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007582()))
      }
      pub(super) fn get_007575() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007576(), get_007579(), get_007581()))
      }
      pub(super) fn get_007565() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007566(),
          )],
          get_007575(),
        ))
      }
      pub(super) fn get_007563() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007564(),
          )],
          get_007565(),
        ))
      }
      pub(super) fn get_007560() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007561(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007562(),
            ),
          ],
          get_007563(),
        ))
      }
      pub(super) fn get_007585() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007584() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007585(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007559() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007560(),
          )],
          get_007584(),
        ))
      }
      pub(super) fn get_007557() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007558(),
          )],
          get_007559(),
        ))
      }
      pub(super) fn get_007555() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007556(),
          )],
          get_007557(),
        ))
      }
      pub(super) fn get_007553() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007554(),
          )],
          get_007555(),
        ))
      }
      pub(super) fn get_007587() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007586() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007587()))
      }
      pub(super) fn get_007549() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007550(), get_007553(), get_007586()))
      }
      pub(super) fn get_007546() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007547(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007548(),
            ),
          ],
          get_007549(),
        ))
      }
      pub(super) fn get_007590() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007591() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007589() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007590(),
          )],
          get_007591(),
        ))
      }
      pub(super) fn get_007593() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007592() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007593(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007595() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007597() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007599() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007601() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007603() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007605() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007604() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007605()]))
      }
      pub(super) fn get_007602() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007603(),
          )],
          get_007604(),
        ))
      }
      pub(super) fn get_007600() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007601(),
          )],
          get_007602(),
        ))
      }
      pub(super) fn get_007598() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007599(), get_007600()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007596() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007597(), get_007598()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007594() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007595(),
          )],
          get_007596(),
        ))
      }
      pub(super) fn get_007588() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007589(),
          get_007592(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007594(),
        ))
      }
      pub(super) fn get_007607() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_007610() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_007611() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_514() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 514u32)
        }))
      }
      pub(super) fn get_007614() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_514()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007613() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_007614(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_b_515() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 515u32)
        }))
      }
      pub(super) fn get_007616() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_b_515()]))
      }
      pub(super) fn get_ident_keyF_512() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 512u32)
        }))
      }
      pub(super) fn get_007624() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_514()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007623() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007624(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007622() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_a_514(), get_007623()))
      }
      pub(super) fn get_007620() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_512(),
          vec![get_007622()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007625() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_512(),
          vec![get_ident_b_515()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007619() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_007620(), get_007625()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007627() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_b_515()]))
      }
      pub(super) fn get_007626() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_a_514(),
          CoreBinaryOperator::Plus(None),
          get_007627(),
        ))
      }
      pub(super) fn get_007618() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_007619(),
          get_ident_a_514(),
          get_007626(),
        ))
      }
      pub(super) fn get_007612() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007613(), get_007616(), get_007618()))
      }
      pub(super) fn get_007609() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 514u32) },
              get_007610(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 515u32) },
              get_007611(),
            ),
          ],
          get_007612(),
        ))
      }
      pub(super) fn get_ident_f_513() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("f", 513u32)
        }))
      }
      pub(super) fn get_ident_arr_511() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 511u32)
        }))
      }
      pub(super) fn get_007631() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007628() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_f_513(), get_ident_arr_511(), get_007631()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007608() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("f", 513u32) },
            get_007609(),
          )],
          get_007628(),
        ))
      }
      pub(super) fn get_007606() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 511u32) },
              get_007607(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 512u32) },
              get_ident_id_4(),
            ),
          ],
          get_007608(),
        ))
      }
      pub(super) fn get_007543() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007544(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007546(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007588(),
            ),
          ],
          get_007606(),
        ))
      }
      pub(super) fn get_007632() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("set"))
      }
      pub(super) fn get_007635() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007634() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007635(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007637() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007638() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007642() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007641() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007642(),
        ))
      }
      pub(super) fn get_007640() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007641(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007644() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007646() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007648() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007651() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007652() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007654() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007657() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007659() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007658() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007659(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007661() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007663() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007662() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007663(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007664() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007660() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007661(), get_007662(), get_007664()))
      }
      pub(super) fn get_007656() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007657(), get_007658(), get_007660()))
      }
      pub(super) fn get_007668() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007667() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007668(),
        ))
      }
      pub(super) fn get_007666() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007667(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007670() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007669() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007670(),
        ))
      }
      pub(super) fn get_007673() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007672() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007673()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007671() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007672()))
      }
      pub(super) fn get_007665() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007666(), get_007669(), get_007671()))
      }
      pub(super) fn get_007655() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007656(),
          )],
          get_007665(),
        ))
      }
      pub(super) fn get_007653() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007654(),
          )],
          get_007655(),
        ))
      }
      pub(super) fn get_007650() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007651(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007652(),
            ),
          ],
          get_007653(),
        ))
      }
      pub(super) fn get_007675() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007674() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007675(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007649() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007650(),
          )],
          get_007674(),
        ))
      }
      pub(super) fn get_007647() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007648(),
          )],
          get_007649(),
        ))
      }
      pub(super) fn get_007645() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007646(),
          )],
          get_007647(),
        ))
      }
      pub(super) fn get_007643() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007644(),
          )],
          get_007645(),
        ))
      }
      pub(super) fn get_007677() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007676() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007677()))
      }
      pub(super) fn get_007639() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007640(), get_007643(), get_007676()))
      }
      pub(super) fn get_007636() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007637(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007638(),
            ),
          ],
          get_007639(),
        ))
      }
      pub(super) fn get_007680() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007681() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007679() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007680(),
          )],
          get_007681(),
        ))
      }
      pub(super) fn get_007683() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007682() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007683(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007685() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007687() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007689() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007691() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007693() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007695() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007694() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007695()]))
      }
      pub(super) fn get_007692() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007693(),
          )],
          get_007694(),
        ))
      }
      pub(super) fn get_007690() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007691(),
          )],
          get_007692(),
        ))
      }
      pub(super) fn get_007688() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007689(), get_007690()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007686() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007687(), get_007688()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007684() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007685(),
          )],
          get_007686(),
        ))
      }
      pub(super) fn get_007678() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007679(),
          get_007682(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007684(),
        ))
      }
      pub(super) fn get_007697() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_member_std_3_uniq() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_007542()))
      }
      pub(super) fn get_ident_arr_516() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 516u32)
        }))
      }
      pub(super) fn get_ident_keyF_517() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 517u32)
        }))
      }
      pub(super) fn get_007700() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_sort(),
          vec![get_ident_arr_516(), get_ident_keyF_517()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007698() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_uniq(),
          vec![get_007700(), get_ident_keyF_517()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007696() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 516u32) },
              get_007697(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 517u32) },
              get_ident_id_4(),
            ),
          ],
          get_007698(),
        ))
      }
      pub(super) fn get_007633() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007634(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007636(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007678(),
            ),
          ],
          get_007696(),
        ))
      }
      pub(super) fn get_007703() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("setMember"))
      }
      pub(super) fn get_007706() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007705() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007706(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007708() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007709() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007713() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007712() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007713(),
        ))
      }
      pub(super) fn get_007711() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007712(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007715() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007717() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007719() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007722() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007723() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007725() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007728() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007730() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007729() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007730(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007732() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007734() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007733() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007734(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007735() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007731() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007732(), get_007733(), get_007735()))
      }
      pub(super) fn get_007727() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007728(), get_007729(), get_007731()))
      }
      pub(super) fn get_007739() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007738() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007739(),
        ))
      }
      pub(super) fn get_007737() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007738(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007741() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007740() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007741(),
        ))
      }
      pub(super) fn get_007744() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007743() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007744()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007742() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007743()))
      }
      pub(super) fn get_007736() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007737(), get_007740(), get_007742()))
      }
      pub(super) fn get_007726() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007727(),
          )],
          get_007736(),
        ))
      }
      pub(super) fn get_007724() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007725(),
          )],
          get_007726(),
        ))
      }
      pub(super) fn get_007721() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007722(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007723(),
            ),
          ],
          get_007724(),
        ))
      }
      pub(super) fn get_007746() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007745() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007746(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007720() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007721(),
          )],
          get_007745(),
        ))
      }
      pub(super) fn get_007718() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007719(),
          )],
          get_007720(),
        ))
      }
      pub(super) fn get_007716() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007717(),
          )],
          get_007718(),
        ))
      }
      pub(super) fn get_007714() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007715(),
          )],
          get_007716(),
        ))
      }
      pub(super) fn get_007748() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007747() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007748()))
      }
      pub(super) fn get_007710() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007711(), get_007714(), get_007747()))
      }
      pub(super) fn get_007707() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007708(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007709(),
            ),
          ],
          get_007710(),
        ))
      }
      pub(super) fn get_007751() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007752() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007750() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007751(),
          )],
          get_007752(),
        ))
      }
      pub(super) fn get_007754() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007753() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007754(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007756() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007758() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007760() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007762() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007764() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007766() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007765() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007766()]))
      }
      pub(super) fn get_007763() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007764(),
          )],
          get_007765(),
        ))
      }
      pub(super) fn get_007761() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007762(),
          )],
          get_007763(),
        ))
      }
      pub(super) fn get_007759() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007760(), get_007761()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007757() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007758(), get_007759()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007755() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007756(),
          )],
          get_007757(),
        ))
      }
      pub(super) fn get_007749() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007750(),
          get_007753(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007755(),
        ))
      }
      pub(super) fn get_007768() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007769() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_007774() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("setInter"))
      }
      pub(super) fn get_member_std_3_setInter() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_007774()))
      }
      pub(super) fn get_ident_x_518() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 518u32)
        }))
      }
      pub(super) fn get_007775() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_x_518()]))
      }
      pub(super) fn get_ident_arr_519() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 519u32)
        }))
      }
      pub(super) fn get_ident_keyF_520() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 520u32)
        }))
      }
      pub(super) fn get_007772() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_setInter(),
          vec![get_007775(), get_ident_arr_519(), get_ident_keyF_520()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007771() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_007772()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007770() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007771(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007767() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("x", 518u32) },
              get_007768(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 519u32) },
              get_007769(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 520u32) },
              get_ident_id_4(),
            ),
          ],
          get_007770(),
        ))
      }
      pub(super) fn get_007704() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007705(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007707(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007749(),
            ),
          ],
          get_007767(),
        ))
      }
      pub(super) fn get_007779() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("setUnion"))
      }
      pub(super) fn get_007782() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007781() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007782(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007784() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007785() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007789() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007788() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007789(),
        ))
      }
      pub(super) fn get_007787() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007788(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007791() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007793() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007795() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007798() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007799() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007801() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007804() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007806() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007805() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007806(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007808() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007810() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007809() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007810(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007811() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007807() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007808(), get_007809(), get_007811()))
      }
      pub(super) fn get_007803() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007804(), get_007805(), get_007807()))
      }
      pub(super) fn get_007815() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007814() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007815(),
        ))
      }
      pub(super) fn get_007813() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007814(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007817() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007816() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007817(),
        ))
      }
      pub(super) fn get_007820() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007819() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007820()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007818() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007819()))
      }
      pub(super) fn get_007812() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007813(), get_007816(), get_007818()))
      }
      pub(super) fn get_007802() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007803(),
          )],
          get_007812(),
        ))
      }
      pub(super) fn get_007800() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007801(),
          )],
          get_007802(),
        ))
      }
      pub(super) fn get_007797() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007798(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007799(),
            ),
          ],
          get_007800(),
        ))
      }
      pub(super) fn get_007822() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007821() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007822(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007796() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007797(),
          )],
          get_007821(),
        ))
      }
      pub(super) fn get_007794() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007795(),
          )],
          get_007796(),
        ))
      }
      pub(super) fn get_007792() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007793(),
          )],
          get_007794(),
        ))
      }
      pub(super) fn get_007790() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007791(),
          )],
          get_007792(),
        ))
      }
      pub(super) fn get_007824() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007823() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007824()))
      }
      pub(super) fn get_007786() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007787(), get_007790(), get_007823()))
      }
      pub(super) fn get_007783() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007784(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007785(),
            ),
          ],
          get_007786(),
        ))
      }
      pub(super) fn get_007827() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007828() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007826() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007827(),
          )],
          get_007828(),
        ))
      }
      pub(super) fn get_007830() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007829() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007830(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007832() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007834() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007836() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007838() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007840() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007842() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007841() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007842()]))
      }
      pub(super) fn get_007839() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007840(),
          )],
          get_007841(),
        ))
      }
      pub(super) fn get_007837() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007838(),
          )],
          get_007839(),
        ))
      }
      pub(super) fn get_007835() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007836(), get_007837()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007833() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007834(), get_007835()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007831() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007832(),
          )],
          get_007833(),
        ))
      }
      pub(super) fn get_007825() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007826(),
          get_007829(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007831(),
        ))
      }
      pub(super) fn get_007844() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_007845() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_007848() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_007849() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_007850() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_007851() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_007852() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001710()))
      }
      pub(super) fn get_ident_i_527() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 527u32)
        }))
      }
      pub(super) fn get_ident_a_525() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 525u32)
        }))
      }
      pub(super) fn get_007856() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_525()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007854() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_527(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007856(),
        ))
      }
      pub(super) fn get_ident_acc_529() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("acc", 529u32)
        }))
      }
      pub(super) fn get_ident_b_526() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 526u32)
        }))
      }
      pub(super) fn get_ident_j_528() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 528u32)
        }))
      }
      pub(super) fn get_007860() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_b_526(), get_ident_j_528(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007858() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_529(),
          CoreBinaryOperator::Plus(None),
          get_007860(),
        ))
      }
      pub(super) fn get_007865() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_526()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007864() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_528(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007865(),
        ))
      }
      pub(super) fn get_007867() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_a_525(), get_ident_i_527(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007866() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_529(),
          CoreBinaryOperator::Plus(None),
          get_007867(),
        ))
      }
      pub(super) fn get_ident_keyF_523() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 523u32)
        }))
      }
      pub(super) fn get_007871() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_525(),
          get_ident_i_527(),
        ))
      }
      pub(super) fn get_007869() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_523(),
          vec![get_007871()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007874() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_526(),
          get_ident_j_528(),
        ))
      }
      pub(super) fn get_007873() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_523(),
          vec![get_007874()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_ak_530() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ak", 530u32)
        }))
      }
      pub(super) fn get_ident_bk_531() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("bk", 531u32)
        }))
      }
      pub(super) fn get_007876() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_ak_530(), get_ident_bk_531()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_aux_524() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 524u32)
        }))
      }
      pub(super) fn get_007881() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_527(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007882() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_528(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007885() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_525(),
          get_ident_i_527(),
        ))
      }
      pub(super) fn get_007884() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007885()]))
      }
      pub(super) fn get_007883() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_529(),
          CoreBinaryOperator::Plus(None),
          get_007884(),
        ))
      }
      pub(super) fn get_007879() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_524(),
          vec![
            get_ident_a_525(),
            get_ident_b_526(),
            get_007881(),
            get_007882(),
            get_007883(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007887() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_ak_530(),
          CoreBinaryOperator::LessThan(None),
          get_ident_bk_531(),
        ))
      }
      pub(super) fn get_007889() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_527(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007892() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_525(),
          get_ident_i_527(),
        ))
      }
      pub(super) fn get_007891() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007892()]))
      }
      pub(super) fn get_007890() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_529(),
          CoreBinaryOperator::Plus(None),
          get_007891(),
        ))
      }
      pub(super) fn get_007888() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_524(),
          vec![
            get_ident_a_525(),
            get_ident_b_526(),
            get_007889(),
            get_ident_j_528(),
            get_007890(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007894() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_528(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007897() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_526(),
          get_ident_j_528(),
        ))
      }
      pub(super) fn get_007896() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007897()]))
      }
      pub(super) fn get_007895() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_529(),
          CoreBinaryOperator::Plus(None),
          get_007896(),
        ))
      }
      pub(super) fn get_007893() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_524(),
          vec![
            get_ident_a_525(),
            get_ident_b_526(),
            get_ident_i_527(),
            get_007894(),
            get_007895(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007886() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007887(), get_007888(), get_007893()))
      }
      pub(super) fn get_007875() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007876(), get_007879(), get_007886()))
      }
      pub(super) fn get_007872() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("bk", 531u32) },
            get_007873(),
          )],
          get_007875(),
        ))
      }
      pub(super) fn get_007868() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("ak", 530u32) },
            get_007869(),
          )],
          get_007872(),
        ))
      }
      pub(super) fn get_007863() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007864(), get_007866(), get_007868()))
      }
      pub(super) fn get_007853() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007854(), get_007858(), get_007863()))
      }
      pub(super) fn get_007847() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 525u32) },
              get_007848(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 526u32) },
              get_007849(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 527u32) },
              get_007850(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 528u32) },
              get_007851(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("acc", 529u32) },
              get_007852(),
            ),
          ],
          get_007853(),
        ))
      }
      pub(super) fn get_ident_a_521() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 521u32)
        }))
      }
      pub(super) fn get_ident_b_522() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 522u32)
        }))
      }
      pub(super) fn get_007901() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007898() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_524(),
          vec![
            get_ident_a_521(),
            get_ident_b_522(),
            get_number_0_0(),
            get_number_0_0(),
            get_007901(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007846() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 524u32) },
            get_007847(),
          )],
          get_007898(),
        ))
      }
      pub(super) fn get_007843() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 521u32) },
              get_007844(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 522u32) },
              get_007845(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 523u32) },
              get_ident_id_4(),
            ),
          ],
          get_007846(),
        ))
      }
      pub(super) fn get_007780() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007781(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007783(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007825(),
            ),
          ],
          get_007843(),
        ))
      }
      pub(super) fn get_007904() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_007903() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_007904(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_007906() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_007907() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_007911() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007910() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_007911(),
        ))
      }
      pub(super) fn get_007909() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007910(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_007913() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007915() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007917() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007920() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_007921() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_007923() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007926() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007928() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_007927() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007928(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007930() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007932() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_007931() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007932(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_007933() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_007929() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007930(), get_007931(), get_007933()))
      }
      pub(super) fn get_007925() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007926(), get_007927(), get_007929()))
      }
      pub(super) fn get_007937() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007936() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007937(),
        ))
      }
      pub(super) fn get_007935() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007936(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_007939() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_007938() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_007939(),
        ))
      }
      pub(super) fn get_007942() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_007941() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_007942()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007940() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007941()))
      }
      pub(super) fn get_007934() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007935(), get_007938(), get_007940()))
      }
      pub(super) fn get_007924() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_007925(),
          )],
          get_007934(),
        ))
      }
      pub(super) fn get_007922() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_007923(),
          )],
          get_007924(),
        ))
      }
      pub(super) fn get_007919() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_007920(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_007921(),
            ),
          ],
          get_007922(),
        ))
      }
      pub(super) fn get_007944() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007943() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_007944(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007918() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_007919(),
          )],
          get_007943(),
        ))
      }
      pub(super) fn get_007916() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_007917(),
          )],
          get_007918(),
        ))
      }
      pub(super) fn get_007914() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_007915(),
          )],
          get_007916(),
        ))
      }
      pub(super) fn get_007912() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_007913(),
          )],
          get_007914(),
        ))
      }
      pub(super) fn get_007946() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007945() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_007946()))
      }
      pub(super) fn get_007908() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007909(), get_007912(), get_007945()))
      }
      pub(super) fn get_007905() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_007906(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_007907(),
            ),
          ],
          get_007908(),
        ))
      }
      pub(super) fn get_007949() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007950() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007948() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007949(),
          )],
          get_007950(),
        ))
      }
      pub(super) fn get_007952() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_007951() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007952(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_007954() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007956() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_007958() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007960() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_007962() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_007964() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_007963() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007964()]))
      }
      pub(super) fn get_007961() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_007962(),
          )],
          get_007963(),
        ))
      }
      pub(super) fn get_007959() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_007960(),
          )],
          get_007961(),
        ))
      }
      pub(super) fn get_007957() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_007958(), get_007959()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007955() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_007956(), get_007957()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007953() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_007954(),
          )],
          get_007955(),
        ))
      }
      pub(super) fn get_007947() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_007948(),
          get_007951(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_007953(),
        ))
      }
      pub(super) fn get_007966() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_007967() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_007970() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_007971() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_007972() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_007973() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_007974() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001710()))
      }
      pub(super) fn get_ident_i_538() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 538u32)
        }))
      }
      pub(super) fn get_ident_a_536() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 536u32)
        }))
      }
      pub(super) fn get_007980() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_536()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_j_539() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 539u32)
        }))
      }
      pub(super) fn get_007979() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007980(),
          CoreBinaryOperator::Or(None),
          get_ident_j_539(),
        ))
      }
      pub(super) fn get_007977() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_538(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007979(),
        ))
      }
      pub(super) fn get_ident_b_537() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 537u32)
        }))
      }
      pub(super) fn get_007983() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_537()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007976() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_007977(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_007983(),
        ))
      }
      pub(super) fn get_ident_acc_540() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("acc", 540u32)
        }))
      }
      pub(super) fn get_ident_keyF_534() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 534u32)
        }))
      }
      pub(super) fn get_007990() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_536(),
          get_ident_i_538(),
        ))
      }
      pub(super) fn get_007988() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_534(),
          vec![get_007990()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007992() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_537(),
          get_ident_j_539(),
        ))
      }
      pub(super) fn get_007991() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_534(),
          vec![get_007992()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_007987() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_007988(), get_007991()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_aux_535() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 535u32)
        }))
      }
      pub(super) fn get_007995() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_538(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007996() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_539(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_007999() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_536(),
          get_ident_i_538(),
        ))
      }
      pub(super) fn get_007998() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_007999()]))
      }
      pub(super) fn get_007997() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_540(),
          CoreBinaryOperator::Plus(None),
          get_007998(),
        ))
      }
      pub(super) fn get_007993() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_535(),
          vec![
            get_ident_a_536(),
            get_ident_b_537(),
            get_007995(),
            get_007996(),
            get_007997(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008003() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_536(),
          get_ident_i_538(),
        ))
      }
      pub(super) fn get_008002() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_534(),
          vec![get_008003()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008005() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_537(),
          get_ident_j_539(),
        ))
      }
      pub(super) fn get_008004() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_534(),
          vec![get_008005()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008001() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008002(),
          CoreBinaryOperator::LessThan(None),
          get_008004(),
        ))
      }
      pub(super) fn get_008007() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_538(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008006() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_535(),
          vec![
            get_ident_a_536(),
            get_ident_b_537(),
            get_008007(),
            get_ident_j_539(),
            get_ident_acc_540(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008009() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_539(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008008() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_535(),
          vec![
            get_ident_a_536(),
            get_ident_b_537(),
            get_ident_i_538(),
            get_008009(),
            get_ident_acc_540(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008000() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008001(), get_008006(), get_008008()))
      }
      pub(super) fn get_007986() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_007987(), get_007993(), get_008000()))
      }
      pub(super) fn get_007975() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_007976(),
          get_ident_acc_540(),
          get_007986(),
        ))
      }
      pub(super) fn get_007969() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 536u32) },
              get_007970(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 537u32) },
              get_007971(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 538u32) },
              get_007972(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 539u32) },
              get_007973(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("acc", 540u32) },
              get_007974(),
            ),
          ],
          get_007975(),
        ))
      }
      pub(super) fn get_ident_a_532() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 532u32)
        }))
      }
      pub(super) fn get_ident_b_533() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 533u32)
        }))
      }
      pub(super) fn get_008013() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008010() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_535(),
          vec![
            get_ident_a_532(),
            get_ident_b_533(),
            get_number_0_0(),
            get_number_0_0(),
            get_008013(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_007968() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 535u32) },
            get_007969(),
          )],
          get_008010(),
        ))
      }
      pub(super) fn get_007965() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 532u32) },
              get_007966(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 533u32) },
              get_007967(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 534u32) },
              get_ident_id_4(),
            ),
          ],
          get_007968(),
        ))
      }
      pub(super) fn get_007902() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_007903(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_007905(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_007947(),
            ),
          ],
          get_007965(),
        ))
      }
      pub(super) fn get_008014() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("setDiff"))
      }
      pub(super) fn get_008017() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008016() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008017(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008019() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008020() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008024() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008023() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008024(),
        ))
      }
      pub(super) fn get_008022() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008023(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008026() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008028() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008030() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008033() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008034() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008036() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008039() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008041() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008040() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008041(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008043() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008045() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008044() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008045(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008046() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008042() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008043(), get_008044(), get_008046()))
      }
      pub(super) fn get_008038() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008039(), get_008040(), get_008042()))
      }
      pub(super) fn get_008050() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008049() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008050(),
        ))
      }
      pub(super) fn get_008048() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008049(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008052() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008051() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008052(),
        ))
      }
      pub(super) fn get_008055() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008054() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008055()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008053() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008054()))
      }
      pub(super) fn get_008047() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008048(), get_008051(), get_008053()))
      }
      pub(super) fn get_008037() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008038(),
          )],
          get_008047(),
        ))
      }
      pub(super) fn get_008035() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008036(),
          )],
          get_008037(),
        ))
      }
      pub(super) fn get_008032() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008033(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008034(),
            ),
          ],
          get_008035(),
        ))
      }
      pub(super) fn get_008057() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008056() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008057(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008031() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008032(),
          )],
          get_008056(),
        ))
      }
      pub(super) fn get_008029() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008030(),
          )],
          get_008031(),
        ))
      }
      pub(super) fn get_008027() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008028(),
          )],
          get_008029(),
        ))
      }
      pub(super) fn get_008025() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008026(),
          )],
          get_008027(),
        ))
      }
      pub(super) fn get_008059() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008058() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008059()))
      }
      pub(super) fn get_008021() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008022(), get_008025(), get_008058()))
      }
      pub(super) fn get_008018() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008019(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008020(),
            ),
          ],
          get_008021(),
        ))
      }
      pub(super) fn get_008062() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008063() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008061() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008062(),
          )],
          get_008063(),
        ))
      }
      pub(super) fn get_008065() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008064() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008065(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008067() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008069() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008071() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008073() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008075() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008077() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008076() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008077()]))
      }
      pub(super) fn get_008074() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008075(),
          )],
          get_008076(),
        ))
      }
      pub(super) fn get_008072() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008073(),
          )],
          get_008074(),
        ))
      }
      pub(super) fn get_008070() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008071(), get_008072()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008068() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008069(), get_008070()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008066() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008067(),
          )],
          get_008068(),
        ))
      }
      pub(super) fn get_008060() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008061(),
          get_008064(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008066(),
        ))
      }
      pub(super) fn get_008079() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_008080() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_008083() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_008084() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_008085() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_008086() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_003270()))
      }
      pub(super) fn get_008087() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001710()))
      }
      pub(super) fn get_ident_i_547() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 547u32)
        }))
      }
      pub(super) fn get_ident_a_545() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 545u32)
        }))
      }
      pub(super) fn get_008091() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_545()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008089() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_547(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008091(),
        ))
      }
      pub(super) fn get_ident_acc_549() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("acc", 549u32)
        }))
      }
      pub(super) fn get_ident_j_548() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("j", 548u32)
        }))
      }
      pub(super) fn get_ident_b_546() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 546u32)
        }))
      }
      pub(super) fn get_008097() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_546()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008095() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_548(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008097(),
        ))
      }
      pub(super) fn get_008100() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![get_ident_a_545(), get_ident_i_547(), get_null(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008099() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_549(),
          CoreBinaryOperator::Plus(None),
          get_008100(),
        ))
      }
      pub(super) fn get_ident_keyF_543() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("keyF", 543u32)
        }))
      }
      pub(super) fn get_008105() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_545(),
          get_ident_i_547(),
        ))
      }
      pub(super) fn get_008103() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_543(),
          vec![get_008105()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008107() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_546(),
          get_ident_j_548(),
        ))
      }
      pub(super) fn get_008106() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_543(),
          vec![get_008107()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008102() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_008103(), get_008106()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_aux_544() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 544u32)
        }))
      }
      pub(super) fn get_008110() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_547(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008111() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_548(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008108() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_544(),
          vec![
            get_ident_a_545(),
            get_ident_b_546(),
            get_008110(),
            get_008111(),
            get_ident_acc_549(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008115() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_545(),
          get_ident_i_547(),
        ))
      }
      pub(super) fn get_008114() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_543(),
          vec![get_008115()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008117() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_546(),
          get_ident_j_548(),
        ))
      }
      pub(super) fn get_008116() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_keyF_543(),
          vec![get_008117()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008113() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008114(),
          CoreBinaryOperator::LessThan(None),
          get_008116(),
        ))
      }
      pub(super) fn get_008119() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_547(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008122() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_545(),
          get_ident_i_547(),
        ))
      }
      pub(super) fn get_008121() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008122()]))
      }
      pub(super) fn get_008120() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_acc_549(),
          CoreBinaryOperator::Plus(None),
          get_008121(),
        ))
      }
      pub(super) fn get_008118() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_544(),
          vec![
            get_ident_a_545(),
            get_ident_b_546(),
            get_008119(),
            get_ident_j_548(),
            get_008120(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008124() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_j_548(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008123() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_544(),
          vec![
            get_ident_a_545(),
            get_ident_b_546(),
            get_ident_i_547(),
            get_008124(),
            get_ident_acc_549(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008112() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008113(), get_008118(), get_008123()))
      }
      pub(super) fn get_008101() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008102(), get_008108(), get_008112()))
      }
      pub(super) fn get_008094() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008095(), get_008099(), get_008101()))
      }
      pub(super) fn get_008088() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_008089(),
          get_ident_acc_549(),
          get_008094(),
        ))
      }
      pub(super) fn get_008082() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 545u32) },
              get_008083(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 546u32) },
              get_008084(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 547u32) },
              get_008085(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("j", 548u32) },
              get_008086(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("acc", 549u32) },
              get_008087(),
            ),
          ],
          get_008088(),
        ))
      }
      pub(super) fn get_ident_a_541() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 541u32)
        }))
      }
      pub(super) fn get_ident_b_542() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 542u32)
        }))
      }
      pub(super) fn get_008128() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008125() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_544(),
          vec![
            get_ident_a_541(),
            get_ident_b_542(),
            get_number_0_0(),
            get_number_0_0(),
            get_008128(),
          ],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008081() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 544u32) },
            get_008082(),
          )],
          get_008125(),
        ))
      }
      pub(super) fn get_008078() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 541u32) },
              get_008079(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 542u32) },
              get_008080(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("keyF", 543u32) },
              get_ident_id_4(),
            ),
          ],
          get_008081(),
        ))
      }
      pub(super) fn get_008015() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008016(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008018(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008060(),
            ),
          ],
          get_008078(),
        ))
      }
      pub(super) fn get_008129() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("mergePatch"))
      }
      pub(super) fn get_008132() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008131() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008132(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008134() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008135() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008139() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008138() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008139(),
        ))
      }
      pub(super) fn get_008137() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008138(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008141() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008143() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008145() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008148() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008149() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008151() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008154() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008156() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008155() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008156(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008158() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008160() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008159() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008160(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008161() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008157() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008158(), get_008159(), get_008161()))
      }
      pub(super) fn get_008153() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008154(), get_008155(), get_008157()))
      }
      pub(super) fn get_008165() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008164() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008165(),
        ))
      }
      pub(super) fn get_008163() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008164(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008167() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008166() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008167(),
        ))
      }
      pub(super) fn get_008170() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008169() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008170()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008168() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008169()))
      }
      pub(super) fn get_008162() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008163(), get_008166(), get_008168()))
      }
      pub(super) fn get_008152() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008153(),
          )],
          get_008162(),
        ))
      }
      pub(super) fn get_008150() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008151(),
          )],
          get_008152(),
        ))
      }
      pub(super) fn get_008147() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008148(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008149(),
            ),
          ],
          get_008150(),
        ))
      }
      pub(super) fn get_008172() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008171() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008172(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008146() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008147(),
          )],
          get_008171(),
        ))
      }
      pub(super) fn get_008144() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008145(),
          )],
          get_008146(),
        ))
      }
      pub(super) fn get_008142() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008143(),
          )],
          get_008144(),
        ))
      }
      pub(super) fn get_008140() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008141(),
          )],
          get_008142(),
        ))
      }
      pub(super) fn get_008174() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008173() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008174()))
      }
      pub(super) fn get_008136() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008137(), get_008140(), get_008173()))
      }
      pub(super) fn get_008133() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008134(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008135(),
            ),
          ],
          get_008136(),
        ))
      }
      pub(super) fn get_008177() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008178() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008176() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008177(),
          )],
          get_008178(),
        ))
      }
      pub(super) fn get_008180() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008179() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008180(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008182() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008184() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008186() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008188() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008190() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008192() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008191() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008192()]))
      }
      pub(super) fn get_008189() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008190(),
          )],
          get_008191(),
        ))
      }
      pub(super) fn get_008187() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008188(),
          )],
          get_008189(),
        ))
      }
      pub(super) fn get_008185() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008186(), get_008187()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008183() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008184(), get_008185()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008181() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008182(),
          )],
          get_008183(),
        ))
      }
      pub(super) fn get_008175() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008176(),
          get_008179(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008181(),
        ))
      }
      pub(super) fn get_008195() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'target' not bound"))
      }
      pub(super) fn get_008194() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008195()))
      }
      pub(super) fn get_008197() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'patch' not bound"))
      }
      pub(super) fn get_008196() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008197()))
      }
      pub(super) fn get_ident_patch_551() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("patch", 551u32)
        }))
      }
      pub(super) fn get_008199() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_patch_551()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_target_550() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("target", 550u32)
        }))
      }
      pub(super) fn get_008203() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_target_550()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008205() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(vec![], vec![]))
      }
      pub(super) fn get_008202() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_008203(),
          get_ident_target_550(),
          get_008205(),
        ))
      }
      pub(super) fn get_ident_target_object_552() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("target_object", 552u32)
        }))
      }
      pub(super) fn get_008208() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_target_object_552()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008210() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_target_object_552()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008211() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008207() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008208(), get_008210(), get_008211()))
      }
      pub(super) fn get_008214() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_patch_551()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008216() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_556() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 556u32)
        }))
      }
      pub(super) fn get_008218() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_556()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008221() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_557() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 557u32)
        }))
      }
      pub(super) fn get_008223() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_556(),
          get_ident_genid_i_557(),
        ))
      }
      pub(super) fn get_ident_k_555() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 555u32)
        }))
      }
      pub(super) fn get_008227() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_patch_551(),
          get_ident_k_555(),
        ))
      }
      pub(super) fn get_008226() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_008227(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008229() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_k_555()]))
      }
      pub(super) fn get_008230() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008225() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008226(), get_008229(), get_008230()))
      }
      pub(super) fn get_008222() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 555u32) },
            get_008223(),
          )],
          get_008225(),
        ))
      }
      pub(super) fn get_008220() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 557u32) },
            get_008221(),
          )],
          get_008222(),
        ))
      }
      pub(super) fn get_008217() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008218(), get_008220()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008215() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008216(), get_008217()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008213() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 556u32) },
            get_008214(),
          )],
          get_008215(),
        ))
      }
      pub(super) fn get_member_std_3_setUnion() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_007779()))
      }
      pub(super) fn get_ident_target_fields_553() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("target_fields", 553u32)
        }))
      }
      pub(super) fn get_008235() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_patch_551()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008232() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_setUnion(),
          vec![get_ident_target_fields_553(), get_008235()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_genid_arr_559() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 559u32)
        }))
      }
      pub(super) fn get_008238() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_559(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_k_560() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("k", 560u32)
        }))
      }
      pub(super) fn get_008237() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 560u32) },
            get_008238(),
          )],
          get_ident_k_560(),
        ))
      }
      pub(super) fn get_008242() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_559(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008245() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectHas(),
          vec![get_ident_patch_551(), get_ident_k_560()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008244() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008245(),
        ))
      }
      pub(super) fn get_008246() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_target_object_552(),
          get_ident_k_560(),
        ))
      }
      pub(super) fn get_008249() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectHas(),
          vec![get_ident_target_object_552(), get_ident_k_560()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008248() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008249(),
        ))
      }
      pub(super) fn get_member_std_3_mergePatch() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_008129()))
      }
      pub(super) fn get_008252() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_patch_551(),
          get_ident_k_560(),
        ))
      }
      pub(super) fn get_008250() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mergePatch(),
          vec![get_null(), get_008252()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008254() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_target_object_552(),
          get_ident_k_560(),
        ))
      }
      pub(super) fn get_008255() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_patch_551(),
          get_ident_k_560(),
        ))
      }
      pub(super) fn get_008253() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mergePatch(),
          vec![get_008254(), get_008255()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008247() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008248(), get_008250(), get_008253()))
      }
      pub(super) fn get_008243() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008244(), get_008246(), get_008247()))
      }
      pub(super) fn get_008241() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 560u32) },
            get_008242(),
          )],
          get_008243(),
        ))
      }
      pub(super) fn get_member_std_3_setDiff() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_008014()))
      }
      pub(super) fn get_ident_both_fields_558() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("both_fields", 558u32)
        }))
      }
      pub(super) fn get_ident_null_fields_554() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("null_fields", 554u32)
        }))
      }
      pub(super) fn get_008257() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_setDiff(),
          vec![get_ident_both_fields_558(), get_ident_null_fields_554()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008262() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_561() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 561u32)
        }))
      }
      pub(super) fn get_008264() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_561()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008267() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_562() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 562u32)
        }))
      }
      pub(super) fn get_008269() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_561(),
          get_ident_genid_i_562(),
        ))
      }
      pub(super) fn get_008272() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_k_560()]))
      }
      pub(super) fn get_008271() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008272()]))
      }
      pub(super) fn get_008268() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("k", 560u32) },
            get_008269(),
          )],
          get_008271(),
        ))
      }
      pub(super) fn get_008266() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 562u32) },
            get_008267(),
          )],
          get_008268(),
        ))
      }
      pub(super) fn get_008263() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008264(), get_008266()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008261() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008262(), get_008263()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008256() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 561u32) },
            get_008257(),
          )],
          get_008261(),
        ))
      }
      pub(super) fn get_008236() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008237(),
          get_008241(),
          unsafe { CoreIdent::new_unchecked("$arr", 559u32) },
          get_008256(),
        ))
      }
      pub(super) fn get_008231() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("both_fields", 558u32) },
            get_008232(),
          )],
          get_008236(),
        ))
      }
      pub(super) fn get_008212() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("null_fields", 554u32) },
            get_008213(),
          )],
          get_008231(),
        ))
      }
      pub(super) fn get_008206() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("target_fields", 553u32) },
            get_008207(),
          )],
          get_008212(),
        ))
      }
      pub(super) fn get_008201() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("target_object", 552u32) },
            get_008202(),
          )],
          get_008206(),
        ))
      }
      pub(super) fn get_008198() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_008199(),
          get_008201(),
          get_ident_patch_551(),
        ))
      }
      pub(super) fn get_008193() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("target", 550u32) },
              get_008194(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("patch", 551u32) },
              get_008196(),
            ),
          ],
          get_008198(),
        ))
      }
      pub(super) fn get_008130() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008131(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008133(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008175(),
            ),
          ],
          get_008193(),
        ))
      }
      pub(super) fn get_008275() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008274() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008275(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008277() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008278() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008282() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008281() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008282(),
        ))
      }
      pub(super) fn get_008280() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008281(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008284() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008286() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008288() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008291() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008292() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008294() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008297() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008299() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008298() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008299(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008301() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008303() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008302() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008303(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008304() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008300() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008301(), get_008302(), get_008304()))
      }
      pub(super) fn get_008296() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008297(), get_008298(), get_008300()))
      }
      pub(super) fn get_008308() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008307() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008308(),
        ))
      }
      pub(super) fn get_008306() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008307(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008310() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008309() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008310(),
        ))
      }
      pub(super) fn get_008313() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008312() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008313()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008311() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008312()))
      }
      pub(super) fn get_008305() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008306(), get_008309(), get_008311()))
      }
      pub(super) fn get_008295() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008296(),
          )],
          get_008305(),
        ))
      }
      pub(super) fn get_008293() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008294(),
          )],
          get_008295(),
        ))
      }
      pub(super) fn get_008290() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008291(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008292(),
            ),
          ],
          get_008293(),
        ))
      }
      pub(super) fn get_008315() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008314() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008315(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008289() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008290(),
          )],
          get_008314(),
        ))
      }
      pub(super) fn get_008287() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008288(),
          )],
          get_008289(),
        ))
      }
      pub(super) fn get_008285() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008286(),
          )],
          get_008287(),
        ))
      }
      pub(super) fn get_008283() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008284(),
          )],
          get_008285(),
        ))
      }
      pub(super) fn get_008317() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008316() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008317()))
      }
      pub(super) fn get_008279() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008280(), get_008283(), get_008316()))
      }
      pub(super) fn get_008276() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008277(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008278(),
            ),
          ],
          get_008279(),
        ))
      }
      pub(super) fn get_008320() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008321() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008319() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008320(),
          )],
          get_008321(),
        ))
      }
      pub(super) fn get_008323() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008322() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008323(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008325() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008327() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008329() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008331() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008333() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008335() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008334() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008335()]))
      }
      pub(super) fn get_008332() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008333(),
          )],
          get_008334(),
        ))
      }
      pub(super) fn get_008330() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008331(),
          )],
          get_008332(),
        ))
      }
      pub(super) fn get_008328() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008329(), get_008330()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008326() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008327(), get_008328()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008324() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008325(),
          )],
          get_008326(),
        ))
      }
      pub(super) fn get_008318() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008319(),
          get_008322(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008324(),
        ))
      }
      pub(super) fn get_008338() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'o' not bound"))
      }
      pub(super) fn get_008337() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008338()))
      }
      pub(super) fn get_008341() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("objectFieldsEx"))
      }
      pub(super) fn get_member_std_3_objectFieldsEx() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_008341()))
      }
      pub(super) fn get_ident_o_563() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("o", 563u32)
        }))
      }
      pub(super) fn get_008339() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFieldsEx(),
          vec![get_ident_o_563(), get_false()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008336() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("o", 563u32) },
            get_008337(),
          )],
          get_008339(),
        ))
      }
      pub(super) fn get_008273() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008274(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008276(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008318(),
            ),
          ],
          get_008336(),
        ))
      }
      pub(super) fn get_008343() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("objectFieldsAll"))
      }
      pub(super) fn get_008346() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008345() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008346(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008348() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008349() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008353() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008352() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008353(),
        ))
      }
      pub(super) fn get_008351() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008352(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008355() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008357() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008359() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008362() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008363() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008365() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008368() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008370() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008369() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008370(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008372() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008374() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008373() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008374(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008375() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008371() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008372(), get_008373(), get_008375()))
      }
      pub(super) fn get_008367() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008368(), get_008369(), get_008371()))
      }
      pub(super) fn get_008379() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008378() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008379(),
        ))
      }
      pub(super) fn get_008377() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008378(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008381() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008380() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008381(),
        ))
      }
      pub(super) fn get_008384() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008383() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008384()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008382() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008383()))
      }
      pub(super) fn get_008376() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008377(), get_008380(), get_008382()))
      }
      pub(super) fn get_008366() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008367(),
          )],
          get_008376(),
        ))
      }
      pub(super) fn get_008364() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008365(),
          )],
          get_008366(),
        ))
      }
      pub(super) fn get_008361() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008362(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008363(),
            ),
          ],
          get_008364(),
        ))
      }
      pub(super) fn get_008386() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008385() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008386(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008360() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008361(),
          )],
          get_008385(),
        ))
      }
      pub(super) fn get_008358() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008359(),
          )],
          get_008360(),
        ))
      }
      pub(super) fn get_008356() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008357(),
          )],
          get_008358(),
        ))
      }
      pub(super) fn get_008354() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008355(),
          )],
          get_008356(),
        ))
      }
      pub(super) fn get_008388() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008387() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008388()))
      }
      pub(super) fn get_008350() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008351(), get_008354(), get_008387()))
      }
      pub(super) fn get_008347() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008348(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008349(),
            ),
          ],
          get_008350(),
        ))
      }
      pub(super) fn get_008391() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008392() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008390() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008391(),
          )],
          get_008392(),
        ))
      }
      pub(super) fn get_008394() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008393() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008394(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008396() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008398() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008400() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008402() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008404() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008406() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008405() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008406()]))
      }
      pub(super) fn get_008403() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008404(),
          )],
          get_008405(),
        ))
      }
      pub(super) fn get_008401() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008402(),
          )],
          get_008403(),
        ))
      }
      pub(super) fn get_008399() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008400(), get_008401()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008397() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008398(), get_008399()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008395() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008396(),
          )],
          get_008397(),
        ))
      }
      pub(super) fn get_008389() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008390(),
          get_008393(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008395(),
        ))
      }
      pub(super) fn get_008408() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008338()))
      }
      pub(super) fn get_ident_o_564() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("o", 564u32)
        }))
      }
      pub(super) fn get_008409() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFieldsEx(),
          vec![get_ident_o_564(), get_true()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008407() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("o", 564u32) },
            get_008408(),
          )],
          get_008409(),
        ))
      }
      pub(super) fn get_008344() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008345(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008347(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008389(),
            ),
          ],
          get_008407(),
        ))
      }
      pub(super) fn get_008413() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008412() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008413(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008415() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008416() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008420() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008419() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008420(),
        ))
      }
      pub(super) fn get_008418() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008419(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008422() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008424() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008426() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008429() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008430() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008432() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008435() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008437() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008436() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008437(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008439() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008441() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008440() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008441(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008442() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008438() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008439(), get_008440(), get_008442()))
      }
      pub(super) fn get_008434() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008435(), get_008436(), get_008438()))
      }
      pub(super) fn get_008446() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008445() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008446(),
        ))
      }
      pub(super) fn get_008444() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008445(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008448() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008447() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008448(),
        ))
      }
      pub(super) fn get_008451() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008450() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008451()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008449() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008450()))
      }
      pub(super) fn get_008443() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008444(), get_008447(), get_008449()))
      }
      pub(super) fn get_008433() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008434(),
          )],
          get_008443(),
        ))
      }
      pub(super) fn get_008431() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008432(),
          )],
          get_008433(),
        ))
      }
      pub(super) fn get_008428() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008429(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008430(),
            ),
          ],
          get_008431(),
        ))
      }
      pub(super) fn get_008453() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008452() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008453(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008427() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008428(),
          )],
          get_008452(),
        ))
      }
      pub(super) fn get_008425() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008426(),
          )],
          get_008427(),
        ))
      }
      pub(super) fn get_008423() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008424(),
          )],
          get_008425(),
        ))
      }
      pub(super) fn get_008421() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008422(),
          )],
          get_008423(),
        ))
      }
      pub(super) fn get_008455() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008454() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008455()))
      }
      pub(super) fn get_008417() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008418(), get_008421(), get_008454()))
      }
      pub(super) fn get_008414() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008415(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008416(),
            ),
          ],
          get_008417(),
        ))
      }
      pub(super) fn get_008458() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008459() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008457() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008458(),
          )],
          get_008459(),
        ))
      }
      pub(super) fn get_008461() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008460() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008461(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008463() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008465() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008467() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008469() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008471() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008473() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008472() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008473()]))
      }
      pub(super) fn get_008470() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008471(),
          )],
          get_008472(),
        ))
      }
      pub(super) fn get_008468() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008469(),
          )],
          get_008470(),
        ))
      }
      pub(super) fn get_008466() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008467(), get_008468()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008464() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008465(), get_008466()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008462() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008463(),
          )],
          get_008464(),
        ))
      }
      pub(super) fn get_008456() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008457(),
          get_008460(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008462(),
        ))
      }
      pub(super) fn get_008475() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008338()))
      }
      pub(super) fn get_008477() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'f' not bound"))
      }
      pub(super) fn get_008476() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008477()))
      }
      pub(super) fn get_008480() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("objectHasEx"))
      }
      pub(super) fn get_member_std_3_objectHasEx() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_008480()))
      }
      pub(super) fn get_ident_o_565() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("o", 565u32)
        }))
      }
      pub(super) fn get_ident_f_566() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("f", 566u32)
        }))
      }
      pub(super) fn get_008478() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectHasEx(),
          vec![get_ident_o_565(), get_ident_f_566(), get_false()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008474() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("o", 565u32) },
              get_008475(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("f", 566u32) },
              get_008476(),
            ),
          ],
          get_008478(),
        ))
      }
      pub(super) fn get_008411() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008412(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008414(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008456(),
            ),
          ],
          get_008474(),
        ))
      }
      pub(super) fn get_008485() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008484() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008485(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008487() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008488() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008492() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008491() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008492(),
        ))
      }
      pub(super) fn get_008490() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008491(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008494() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008496() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008498() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008501() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008502() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008504() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008507() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008509() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008508() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008509(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008511() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008513() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008512() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008513(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008514() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008510() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008511(), get_008512(), get_008514()))
      }
      pub(super) fn get_008506() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008507(), get_008508(), get_008510()))
      }
      pub(super) fn get_008518() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008517() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008518(),
        ))
      }
      pub(super) fn get_008516() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008517(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008520() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008519() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008520(),
        ))
      }
      pub(super) fn get_008523() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008522() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008523()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008521() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008522()))
      }
      pub(super) fn get_008515() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008516(), get_008519(), get_008521()))
      }
      pub(super) fn get_008505() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008506(),
          )],
          get_008515(),
        ))
      }
      pub(super) fn get_008503() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008504(),
          )],
          get_008505(),
        ))
      }
      pub(super) fn get_008500() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008501(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008502(),
            ),
          ],
          get_008503(),
        ))
      }
      pub(super) fn get_008525() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008524() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008525(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008499() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008500(),
          )],
          get_008524(),
        ))
      }
      pub(super) fn get_008497() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008498(),
          )],
          get_008499(),
        ))
      }
      pub(super) fn get_008495() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008496(),
          )],
          get_008497(),
        ))
      }
      pub(super) fn get_008493() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008494(),
          )],
          get_008495(),
        ))
      }
      pub(super) fn get_008527() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008526() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008527()))
      }
      pub(super) fn get_008489() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008490(), get_008493(), get_008526()))
      }
      pub(super) fn get_008486() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008487(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008488(),
            ),
          ],
          get_008489(),
        ))
      }
      pub(super) fn get_008530() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008531() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008529() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008530(),
          )],
          get_008531(),
        ))
      }
      pub(super) fn get_008533() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008532() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008533(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008535() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008537() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008539() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008541() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008543() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008545() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008544() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008545()]))
      }
      pub(super) fn get_008542() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008543(),
          )],
          get_008544(),
        ))
      }
      pub(super) fn get_008540() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008541(),
          )],
          get_008542(),
        ))
      }
      pub(super) fn get_008538() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008539(), get_008540()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008536() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008537(), get_008538()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008534() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008535(),
          )],
          get_008536(),
        ))
      }
      pub(super) fn get_008528() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008529(),
          get_008532(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008534(),
        ))
      }
      pub(super) fn get_008547() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008338()))
      }
      pub(super) fn get_008548() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008477()))
      }
      pub(super) fn get_ident_o_567() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("o", 567u32)
        }))
      }
      pub(super) fn get_ident_f_568() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("f", 568u32)
        }))
      }
      pub(super) fn get_008549() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectHasEx(),
          vec![get_ident_o_567(), get_ident_f_568(), get_true()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008546() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("o", 567u32) },
              get_008547(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("f", 568u32) },
              get_008548(),
            ),
          ],
          get_008549(),
        ))
      }
      pub(super) fn get_008483() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008484(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008486(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008528(),
            ),
          ],
          get_008546(),
        ))
      }
      pub(super) fn get_008554() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008553() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008554(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008556() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008557() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008561() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008560() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008561(),
        ))
      }
      pub(super) fn get_008559() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008560(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008563() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008565() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008567() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008570() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008571() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008573() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008576() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008578() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008577() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008578(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008580() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008582() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008581() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008582(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008583() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008579() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008580(), get_008581(), get_008583()))
      }
      pub(super) fn get_008575() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008576(), get_008577(), get_008579()))
      }
      pub(super) fn get_008587() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008586() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008587(),
        ))
      }
      pub(super) fn get_008585() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008586(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008589() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008588() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008589(),
        ))
      }
      pub(super) fn get_008592() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008591() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008592()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008590() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008591()))
      }
      pub(super) fn get_008584() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008585(), get_008588(), get_008590()))
      }
      pub(super) fn get_008574() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008575(),
          )],
          get_008584(),
        ))
      }
      pub(super) fn get_008572() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008573(),
          )],
          get_008574(),
        ))
      }
      pub(super) fn get_008569() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008570(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008571(),
            ),
          ],
          get_008572(),
        ))
      }
      pub(super) fn get_008594() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008593() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008594(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008568() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008569(),
          )],
          get_008593(),
        ))
      }
      pub(super) fn get_008566() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008567(),
          )],
          get_008568(),
        ))
      }
      pub(super) fn get_008564() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008565(),
          )],
          get_008566(),
        ))
      }
      pub(super) fn get_008562() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008563(),
          )],
          get_008564(),
        ))
      }
      pub(super) fn get_008596() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008595() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008596()))
      }
      pub(super) fn get_008558() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008559(), get_008562(), get_008595()))
      }
      pub(super) fn get_008555() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008556(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008557(),
            ),
          ],
          get_008558(),
        ))
      }
      pub(super) fn get_008599() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008600() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008598() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008599(),
          )],
          get_008600(),
        ))
      }
      pub(super) fn get_008602() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008601() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008602(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008604() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008606() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008608() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008610() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008612() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008614() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008613() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008614()]))
      }
      pub(super) fn get_008611() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008612(),
          )],
          get_008613(),
        ))
      }
      pub(super) fn get_008609() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008610(),
          )],
          get_008611(),
        ))
      }
      pub(super) fn get_008607() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008608(), get_008609()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008605() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008606(), get_008607()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008603() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008604(),
          )],
          get_008605(),
        ))
      }
      pub(super) fn get_008597() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008598(),
          get_008601(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008603(),
        ))
      }
      pub(super) fn get_008616() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_008617() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_a_569() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 569u32)
        }))
      }
      pub(super) fn get_008619() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_a_569()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_b_570() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 570u32)
        }))
      }
      pub(super) fn get_008622() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_b_570()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008628() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("primitiveEquals"))
      }
      pub(super) fn get_member_std_3_primitiveEquals() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_008628()))
      }
      pub(super) fn get_ident_ta_571() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("ta", 571u32)
        }))
      }
      pub(super) fn get_ident_tb_572() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("tb", 572u32)
        }))
      }
      pub(super) fn get_008626() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_primitiveEquals(),
          vec![get_ident_ta_571(), get_ident_tb_572()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008625() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008626(),
        ))
      }
      pub(super) fn get_008632() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_primitiveEquals(),
          vec![get_ident_ta_571(), get_000405()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008634() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_a_569()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_la_573() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("la", 573u32)
        }))
      }
      pub(super) fn get_008639() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_570()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008637() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_primitiveEquals(),
          vec![get_ident_la_573(), get_008639()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008636() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008637(),
        ))
      }
      pub(super) fn get_008642() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_008643() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_008644() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_577() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 577u32)
        }))
      }
      pub(super) fn get_008646() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_577(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_la_573(),
        ))
      }
      pub(super) fn get_ident_a_575() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 575u32)
        }))
      }
      pub(super) fn get_008651() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_575(),
          get_ident_i_577(),
        ))
      }
      pub(super) fn get_ident_b_576() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 576u32)
        }))
      }
      pub(super) fn get_008653() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_576(),
          get_ident_i_577(),
        ))
      }
      pub(super) fn get_008650() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_008651(), get_008653()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008649() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008650(),
        ))
      }
      pub(super) fn get_ident_aux_574() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 574u32)
        }))
      }
      pub(super) fn get_008657() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_577(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008655() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_574(),
          vec![get_ident_a_575(), get_ident_b_576(), get_008657()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008648() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008649(), get_false(), get_008655()))
      }
      pub(super) fn get_008645() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008646(), get_true(), get_008648()))
      }
      pub(super) fn get_008641() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 575u32) },
              get_008642(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 576u32) },
              get_008643(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 577u32) },
              get_008644(),
            ),
          ],
          get_008645(),
        ))
      }
      pub(super) fn get_008658() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_574(),
          vec![get_ident_a_569(), get_ident_b_570(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008640() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 574u32) },
            get_008641(),
          )],
          get_008658(),
        ))
      }
      pub(super) fn get_008635() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008636(), get_false(), get_008640()))
      }
      pub(super) fn get_008633() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("la", 573u32) },
            get_008634(),
          )],
          get_008635(),
        ))
      }
      pub(super) fn get_008660() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_primitiveEquals(),
          vec![get_ident_ta_571(), get_000335()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008662() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_a_569()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_fields_578() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("fields", 578u32)
        }))
      }
      pub(super) fn get_008664() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_fields_578()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008669() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_b_570()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008668() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_fields_578(), get_008669()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008667() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008668(),
        ))
      }
      pub(super) fn get_008672() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_008673() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_008674() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_583() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 583u32)
        }))
      }
      pub(super) fn get_ident_lfields_579() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("lfields", 579u32)
        }))
      }
      pub(super) fn get_008676() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_583(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lfields_579(),
        ))
      }
      pub(super) fn get_008681() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_fields_578(),
          get_ident_i_583(),
        ))
      }
      pub(super) fn get_ident_a_581() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 581u32)
        }))
      }
      pub(super) fn get_ident_f_584() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("f", 584u32)
        }))
      }
      pub(super) fn get_008684() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_581(),
          get_ident_f_584(),
        ))
      }
      pub(super) fn get_ident_b_582() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 582u32)
        }))
      }
      pub(super) fn get_008687() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_b_582(),
          get_ident_f_584(),
        ))
      }
      pub(super) fn get_008683() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_008684(), get_008687()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008682() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008683(),
        ))
      }
      pub(super) fn get_008680() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("f", 584u32) },
            get_008681(),
          )],
          get_008682(),
        ))
      }
      pub(super) fn get_ident_aux_580() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("aux", 580u32)
        }))
      }
      pub(super) fn get_008691() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_583(),
          CoreBinaryOperator::Plus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008689() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_580(),
          vec![get_ident_a_581(), get_ident_b_582(), get_008691()],
          vec![],
          true,
        ))
      }
      pub(super) fn get_008679() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008680(), get_false(), get_008689()))
      }
      pub(super) fn get_008675() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008676(), get_true(), get_008679()))
      }
      pub(super) fn get_008671() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 581u32) },
              get_008672(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 582u32) },
              get_008673(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("i", 583u32) },
              get_008674(),
            ),
          ],
          get_008675(),
        ))
      }
      pub(super) fn get_008692() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_aux_580(),
          vec![get_ident_a_569(), get_ident_b_570(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008670() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("aux", 580u32) },
            get_008671(),
          )],
          get_008692(),
        ))
      }
      pub(super) fn get_008666() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008667(), get_false(), get_008670()))
      }
      pub(super) fn get_008663() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lfields", 579u32) },
            get_008664(),
          )],
          get_008666(),
        ))
      }
      pub(super) fn get_008661() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("fields", 578u32) },
            get_008662(),
          )],
          get_008663(),
        ))
      }
      pub(super) fn get_008693() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_primitiveEquals(),
          vec![get_ident_a_569(), get_ident_b_570()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008659() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008660(), get_008661(), get_008693()))
      }
      pub(super) fn get_008631() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008632(), get_008633(), get_008659()))
      }
      pub(super) fn get_008624() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008625(), get_false(), get_008631()))
      }
      pub(super) fn get_008621() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("tb", 572u32) },
            get_008622(),
          )],
          get_008624(),
        ))
      }
      pub(super) fn get_008618() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("ta", 571u32) },
            get_008619(),
          )],
          get_008621(),
        ))
      }
      pub(super) fn get_008615() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("a", 569u32) },
              get_008616(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("b", 570u32) },
              get_008617(),
            ),
          ],
          get_008618(),
        ))
      }
      pub(super) fn get_008552() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008553(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008555(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008597(),
            ),
          ],
          get_008615(),
        ))
      }
      pub(super) fn get_008694() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("resolvePath"))
      }
      pub(super) fn get_008697() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008696() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008697(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008699() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008700() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008704() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008703() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008704(),
        ))
      }
      pub(super) fn get_008702() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008703(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008706() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008708() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008710() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008713() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008714() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008716() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008719() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008721() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008720() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008721(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008723() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008725() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008724() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008725(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008726() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008722() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008723(), get_008724(), get_008726()))
      }
      pub(super) fn get_008718() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008719(), get_008720(), get_008722()))
      }
      pub(super) fn get_008730() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008729() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008730(),
        ))
      }
      pub(super) fn get_008728() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008729(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008732() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008731() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008732(),
        ))
      }
      pub(super) fn get_008735() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008734() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008735()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008733() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008734()))
      }
      pub(super) fn get_008727() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008728(), get_008731(), get_008733()))
      }
      pub(super) fn get_008717() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008718(),
          )],
          get_008727(),
        ))
      }
      pub(super) fn get_008715() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008716(),
          )],
          get_008717(),
        ))
      }
      pub(super) fn get_008712() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008713(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008714(),
            ),
          ],
          get_008715(),
        ))
      }
      pub(super) fn get_008737() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008736() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008737(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008711() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008712(),
          )],
          get_008736(),
        ))
      }
      pub(super) fn get_008709() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008710(),
          )],
          get_008711(),
        ))
      }
      pub(super) fn get_008707() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008708(),
          )],
          get_008709(),
        ))
      }
      pub(super) fn get_008705() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008706(),
          )],
          get_008707(),
        ))
      }
      pub(super) fn get_008739() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008738() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008739()))
      }
      pub(super) fn get_008701() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008702(), get_008705(), get_008738()))
      }
      pub(super) fn get_008698() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008699(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008700(),
            ),
          ],
          get_008701(),
        ))
      }
      pub(super) fn get_008742() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008743() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008741() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008742(),
          )],
          get_008743(),
        ))
      }
      pub(super) fn get_008745() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008744() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008745(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008747() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008749() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008751() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008753() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008755() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008757() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008756() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008757()]))
      }
      pub(super) fn get_008754() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008755(),
          )],
          get_008756(),
        ))
      }
      pub(super) fn get_008752() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008753(),
          )],
          get_008754(),
        ))
      }
      pub(super) fn get_008750() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008751(), get_008752()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008748() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008749(), get_008750()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008746() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008747(),
          )],
          get_008748(),
        ))
      }
      pub(super) fn get_008740() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008741(),
          get_008744(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008746(),
        ))
      }
      pub(super) fn get_008759() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008477()))
      }
      pub(super) fn get_008760() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_006942()))
      }
      pub(super) fn get_ident_f_585() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("f", 585u32)
        }))
      }
      pub(super) fn get_008764() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("/"))
      }
      pub(super) fn get_008762() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_split(),
          vec![get_ident_f_585(), get_008764()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_arr_587() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 587u32)
        }))
      }
      pub(super) fn get_008769() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_587()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008768() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008769(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_008772() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_588() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 588u32)
        }))
      }
      pub(super) fn get_008773() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_587(),
          get_ident_i_588(),
        ))
      }
      pub(super) fn get_008771() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 588u32) },
            get_008772(),
          )],
          get_008773(),
        ))
      }
      pub(super) fn get_008767() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008768(), get_008771()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_r_586() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("r", 586u32)
        }))
      }
      pub(super) fn get_008775() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_r_586()]))
      }
      pub(super) fn get_008766() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008767(),
          CoreBinaryOperator::Plus(None),
          get_008775(),
        ))
      }
      pub(super) fn get_008765() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008764(), get_008766()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008761() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("arr", 587u32) },
            get_008762(),
          )],
          get_008765(),
        ))
      }
      pub(super) fn get_008758() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("f", 585u32) },
              get_008759(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("r", 586u32) },
              get_008760(),
            ),
          ],
          get_008761(),
        ))
      }
      pub(super) fn get_008695() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008696(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008698(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008740(),
            ),
          ],
          get_008758(),
        ))
      }
      pub(super) fn get_008777() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("prune"))
      }
      pub(super) fn get_008780() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008779() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008780(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008782() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008783() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008787() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008786() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008787(),
        ))
      }
      pub(super) fn get_008785() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008786(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008789() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008791() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008793() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008796() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008797() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008799() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008802() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008804() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008803() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008804(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008806() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008808() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008807() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008808(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008809() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008805() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008806(), get_008807(), get_008809()))
      }
      pub(super) fn get_008801() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008802(), get_008803(), get_008805()))
      }
      pub(super) fn get_008813() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008812() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008813(),
        ))
      }
      pub(super) fn get_008811() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008812(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008815() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008814() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008815(),
        ))
      }
      pub(super) fn get_008818() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008817() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008818()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008816() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008817()))
      }
      pub(super) fn get_008810() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008811(), get_008814(), get_008816()))
      }
      pub(super) fn get_008800() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008801(),
          )],
          get_008810(),
        ))
      }
      pub(super) fn get_008798() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008799(),
          )],
          get_008800(),
        ))
      }
      pub(super) fn get_008795() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008796(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008797(),
            ),
          ],
          get_008798(),
        ))
      }
      pub(super) fn get_008820() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008819() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008820(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008794() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008795(),
          )],
          get_008819(),
        ))
      }
      pub(super) fn get_008792() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008793(),
          )],
          get_008794(),
        ))
      }
      pub(super) fn get_008790() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008791(),
          )],
          get_008792(),
        ))
      }
      pub(super) fn get_008788() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008789(),
          )],
          get_008790(),
        ))
      }
      pub(super) fn get_008822() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008821() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008822()))
      }
      pub(super) fn get_008784() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008785(), get_008788(), get_008821()))
      }
      pub(super) fn get_008781() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008782(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008783(),
            ),
          ],
          get_008784(),
        ))
      }
      pub(super) fn get_008825() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008826() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008824() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008825(),
          )],
          get_008826(),
        ))
      }
      pub(super) fn get_008828() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008827() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008828(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008830() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008832() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008834() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008836() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008838() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008840() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008839() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008840()]))
      }
      pub(super) fn get_008837() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008838(),
          )],
          get_008839(),
        ))
      }
      pub(super) fn get_008835() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008836(),
          )],
          get_008837(),
        ))
      }
      pub(super) fn get_008833() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008834(), get_008835()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008831() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008832(), get_008833()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008829() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008830(),
          )],
          get_008831(),
        ))
      }
      pub(super) fn get_008823() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008824(),
          get_008827(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008829(),
        ))
      }
      pub(super) fn get_008842() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000542()))
      }
      pub(super) fn get_008845() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000730()))
      }
      pub(super) fn get_ident_b_591() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("b", 591u32)
        }))
      }
      pub(super) fn get_008847() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_b_591(), get_null()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008850() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_b_591()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008852() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_591()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008851() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008852(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008854() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_b_591()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008856() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_b_591()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008855() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008856(),
          CoreBinaryOperator::GreaterThan(None),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008853() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008854(), get_008855(), get_true()))
      }
      pub(super) fn get_008849() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008850(), get_008851(), get_008853()))
      }
      pub(super) fn get_008846() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008847(), get_false(), get_008849()))
      }
      pub(super) fn get_008844() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("b", 591u32) },
            get_008845(),
          )],
          get_008846(),
        ))
      }
      pub(super) fn get_ident_a_589() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("a", 589u32)
        }))
      }
      pub(super) fn get_008858() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_a_589()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008862() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_593() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 593u32)
        }))
      }
      pub(super) fn get_008864() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_593()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008867() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_594() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 594u32)
        }))
      }
      pub(super) fn get_008869() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_593(),
          get_ident_genid_i_594(),
        ))
      }
      pub(super) fn get_ident_isContent_590() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("isContent", 590u32)
        }))
      }
      pub(super) fn get_ident_genid__2() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$", 2u32)
        }))
      }
      pub(super) fn get_member_genid__2_prune() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid__2(),
          get_008777(),
        ))
      }
      pub(super) fn get_ident_x_592() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 592u32)
        }))
      }
      pub(super) fn get_008874() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_genid__2_prune(),
          vec![get_ident_x_592()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008872() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_isContent_590(),
          vec![get_008874()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_member_std_3_prune() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(get_ident_std_3(), get_008777()))
      }
      pub(super) fn get_008879() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_prune(),
          vec![get_ident_x_592()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008878() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008879()]))
      }
      pub(super) fn get_008881() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008871() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008872(), get_008878(), get_008881()))
      }
      pub(super) fn get_008868() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("x", 592u32) },
            get_008869(),
          )],
          get_008871(),
        ))
      }
      pub(super) fn get_008866() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 594u32) },
            get_008867(),
          )],
          get_008868(),
        ))
      }
      pub(super) fn get_008863() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008864(), get_008866()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008861() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008862(), get_008863()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008860() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 593u32) },
            get_ident_a_589(),
          )],
          get_008861(),
        ))
      }
      pub(super) fn get_008883() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isObject(),
          vec![get_ident_a_589()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_genid_arr_595() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 595u32)
        }))
      }
      pub(super) fn get_008886() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_595(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_ident_x_596() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("x", 596u32)
        }))
      }
      pub(super) fn get_008885() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("x", 596u32) },
            get_008886(),
          )],
          get_ident_x_596(),
        ))
      }
      pub(super) fn get_008890() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_595(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008892() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_589(),
          get_ident_x_596(),
        ))
      }
      pub(super) fn get_008891() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_genid__2_prune(),
          vec![get_008892()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008889() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("x", 596u32) },
            get_008890(),
          )],
          get_008891(),
        ))
      }
      pub(super) fn get_008894() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_objectFields(),
          vec![get_ident_a_589()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008896() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_ident_genid_arr_597() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$arr", 597u32)
        }))
      }
      pub(super) fn get_008898() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_597()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008901() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_ident_genid_i_598() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("$i", 598u32)
        }))
      }
      pub(super) fn get_008903() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_597(),
          get_ident_genid_i_598(),
        ))
      }
      pub(super) fn get_008908() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_a_589(),
          get_ident_x_596(),
        ))
      }
      pub(super) fn get_008907() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_prune(),
          vec![get_008908()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008906() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_ident_isContent_590(),
          vec![get_008907()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008910() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_x_596()]))
      }
      pub(super) fn get_008909() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008910()]))
      }
      pub(super) fn get_008911() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008905() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008906(), get_008909(), get_008911()))
      }
      pub(super) fn get_008902() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("x", 596u32) },
            get_008903(),
          )],
          get_008905(),
        ))
      }
      pub(super) fn get_008900() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 598u32) },
            get_008901(),
          )],
          get_008902(),
        ))
      }
      pub(super) fn get_008897() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008898(), get_008900()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008895() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008896(), get_008897()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008893() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 597u32) },
            get_008894(),
          )],
          get_008895(),
        ))
      }
      pub(super) fn get_008884() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008885(),
          get_008889(),
          unsafe { CoreIdent::new_unchecked("$arr", 595u32) },
          get_008893(),
        ))
      }
      pub(super) fn get_008882() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(
          get_008883(),
          get_008884(),
          get_ident_a_589(),
        ))
      }
      pub(super) fn get_008857() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008858(), get_008860(), get_008882()))
      }
      pub(super) fn get_008843() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("isContent", 590u32) },
            get_008844(),
          )],
          get_008857(),
        ))
      }
      pub(super) fn get_008841() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("a", 589u32) },
            get_008842(),
          )],
          get_008843(),
        ))
      }
      pub(super) fn get_008778() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008779(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008781(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008823(),
            ),
          ],
          get_008841(),
        ))
      }
      pub(super) fn get_008914() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_008913() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_008914(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_008916() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_008917() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_008921() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008920() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_008921(),
        ))
      }
      pub(super) fn get_008919() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008920(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_008923() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008925() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008927() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008930() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_008931() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_008933() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008936() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008938() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_008937() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008938(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008940() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008942() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_008941() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008942(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_008943() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_008939() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008940(), get_008941(), get_008943()))
      }
      pub(super) fn get_008935() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008936(), get_008937(), get_008939()))
      }
      pub(super) fn get_008947() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008946() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_008947(),
        ))
      }
      pub(super) fn get_008945() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008946(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_008949() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_008948() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_008949(),
        ))
      }
      pub(super) fn get_008952() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_008951() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_008952()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008950() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008951()))
      }
      pub(super) fn get_008944() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008945(), get_008948(), get_008950()))
      }
      pub(super) fn get_008934() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_008935(),
          )],
          get_008944(),
        ))
      }
      pub(super) fn get_008932() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_008933(),
          )],
          get_008934(),
        ))
      }
      pub(super) fn get_008929() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_008930(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_008931(),
            ),
          ],
          get_008932(),
        ))
      }
      pub(super) fn get_008954() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008953() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_008954(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008928() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_008929(),
          )],
          get_008953(),
        ))
      }
      pub(super) fn get_008926() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_008927(),
          )],
          get_008928(),
        ))
      }
      pub(super) fn get_008924() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_008925(),
          )],
          get_008926(),
        ))
      }
      pub(super) fn get_008922() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_008923(),
          )],
          get_008924(),
        ))
      }
      pub(super) fn get_008956() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008955() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008956()))
      }
      pub(super) fn get_008918() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008919(), get_008922(), get_008955()))
      }
      pub(super) fn get_008915() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_008916(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_008917(),
            ),
          ],
          get_008918(),
        ))
      }
      pub(super) fn get_008959() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008960() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008958() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008959(),
          )],
          get_008960(),
        ))
      }
      pub(super) fn get_008962() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_008961() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008962(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_008964() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008966() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_008968() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008970() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_008972() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_008974() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_008973() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_008974()]))
      }
      pub(super) fn get_008971() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_008972(),
          )],
          get_008973(),
        ))
      }
      pub(super) fn get_008969() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_008970(),
          )],
          get_008971(),
        ))
      }
      pub(super) fn get_008967() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_008968(), get_008969()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008965() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_008966(), get_008967()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008963() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_008964(),
          )],
          get_008965(),
        ))
      }
      pub(super) fn get_008957() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_008958(),
          get_008961(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_008963(),
        ))
      }
      pub(super) fn get_008977() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("Parameter 'pat' not bound"))
      }
      pub(super) fn get_008976() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008977()))
      }
      pub(super) fn get_008978() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_ident_pat_599() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("pat", 599u32)
        }))
      }
      pub(super) fn get_008981() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_pat_599()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008980() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008981(),
        ))
      }
      pub(super) fn get_008985() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "findSubstr first parameter should be a string, got ",
        ))
      }
      pub(super) fn get_008986() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_pat_599()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008984() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008985(),
          CoreBinaryOperator::Plus(None),
          get_008986(),
        ))
      }
      pub(super) fn get_008983() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008984()))
      }
      pub(super) fn get_ident_str_600() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str", 600u32)
        }))
      }
      pub(super) fn get_008989() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isString(),
          vec![get_ident_str_600()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008988() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_008989(),
        ))
      }
      pub(super) fn get_008993() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "findSubstr second parameter should be a string, got ",
        ))
      }
      pub(super) fn get_008994() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_str_600()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008992() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_008993(),
          CoreBinaryOperator::Plus(None),
          get_008994(),
        ))
      }
      pub(super) fn get_008991() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_008992()))
      }
      pub(super) fn get_008996() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_pat_599()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008998() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_str_600()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_ident_pat_len_601() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("pat_len", 601u32)
        }))
      }
      pub(super) fn get_ident_str_len_602() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("str_len", 602u32)
        }))
      }
      pub(super) fn get_009004() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::Or(None),
          get_ident_str_len_602(),
        ))
      }
      pub(super) fn get_009002() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_ident_pat_len_601(), get_009004()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009006() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::Or(None),
          get_ident_pat_len_601(),
        ))
      }
      pub(super) fn get_009001() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_009002(), get_009006()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009000() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_009001(),
          CoreBinaryOperator::GreaterThan(None),
          get_ident_str_len_602(),
        ))
      }
      pub(super) fn get_009007() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_009010() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_603() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 603u32)
        }))
      }
      pub(super) fn get_009014() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_i_603(),
          CoreBinaryOperator::Plus(None),
          get_ident_pat_len_601(),
        ))
      }
      pub(super) fn get_009012() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_slice(),
          vec![
            get_ident_str_600(),
            get_ident_i_603(),
            get_009014(),
            get_null(),
          ],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009011() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_009012(), get_ident_pat_599()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009009() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 603u32) },
            get_009010(),
          )],
          get_009011(),
        ))
      }
      pub(super) fn get_009016() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_str_len_602(),
          CoreBinaryOperator::Minus(None),
          get_ident_pat_len_601(),
        ))
      }
      pub(super) fn get_009015() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_009016()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009008() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_filter(),
          vec![get_009009(), get_009015()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_008999() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_009000(), get_009007(), get_009008()))
      }
      pub(super) fn get_008997() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("str_len", 602u32) },
            get_008998(),
          )],
          get_008999(),
        ))
      }
      pub(super) fn get_008995() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("pat_len", 601u32) },
            get_008996(),
          )],
          get_008997(),
        ))
      }
      pub(super) fn get_008987() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008988(), get_008991(), get_008995()))
      }
      pub(super) fn get_008979() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_008980(), get_008983(), get_008987()))
      }
      pub(super) fn get_008975() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("pat", 599u32) },
              get_008976(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 600u32) },
              get_008978(),
            ),
          ],
          get_008979(),
        ))
      }
      pub(super) fn get_008912() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_008913(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_008915(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_008957(),
            ),
          ],
          get_008975(),
        ))
      }
      pub(super) fn get_009017() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str("find"))
      }
      pub(super) fn get_009020() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000006()))
      }
      pub(super) fn get_009019() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("x", 8u32) },
            get_009020(),
          )],
          get_ident_x_8(),
        ))
      }
      pub(super) fn get_009022() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000010()))
      }
      pub(super) fn get_009023() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000012()))
      }
      pub(super) fn get_009027() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_009026() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::GreaterThan(None),
          get_009027(),
        ))
      }
      pub(super) fn get_009025() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_009026(),
          CoreBinaryOperator::LessThanOrEquals(None),
          get_number_16_0(),
        ))
      }
      pub(super) fn get_009029() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000025()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009031() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000028()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009033() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_000031()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009036() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000035()))
      }
      pub(super) fn get_009037() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000037()))
      }
      pub(super) fn get_009039() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_codepoint(),
          vec![get_ident_char_16()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009042() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_009044() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_lower_a_code_13(),
        ))
      }
      pub(super) fn get_009043() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_009044(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_009046() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_009048() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_upper_a_code_12(),
        ))
      }
      pub(super) fn get_009047() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_009048(),
          CoreBinaryOperator::Plus(None),
          get_number_10_0(),
        ))
      }
      pub(super) fn get_009049() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_code_17(),
          CoreBinaryOperator::Minus(None),
          get_ident_zero_code_11(),
        ))
      }
      pub(super) fn get_009045() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_009046(), get_009047(), get_009049()))
      }
      pub(super) fn get_009041() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_009042(), get_009043(), get_009045()))
      }
      pub(super) fn get_009053() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_number_0_0(),
          CoreBinaryOperator::And(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_009052() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_digit_18(),
          CoreBinaryOperator::GreaterThanOrEquals(None),
          get_009053(),
        ))
      }
      pub(super) fn get_009051() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_009052(),
          CoreBinaryOperator::LessThan(None),
          get_ident_base_10(),
        ))
      }
      pub(super) fn get_009055() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_aggregate_15(),
          CoreBinaryOperator::Plus(None),
          get_ident_digit_18(),
        ))
      }
      pub(super) fn get_009054() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_ident_base_10(),
          CoreBinaryOperator::Mult(None),
          get_009055(),
        ))
      }
      pub(super) fn get_009058() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![
          get_ident_str_9(),
          get_ident_base_10(),
        ]))
      }
      pub(super) fn get_009057() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000068(), get_009058()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009056() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_009057()))
      }
      pub(super) fn get_009050() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_009051(), get_009054(), get_009056()))
      }
      pub(super) fn get_009040() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("digit", 18u32) },
            get_009041(),
          )],
          get_009050(),
        ))
      }
      pub(super) fn get_009038() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("code", 17u32) },
            get_009039(),
          )],
          get_009040(),
        ))
      }
      pub(super) fn get_009035() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("aggregate", 15u32) },
              get_009036(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("char", 16u32) },
              get_009037(),
            ),
          ],
          get_009038(),
        ))
      }
      pub(super) fn get_009060() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_stringChars(),
          vec![get_ident_str_9()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009059() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_foldl(),
          vec![get_ident_addDigit_14(), get_009060(), get_number_0_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009034() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("addDigit", 14u32) },
            get_009035(),
          )],
          get_009059(),
        ))
      }
      pub(super) fn get_009032() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("lower_a_code", 13u32) },
            get_009033(),
          )],
          get_009034(),
        ))
      }
      pub(super) fn get_009030() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("upper_a_code", 12u32) },
            get_009031(),
          )],
          get_009032(),
        ))
      }
      pub(super) fn get_009028() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("zero_code", 11u32) },
            get_009029(),
          )],
          get_009030(),
        ))
      }
      pub(super) fn get_009062() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_mod(),
          vec![get_000080(), get_ident_base_10()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009061() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_009062()))
      }
      pub(super) fn get_009024() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_009025(), get_009028(), get_009061()))
      }
      pub(super) fn get_009021() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("str", 9u32) },
              get_009022(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("base", 10u32) },
              get_009023(),
            ),
          ],
          get_009024(),
        ))
      }
      pub(super) fn get_009065() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_009066() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_base64_table_6(),
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_009064() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_009065(),
          )],
          get_009066(),
        ))
      }
      pub(super) fn get_009068() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_19(),
          get_number_0_0(),
        ))
      }
      pub(super) fn get_009067() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_009068(),
          )],
          get_ident_i_20(),
        ))
      }
      pub(super) fn get_009070() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_number_63_0()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009072() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![]))
      }
      pub(super) fn get_009074() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_genid_arr_21()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009076() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000109()))
      }
      pub(super) fn get_009078() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_genid_arr_21(),
          get_ident_genid_i_22(),
        ))
      }
      pub(super) fn get_009080() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_ident_i_20()]))
      }
      pub(super) fn get_009079() -> CoreExpr {
        CoreExpr::Array(ArrayCoreExpr::new(vec![get_009080()]))
      }
      pub(super) fn get_009077() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("i", 20u32) },
            get_009078(),
          )],
          get_009079(),
        ))
      }
      pub(super) fn get_009075() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("$i", 22u32) },
            get_009076(),
          )],
          get_009077(),
        ))
      }
      pub(super) fn get_009073() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_makeArray(),
          vec![get_009074(), get_009075()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009071() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_join(),
          vec![get_009072(), get_009073()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009069() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![CoreLocalBind::new(
            unsafe { CoreIdent::new_unchecked("$arr", 21u32) },
            get_009070(),
          )],
          get_009071(),
        ))
      }
      pub(super) fn get_009063() -> CoreExpr {
        CoreExpr::ObjectComp(ObjectCompCoreExpr::new(
          get_009064(),
          get_009067(),
          unsafe { CoreIdent::new_unchecked("$arr", 19u32) },
          get_009069(),
        ))
      }
      pub(super) fn get_009082() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_005919()))
      }
      pub(super) fn get_009083() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_001560()))
      }
      pub(super) fn get_ident_arr_605() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("arr", 605u32)
        }))
      }
      pub(super) fn get_009086() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_isArray(),
          vec![get_ident_arr_605()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009085() -> CoreExpr {
        CoreExpr::Unary(UnaryCoreExpr::new(
          CoreUnaryOperator::Not(None),
          get_009086(),
        ))
      }
      pub(super) fn get_009090() -> CoreExpr {
        CoreExpr::Literal(LiteralCoreExpr::new_str(
          "find second parameter should be an array, got ",
        ))
      }
      pub(super) fn get_009091() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_type(),
          vec![get_ident_arr_605()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009089() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_009090(),
          CoreBinaryOperator::Plus(None),
          get_009091(),
        ))
      }
      pub(super) fn get_009088() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_009089()))
      }
      pub(super) fn get_009094() -> CoreExpr {
        CoreExpr::Error(ErrorCoreExpr::new(get_000644()))
      }
      pub(super) fn get_ident_i_606() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("i", 606u32)
        }))
      }
      pub(super) fn get_009096() -> CoreExpr {
        CoreExpr::MemberAccess(MemberAccessCoreExpr::new(
          get_ident_arr_605(),
          get_ident_i_606(),
        ))
      }
      pub(super) fn get_ident_value_604() -> CoreExpr {
        CoreExpr::Ident(IdentCoreExpr::new(unsafe {
          CoreIdent::new_unchecked("value", 604u32)
        }))
      }
      pub(super) fn get_009095() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_equals(),
          vec![get_009096(), get_ident_value_604()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009093() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![CoreFunctionParam::new(
            unsafe { CoreIdent::new_unchecked("i", 606u32) },
            get_009094(),
          )],
          get_009095(),
        ))
      }
      pub(super) fn get_009101() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_length(),
          vec![get_ident_arr_605()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009100() -> CoreExpr {
        CoreExpr::Binary(BinaryCoreExpr::new(
          get_009101(),
          CoreBinaryOperator::Minus(None),
          get_number_1_0(),
        ))
      }
      pub(super) fn get_009099() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_range(),
          vec![get_number_0_0(), get_009100()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009092() -> CoreExpr {
        CoreExpr::Apply(ApplyCoreExpr::new(
          get_member_std_3_filter(),
          vec![get_009093(), get_009099()],
          vec![],
          false,
        ))
      }
      pub(super) fn get_009084() -> CoreExpr {
        CoreExpr::If(IfCoreExpr::new(get_009085(), get_009088(), get_009092()))
      }
      pub(super) fn get_009081() -> CoreExpr {
        CoreExpr::Function(FunctionCoreExpr::new(
          vec![
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("value", 604u32) },
              get_009082(),
            ),
            CoreFunctionParam::new(
              unsafe { CoreIdent::new_unchecked("arr", 605u32) },
              get_009083(),
            ),
          ],
          get_009084(),
        ))
      }
      pub(super) fn get_009018() -> CoreExpr {
        CoreExpr::Local(LocalCoreExpr::new(
          vec![
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("$", 2u32) }, get_self()),
            CoreLocalBind::new(unsafe { CoreIdent::new_unchecked("std", 3u32) }, get_self()),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("id", 4u32) },
              get_009019(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("parse_nat", 5u32) },
              get_009021(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_table", 6u32) },
              get_000081(),
            ),
            CoreLocalBind::new(
              unsafe { CoreIdent::new_unchecked("base64_inv", 7u32) },
              get_009063(),
            ),
          ],
          get_009081(),
        ))
      }
      pub(super) fn get_000000() -> CoreExpr {
        CoreExpr::Object(ObjectCoreExpr::new(
          vec![],
          vec![
            CoreObjectField::new(
              get_000001(),
              CoreObjectFieldOperator::Hidden(None),
              get_000002(),
            ),
            CoreObjectField::new(
              get_000126(),
              CoreObjectFieldOperator::Hidden(None),
              get_000127(),
            ),
            CoreObjectField::new(
              get_000196(),
              CoreObjectFieldOperator::Hidden(None),
              get_000197(),
            ),
            CoreObjectField::new(
              get_000266(),
              CoreObjectFieldOperator::Hidden(None),
              get_000267(),
            ),
            CoreObjectField::new(
              get_000336(),
              CoreObjectFieldOperator::Hidden(None),
              get_000337(),
            ),
            CoreObjectField::new(
              get_000406(),
              CoreObjectFieldOperator::Hidden(None),
              get_000407(),
            ),
            CoreObjectField::new(
              get_000476(),
              CoreObjectFieldOperator::Hidden(None),
              get_000477(),
            ),
            CoreObjectField::new(
              get_000549(),
              CoreObjectFieldOperator::Hidden(None),
              get_000550(),
            ),
            CoreObjectField::new(
              get_000663(),
              CoreObjectFieldOperator::Hidden(None),
              get_000664(),
            ),
            CoreObjectField::new(
              get_000742(),
              CoreObjectFieldOperator::Hidden(None),
              get_000743(),
            ),
            CoreObjectField::new(
              get_000821(),
              CoreObjectFieldOperator::Hidden(None),
              get_000822(),
            ),
            CoreObjectField::new(
              get_000906(),
              CoreObjectFieldOperator::Hidden(None),
              get_000907(),
            ),
            CoreObjectField::new(
              get_000988(),
              CoreObjectFieldOperator::Hidden(None),
              get_000989(),
            ),
            CoreObjectField::new(
              get_000077(),
              CoreObjectFieldOperator::Hidden(None),
              get_001059(),
            ),
            CoreObjectField::new(
              get_001131(),
              CoreObjectFieldOperator::Hidden(None),
              get_001132(),
            ),
            CoreObjectField::new(
              get_001223(),
              CoreObjectFieldOperator::Hidden(None),
              get_001224(),
            ),
            CoreObjectField::new(
              get_001302(),
              CoreObjectFieldOperator::Hidden(None),
              get_001303(),
            ),
            CoreObjectField::new(
              get_001380(),
              CoreObjectFieldOperator::Hidden(None),
              get_001381(),
            ),
            CoreObjectField::new(
              get_001459(),
              CoreObjectFieldOperator::Hidden(None),
              get_001473(),
            ),
            CoreObjectField::new(
              get_001610(),
              CoreObjectFieldOperator::Hidden(None),
              get_001611(),
            ),
            CoreObjectField::new(
              get_001747(),
              CoreObjectFieldOperator::Hidden(None),
              get_001748(),
            ),
            CoreObjectField::new(
              get_001840(),
              CoreObjectFieldOperator::Hidden(None),
              get_001841(),
            ),
            CoreObjectField::new(
              get_000094(),
              CoreObjectFieldOperator::Hidden(None),
              get_001928(),
            ),
            CoreObjectField::new(
              get_002003(),
              CoreObjectFieldOperator::Hidden(None),
              get_002004(),
            ),
            CoreObjectField::new(
              get_000903(),
              CoreObjectFieldOperator::Hidden(None),
              get_002088(),
            ),
            CoreObjectField::new(
              get_000896(),
              CoreObjectFieldOperator::Hidden(None),
              get_002242(),
            ),
            CoreObjectField::new(
              get_002314(),
              CoreObjectFieldOperator::Hidden(None),
              get_002325(),
            ),
            CoreObjectField::new(
              get_000067(),
              CoreObjectFieldOperator::Hidden(None),
              get_002401(),
            ),
            CoreObjectField::new(
              get_001836(),
              CoreObjectFieldOperator::Hidden(None),
              get_002491(),
            ),
            CoreObjectField::new(
              get_002585(),
              CoreObjectFieldOperator::Hidden(None),
              get_002586(),
            ),
            CoreObjectField::new(
              get_002678(),
              CoreObjectFieldOperator::Hidden(None),
              get_002679(),
            ),
            CoreObjectField::new(
              get_002788(),
              CoreObjectFieldOperator::Hidden(None),
              get_002789(),
            ),
            CoreObjectField::new(
              get_000098(),
              CoreObjectFieldOperator::Hidden(None),
              get_002890(),
            ),
            CoreObjectField::new(
              get_003022(),
              CoreObjectFieldOperator::Hidden(None),
              get_003023(),
            ),
            CoreObjectField::new(
              get_003093(),
              CoreObjectFieldOperator::Hidden(None),
              get_003094(),
            ),
            CoreObjectField::new(
              get_002480(),
              CoreObjectFieldOperator::Hidden(None),
              get_003184(),
            ),
            CoreObjectField::new(
              get_004473(),
              CoreObjectFieldOperator::Hidden(None),
              get_004474(),
            ),
            CoreObjectField::new(
              get_000073(),
              CoreObjectFieldOperator::Hidden(None),
              get_004566(),
            ),
            CoreObjectField::new(
              get_004655(),
              CoreObjectFieldOperator::Hidden(None),
              get_004656(),
            ),
            CoreObjectField::new(
              get_004751(),
              CoreObjectFieldOperator::Hidden(None),
              get_004752(),
            ),
            CoreObjectField::new(
              get_003895(),
              CoreObjectFieldOperator::Hidden(None),
              get_004828(),
            ),
            CoreObjectField::new(
              get_004904(),
              CoreObjectFieldOperator::Hidden(None),
              get_004905(),
            ),
            CoreObjectField::new(
              get_000636(),
              CoreObjectFieldOperator::Hidden(None),
              get_004983(),
            ),
            CoreObjectField::new(
              get_000639(),
              CoreObjectFieldOperator::Hidden(None),
              get_005067(),
            ),
            CoreObjectField::new(
              get_005149(),
              CoreObjectFieldOperator::Hidden(None),
              get_005150(),
            ),
            CoreObjectField::new(
              get_002868(),
              CoreObjectFieldOperator::Hidden(None),
              get_005226(),
            ),
            CoreObjectField::new(
              get_005301(),
              CoreObjectFieldOperator::Hidden(None),
              get_005302(),
            ),
            CoreObjectField::new(
              get_005463(),
              CoreObjectFieldOperator::Hidden(None),
              get_005464(),
            ),
            CoreObjectField::new(
              get_005599(),
              CoreObjectFieldOperator::Hidden(None),
              get_005600(),
            ),
            CoreObjectField::new(
              get_005668(),
              CoreObjectFieldOperator::Hidden(None),
              get_005669(),
            ),
            CoreObjectField::new(
              get_005765(),
              CoreObjectFieldOperator::Hidden(None),
              get_005766(),
            ),
            CoreObjectField::new(
              get_005853(),
              CoreObjectFieldOperator::Hidden(None),
              get_005854(),
            ),
            CoreObjectField::new(
              get_005922(),
              CoreObjectFieldOperator::Hidden(None),
              get_005925(),
            ),
            CoreObjectField::new(
              get_006111(),
              CoreObjectFieldOperator::Hidden(None),
              get_006112(),
            ),
            CoreObjectField::new(
              get_006391(),
              CoreObjectFieldOperator::Hidden(None),
              get_006392(),
            ),
            CoreObjectField::new(
              get_006489(),
              CoreObjectFieldOperator::Hidden(None),
              get_006490(),
            ),
            CoreObjectField::new(
              get_006628(),
              CoreObjectFieldOperator::Hidden(None),
              get_006629(),
            ),
            CoreObjectField::new(
              get_006719(),
              CoreObjectFieldOperator::Hidden(None),
              get_006720(),
            ),
            CoreObjectField::new(
              get_006861(),
              CoreObjectFieldOperator::Hidden(None),
              get_006862(),
            ),
            CoreObjectField::new(
              get_007057(),
              CoreObjectFieldOperator::Hidden(None),
              get_007058(),
            ),
            CoreObjectField::new(
              get_007198(),
              CoreObjectFieldOperator::Hidden(None),
              get_007199(),
            ),
            CoreObjectField::new(
              get_007275(),
              CoreObjectFieldOperator::Hidden(None),
              get_007276(),
            ),
            CoreObjectField::new(
              get_007352(),
              CoreObjectFieldOperator::Hidden(None),
              get_007353(),
            ),
            CoreObjectField::new(
              get_007542(),
              CoreObjectFieldOperator::Hidden(None),
              get_007543(),
            ),
            CoreObjectField::new(
              get_007632(),
              CoreObjectFieldOperator::Hidden(None),
              get_007633(),
            ),
            CoreObjectField::new(
              get_007703(),
              CoreObjectFieldOperator::Hidden(None),
              get_007704(),
            ),
            CoreObjectField::new(
              get_007779(),
              CoreObjectFieldOperator::Hidden(None),
              get_007780(),
            ),
            CoreObjectField::new(
              get_007774(),
              CoreObjectFieldOperator::Hidden(None),
              get_007902(),
            ),
            CoreObjectField::new(
              get_008014(),
              CoreObjectFieldOperator::Hidden(None),
              get_008015(),
            ),
            CoreObjectField::new(
              get_008129(),
              CoreObjectFieldOperator::Hidden(None),
              get_008130(),
            ),
            CoreObjectField::new(
              get_002775(),
              CoreObjectFieldOperator::Hidden(None),
              get_008273(),
            ),
            CoreObjectField::new(
              get_008343(),
              CoreObjectFieldOperator::Hidden(None),
              get_008344(),
            ),
            CoreObjectField::new(
              get_005431(),
              CoreObjectFieldOperator::Hidden(None),
              get_008411(),
            ),
            CoreObjectField::new(
              get_004438(),
              CoreObjectFieldOperator::Hidden(None),
              get_008483(),
            ),
            CoreObjectField::new(
              get_000120(),
              CoreObjectFieldOperator::Hidden(None),
              get_008552(),
            ),
            CoreObjectField::new(
              get_008694(),
              CoreObjectFieldOperator::Hidden(None),
              get_008695(),
            ),
            CoreObjectField::new(
              get_008777(),
              CoreObjectFieldOperator::Hidden(None),
              get_008778(),
            ),
            CoreObjectField::new(
              get_002322(),
              CoreObjectFieldOperator::Hidden(None),
              get_008912(),
            ),
            CoreObjectField::new(
              get_009017(),
              CoreObjectFieldOperator::Hidden(None),
              get_009018(),
            ),
          ],
        ))
      }
    }
    token_fns::get_000000()
  }
}
